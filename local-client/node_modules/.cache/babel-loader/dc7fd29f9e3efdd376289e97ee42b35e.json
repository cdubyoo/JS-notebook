{"ast":null,"code":"(function (Prism) {\n  // CAREFUL!\n  // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n  var strings = [// normal string\n  // 1 capturing group\n  /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source, // here doc\n  // 2 capturing groups\n  /<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source].join('|');\n  Prism.languages['shell-session'] = {\n    'info': {\n      // foo@bar:~/files$ exit\n      // foo@bar$ exit\n      pattern: /^[^\\r\\n$#*!]+(?=[$#])/m,\n      alias: 'punctuation',\n      inside: {\n        'path': {\n          pattern: /(:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        'user': /^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,\n        'punctuation': /:/\n      }\n    },\n    'command': {\n      pattern: RegExp(/[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () {\n        return strings;\n      })),\n      greedy: true,\n      inside: {\n        'bash': {\n          pattern: /(^[$#]\\s*)[\\s\\S]+/,\n          lookbehind: true,\n          alias: 'language-bash',\n          inside: Prism.languages.bash\n        },\n        'shell-symbol': {\n          pattern: /^[$#]/,\n          alias: 'important'\n        }\n      }\n    },\n    'output': /.(?:.*(?:[\\r\\n]|.$))*/\n  };\n  Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n})(Prism);","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-shell-session.js"],"names":["Prism","strings","source","join","languages","pattern","alias","inside","lookbehind","RegExp","replace","greedy","bash"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB;AACA;AAEA,MAAIC,OAAO,GAAG,CACb;AACA;AACA,0DAAwDC,MAH3C,EAKb;AACA;AACA,4CAA0CA,MAP7B,EAQZC,IARY,CAQP,GARO,CAAd;AAUAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,eAAhB,IAAmC;AAClC,YAAQ;AACP;AACA;AACAC,MAAAA,OAAO,EAAE,wBAHF;AAIPC,MAAAA,KAAK,EAAE,aAJA;AAKPC,MAAAA,MAAM,EAAE;AACP,gBAAQ;AACPF,UAAAA,OAAO,EAAE,YADF;AAEPG,UAAAA,UAAU,EAAE;AAFL,SADD;AAKP,gBAAQ,yCALD;AAMP,uBAAe;AANR;AALD,KAD0B;AAelC,eAAW;AACVH,MAAAA,OAAO,EAAEI,MAAM,CAAC,oCAAoCP,MAApC,CAA2CQ,OAA3C,CAAmD,UAAnD,EAA+D,YAAY;AAAE,eAAOT,OAAP;AAAiB,OAA9F,CAAD,CADL;AAEVU,MAAAA,MAAM,EAAE,IAFE;AAGVJ,MAAAA,MAAM,EAAE;AACP,gBAAQ;AACPF,UAAAA,OAAO,EAAE,mBADF;AAEPG,UAAAA,UAAU,EAAE,IAFL;AAGPF,UAAAA,KAAK,EAAE,eAHA;AAIPC,UAAAA,MAAM,EAAEP,KAAK,CAACI,SAAN,CAAgBQ;AAJjB,SADD;AAOP,wBAAgB;AACfP,UAAAA,OAAO,EAAE,OADM;AAEfC,UAAAA,KAAK,EAAE;AAFQ;AAPT;AAHE,KAfuB;AA+BlC,cAAU;AA/BwB,GAAnC;AAkCAN,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAhB,IAAgCJ,KAAK,CAACI,SAAN,CAAgB,cAAhB,IAAkCJ,KAAK,CAACI,SAAN,CAAgB,eAAhB,CAAlE;AAEA,CAnDA,EAmDCJ,KAnDD,CAAD","sourcesContent":["(function (Prism) {\n\n\t// CAREFUL!\n\t// The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n\tvar strings = [\n\t\t// normal string\n\t\t// 1 capturing group\n\t\t/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source,\n\n\t\t// here doc\n\t\t// 2 capturing groups\n\t\t/<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source\n\t].join('|');\n\n\tPrism.languages['shell-session'] = {\n\t\t'info': {\n\t\t\t// foo@bar:~/files$ exit\n\t\t\t// foo@bar$ exit\n\t\t\tpattern: /^[^\\r\\n$#*!]+(?=[$#])/m,\n\t\t\talias: 'punctuation',\n\t\t\tinside: {\n\t\t\t\t'path': {\n\t\t\t\t\tpattern: /(:)[\\s\\S]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'user': /^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'command': {\n\t\t\tpattern: RegExp(/[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () { return strings; })),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpattern: /(^[$#]\\s*)[\\s\\S]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-bash',\n\t\t\t\t\tinside: Prism.languages.bash\n\t\t\t\t},\n\t\t\t\t'shell-symbol': {\n\t\t\t\t\tpattern: /^[$#]/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'output': /.(?:.*(?:[\\r\\n]|.$))*/\n\t};\n\n\tPrism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}