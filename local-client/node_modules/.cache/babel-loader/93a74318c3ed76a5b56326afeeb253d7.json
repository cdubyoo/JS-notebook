{"ast":null,"code":"Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-scss.min.js"],"names":["Prism","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAqBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA6B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,OAAO,EAAC,sCAAT;AAAgDC,IAAAA,UAAU,EAAC,CAAC;AAA5D,GAAT;AAAwEC,EAAAA,MAAM,EAAC;AAACF,IAAAA,OAAO,EAAC,yCAAT;AAAmDG,IAAAA,MAAM,EAAC;AAACC,MAAAA,IAAI,EAAC;AAAN;AAA1D,GAA/E;AAA2JC,EAAAA,GAAG,EAAC,yBAA/J;AAAyLC,EAAAA,QAAQ,EAAC;AAACN,IAAAA,OAAO,EAAC,gFAAT;AAA0FG,IAAAA,MAAM,EAAC;AAACI,MAAAA,MAAM,EAAC;AAACP,QAAAA,OAAO,EAAC,GAAT;AAAaQ,QAAAA,KAAK,EAAC;AAAnB,OAAR;AAAwCC,MAAAA,WAAW,EAAC,SAApD;AAA8DC,MAAAA,QAAQ,EAAC;AAAvE;AAAjG,GAAlM;AAAqYC,EAAAA,QAAQ,EAAC;AAACX,IAAAA,OAAO,EAAC,2CAAT;AAAqDG,IAAAA,MAAM,EAAC;AAACO,MAAAA,QAAQ,EAAC;AAAV;AAA5D;AAA9Y,CAA7B,CAArB,EAAmiBf,KAAK,CAACC,SAAN,CAAgBgB,YAAhB,CAA6B,MAA7B,EAAoC,QAApC,EAA6C;AAACC,EAAAA,OAAO,EAAC,CAAC,qGAAD,EAAuG;AAACb,IAAAA,OAAO,EAAC,2BAAT;AAAqCC,IAAAA,UAAU,EAAC,CAAC;AAAjD,GAAvG;AAAT,CAA7C,CAAniB,EAAuvBN,KAAK,CAACC,SAAN,CAAgBgB,YAAhB,CAA6B,MAA7B,EAAoC,WAApC,EAAgD;AAACF,EAAAA,QAAQ,EAAC;AAAV,CAAhD,CAAvvB,EAA40Bf,KAAK,CAACC,SAAN,CAAgBgB,YAAhB,CAA6B,MAA7B,EAAoC,UAApC,EAA+C;AAACH,EAAAA,WAAW,EAAC;AAACT,IAAAA,OAAO,EAAC,SAAT;AAAmBQ,IAAAA,KAAK,EAAC;AAAzB,GAAb;AAAkDM,EAAAA,SAAS,EAAC;AAACd,IAAAA,OAAO,EAAC,4BAAT;AAAsCQ,IAAAA,KAAK,EAAC;AAA5C,GAA5D;AAAmHO,EAAAA,OAAO,EAAC,oBAA3H;AAAgJC,EAAAA,IAAI,EAAC;AAAChB,IAAAA,OAAO,EAAC,UAAT;AAAoBQ,IAAAA,KAAK,EAAC;AAA1B,GAArJ;AAA0LS,EAAAA,QAAQ,EAAC;AAACjB,IAAAA,OAAO,EAAC,iDAAT;AAA2DC,IAAAA,UAAU,EAAC,CAAC;AAAvE;AAAnM,CAA/C,CAA50B,EAA0oCN,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBK,MAArB,CAA4BC,MAA5B,CAAmCe,IAAnC,GAAwCvB,KAAK,CAACC,SAAN,CAAgBC,IAAlsC","sourcesContent":["Prism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)?url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},property:{pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},boolean:/\\b(?:true|false)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"},operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.languages.scss;"]},"metadata":{},"sourceType":"script"}