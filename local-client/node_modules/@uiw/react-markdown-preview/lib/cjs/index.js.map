{"version":3,"sources":["../../src/index.tsx"],"names":["React","forwardRef","props","ref","className","source","style","onScroll","onMouseOver","other","mdp","createRef","loadedLang","useRef","highlight","current","codes","getElementsByTagName","val","tag","parentNode","tagName","test","trim","lang","replace","includes","push","Prism","highlightElement","cls","reactMarkdownProps","allowDangerousHtml","allowNode","node","index","parent","type","value","a","e","plugins","gfm"],"mappings":"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","sourcesContent":["import React, { useEffect, useImperativeHandle } from 'react';\nimport ReactMarkdown, { ReactMarkdownProps } from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-markup';\nimport { loadLang } from './langs';\nimport './styles/markdown.less';\nimport './styles/markdowncolor.less';\n\nexport type MarkdownPreviewProps = {\n  className?: string;\n  source?: string;\n  style?: React.CSSProperties;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n} & ReactMarkdownProps;\n\nexport type MarkdownPreviewRef = {\n  mdp: React.RefObject<HTMLDivElement>;\n  lang: string[],\n} & MarkdownPreviewProps;\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const { className, source, style, onScroll, onMouseOver, ...other  } = props || {};\n  const mdp = React.createRef<HTMLDivElement>();\n  const loadedLang = React.useRef<string[]>(['markup']);\n  useEffect(() => {\n    highlight();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [source]);\n\n  async function highlight() {\n    if (!mdp.current) return;\n    const codes = mdp.current.getElementsByTagName('code') as unknown as HTMLElement[];\n    for (const val of codes) {\n      const tag = val.parentNode as HTMLElement;\n      if (tag && tag.tagName === 'PRE' && /^language-/.test(val.className.trim())) {\n        const lang = val.className.trim().replace(/^language-/, '');\n        try {\n          if (!loadedLang.current.includes(lang as never)) {\n            loadedLang.current.push(lang);\n            await loadLang(lang);\n          }\n          await Prism.highlightElement(val);\n        } catch (error) { }\n      }\n    }\n  }\n\n  useImperativeHandle(ref, () => ({ ...props, lang: loadedLang.current, mdp }), [mdp, props]);\n\n  const cls = `wmde-markdown wmde-markdown-color ${className || ''}`;\n  const reactMarkdownProps = {\n    allowDangerousHtml: true,\n    allowNode: (node, index, parent) => {\n      if (node.type === 'html' && reactMarkdownProps.allowDangerousHtml) {\n        // filter style\n        node.value = (node.value as string).replace(/<((style|script|link|input|form)|\\/(style|script|link|input|form))(\\s?[^>]*>)/gi, (a: string) => {\n          return a.replace(/[<>]/g, (e: string) => (({ '<': '&lt;', '>': '&gt;' } as { [key: string]: string })[e]))\n        });\n      }\n      return true;\n    },\n    ...other,\n    plugins: [gfm,  ...(other.plugins || [])],\n    source: source || '',\n  } as ReactMarkdownProps;\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} className={cls} style={style}>\n      <ReactMarkdown {...reactMarkdownProps} />\n    </div>\n  );\n});\n"]}