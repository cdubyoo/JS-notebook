{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[286],{454:function(e,a){Prism.languages.ocaml={comment:/\\(\\*[\\s\\S]*?\\*\\)/,string:[{pattern:/\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,greedy:!0},{pattern:/(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,greedy:!0}],number:/\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,directive:{pattern:/\\B#\\w+/,alias:\"important\"},label:{pattern:/\\B~\\w+/,alias:\"function\"},type_variable:{pattern:/\\B'\\w+/,alias:\"function\"},variant:{pattern:/`\\w+/,alias:\"variable\"},module:{pattern:/\\b[A-Z]\\w+/,alias:\"variable\"},keyword:/\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,boolean:/\\b(?:false|true)\\b/,operator:/:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,punctuation:/[(){}\\[\\]|.,:;]|\\b_\\b/}}}]);","name":"static/js/286.2ee9e8a1.chunk.js","map":{"version":3,"sources":["static/js/286.2ee9e8a1.chunk.js"],"names":["this","push","454","module","exports","Prism","languages","ocaml","comment","string","pattern","greedy","number","directive","alias","label","type_variable","variant","keyword","boolean","operator","punctuation"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,MAAQ,CACtBC,QAAW,mBACXC,OAAU,CAAC,CACTC,QAAS,wBACTC,QAAQ,GACP,CACDD,QAAS,qDACTC,QAAQ,IAEVC,OAAU,yEACVC,UAAa,CACXH,QAAS,SACTI,MAAO,aAETC,MAAS,CACPL,QAAS,SACTI,MAAO,YAETE,cAAiB,CACfN,QAAS,SACTI,MAAO,YAETG,QAAW,CACTP,QAAS,OACTI,MAAO,YAETX,OAAU,CACRO,QAAS,aACTI,MAAO,YAITI,QAAW,gSACXC,QAAW,qBAEXC,SAAY,8FACZC,YAAe"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[286],{\n\n/***/ 454:\n/***/ (function(module, exports) {\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type_variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-ocaml.js"],"names":["Prism","languages","ocaml","pattern","greedy","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,aAAW,kBADY;AAEvB,YAAU,CACT;AACCC,WAAO,EAAE,uBADV;AAECC,UAAM,EAAE;AAFT,GADS,EAKT;AACCD,WAAO,EAAE,oDADV;AAECC,UAAM,EAAE;AAFT,GALS,CAFa;AAYvB,YAAU,wEAZa;AAavB,eAAa;AACZD,WAAO,EAAE,QADG;AAEZE,SAAK,EAAE;AAFK,GAbU;AAiBvB,WAAS;AACRF,WAAO,EAAE,QADD;AAERE,SAAK,EAAE;AAFC,GAjBc;AAqBvB,mBAAiB;AAChBF,WAAO,EAAE,QADO;AAEhBE,SAAK,EAAE;AAFS,GArBM;AAyBvB,aAAW;AACVF,WAAO,EAAE,MADC;AAEVE,SAAK,EAAE;AAFG,GAzBY;AA6BvB,YAAU;AACTF,WAAO,EAAE,YADA;AAETE,SAAK,EAAE;AAFE,GA7Ba;AAiCvB;AACA;AACA,aAAW,+RAnCY;AAoCvB,aAAW,oBApCY;AAqCvB;AACA,cAAY,6FAtCW;AAuCvB,iBAAe;AAvCQ,CAAxB,C","file":"x","sourcesContent":["Prism.languages.ocaml = {\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n\t'directive': {\n\t\tpattern: /\\B#\\w+/,\n\t\talias: 'important'\n\t},\n\t'label': {\n\t\tpattern: /\\B~\\w+/,\n\t\talias: 'function'\n\t},\n\t'type_variable': {\n\t\tpattern: /\\B'\\w+/,\n\t\talias: 'function'\n\t},\n\t'variant': {\n\t\tpattern: /`\\w+/,\n\t\talias: 'variable'\n\t},\n\t'module': {\n\t\tpattern: /\\b[A-Z]\\w+/,\n\t\talias: 'variable'\n\t},\n\t// For the list of keywords and operators,\n\t// see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t// Custom operators are allowed\n\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n\t'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n"]}}