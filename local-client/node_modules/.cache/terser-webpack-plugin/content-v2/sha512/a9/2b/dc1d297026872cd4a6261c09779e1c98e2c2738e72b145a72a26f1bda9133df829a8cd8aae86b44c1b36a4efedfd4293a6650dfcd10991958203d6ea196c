{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[35],{203:function(e,t){Prism.languages.autoit={comment:[/;.*/,{pattern:/(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,lookbehind:!0}],url:{pattern:/(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^\\s*)#\\w+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,variable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/}}}]);","name":"static/js/35.c073b308.chunk.js","map":{"version":3,"sources":["static/js/35.c073b308.chunk.js"],"names":["this","push","203","module","exports","Prism","languages","autoit","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEnEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAAS,CACvBC,QAAS,CAAC,MAAO,CACfC,QAAS,gEACTC,YAAY,IAEdC,IAAK,CACHF,QAAS,gDACTC,YAAY,GAEdE,OAAQ,CACNH,QAAS,kCACTI,QAAQ,EACRC,OAAQ,CACNC,SAAU,iBAGdC,UAAW,CACTP,QAAS,cACTC,YAAY,EACZO,MAAO,WAETC,SAAU,cACVH,SAAU,UACVI,QAAS,yOACTC,OAAQ,kDACRC,QAAS,sBACTC,SAAU,+CACVC,YAAa"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[35],{\n\n/***/ 203:\n/***/ (function(module, exports) {\n\nPrism.languages.autoit = {\n  comment: [/;.*/, {\n    pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n    lookbehind: !0\n  }],\n  url: {\n    pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      variable: /([%$@])\\w+\\1/\n    }\n  },\n  directive: {\n    pattern: /(^\\s*)#\\w+/m,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  function: /\\b\\w+(?=\\()/,\n  variable: /[$@]\\w+/,\n  keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n  punctuation: /[\\[\\]().,:]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-autoit.min.js"],"names":["Prism","languages","autoit","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuB;AAACC,SAAO,EAAC,CAAC,KAAD,EAAO;AAACC,WAAO,EAAC,+DAAT;AAAyEC,cAAU,EAAC,CAAC;AAArF,GAAP,CAAT;AAAyGC,KAAG,EAAC;AAACF,WAAO,EAAC,+CAAT;AAAyDC,cAAU,EAAC,CAAC;AAArE,GAA7G;AAAqLE,QAAM,EAAC;AAACH,WAAO,EAAC,iCAAT;AAA2CI,UAAM,EAAC,CAAC,CAAnD;AAAqDC,UAAM,EAAC;AAACC,cAAQ,EAAC;AAAV;AAA5D,GAA5L;AAAmRC,WAAS,EAAC;AAACP,WAAO,EAAC,aAAT;AAAuBC,cAAU,EAAC,CAAC,CAAnC;AAAqCO,SAAK,EAAC;AAA3C,GAA7R;AAAmVC,UAAQ,EAAC,aAA5V;AAA0WH,UAAQ,EAAC,SAAnX;AAA6XI,SAAO,EAAC,wOAArY;AAA8mBC,QAAM,EAAC,iDAArnB;AAAuqBC,SAAO,EAAC,qBAA/qB;AAAqsBC,UAAQ,EAAC,8CAA9sB;AAA6vBC,aAAW,EAAC;AAAzwB,CAAvB,C","file":"x","sourcesContent":["Prism.languages.autoit={comment:[/;.*/,{pattern:/(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,lookbehind:!0}],url:{pattern:/(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^\\s*)#\\w+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,variable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/};"]}}