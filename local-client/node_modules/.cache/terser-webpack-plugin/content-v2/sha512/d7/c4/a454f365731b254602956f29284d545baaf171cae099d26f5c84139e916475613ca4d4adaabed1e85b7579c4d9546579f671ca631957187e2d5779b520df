{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[134],{302:function(e,t){!function(e){for(var t=/[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source,n=0;n<2;n++)t=t.replace(/<expr>/g,(function(){return t}));t=t.replace(/<expr>/g,/[^\\s\\S]/.source);var r={comment:/<#--[\\s\\S]*?-->/,string:[{pattern:/\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,greedy:!0},{pattern:RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:<expr>)*?\\})*\\1/.source.replace(/<expr>/g,(function(){return t}))),greedy:!0,inside:{interpolation:{pattern:RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g,(function(){return t}))),lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:null}}}}],keyword:/\\b(?:as)\\b/,boolean:/\\b(?:true|false)\\b/,\"builtin-function\":{pattern:/((?:^|[^?])\\?\\s*)\\w+/,lookbehind:!0,alias:\"function\"},function:/\\w+(?=\\s*\\()/,number:/\\d+(?:\\.\\d+)?/,operator:/\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,punctuation:/[,;.:()[\\]{}]/};r.string[1].inside.interpolation.inside.rest=r,e.languages.ftl={\"ftl-comment\":{pattern:/^<#--[\\s\\S]*/,alias:\"comment\"},\"ftl-directive\":{pattern:/^<[\\s\\S]+>$/,inside:{directive:{pattern:/(^<\\/?)[#@][a-z]\\w*/i,lookbehind:!0,alias:\"keyword\"},punctuation:/^<\\/?|\\/?>$/,content:{pattern:/[\\s\\S]*\\S[\\s\\S]*/,alias:\"ftl\",inside:r}}},\"ftl-interpolation\":{pattern:/^\\$\\{[\\s\\S]*\\}$/,inside:{punctuation:/^\\$\\{|\\}$/,content:{pattern:/[\\s\\S]*\\S[\\s\\S]*/,alias:\"ftl\",inside:r}}}},e.hooks.add(\"before-tokenize\",(function(n){var r=RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g,(function(){return t})),\"gi\");e.languages[\"markup-templating\"].buildPlaceholders(n,\"ftl\",r)})),e.hooks.add(\"after-tokenize\",(function(t){e.languages[\"markup-templating\"].tokenizePlaceholders(t,\"ftl\")}))}(Prism)}}]);","name":"static/js/134.63327805.chunk.js","map":{"version":3,"sources":["static/js/134.63327805.chunk.js"],"names":["this","push","302","module","exports","Prism","FTL_EXPR","source","i","replace","ftl","comment","string","pattern","greedy","RegExp","inside","interpolation","lookbehind","interpolation-punctuation","alias","rest","keyword","boolean","builtin-function","function","number","operator","punctuation","languages","ftl-comment","ftl-directive","directive","content","ftl-interpolation","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAKT,IAFA,IAAIC,EAAW,iGAAiGC,OAEvGC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAWA,EAASG,QAAQ,WAAW,WACrC,OAAOH,KAIXA,EAAWA,EAASG,QAAQ,UAAW,UAAUF,QACjD,IAAIG,EAAM,CACRC,QAAW,kBACXC,OAAU,CAAC,CAETC,QAAS,iCACTC,QAAQ,GACP,CACDD,QAASE,OAAO,sDAAsDR,OAAOE,QAAQ,WAAW,WAC9F,OAAOH,MAETQ,QAAQ,EACRE,OAAQ,CACNC,cAAiB,CACfJ,QAASE,OAAO,2CAA2CR,OAAOE,QAAQ,WAAW,WACnF,OAAOH,MAETY,YAAY,EACZF,OAAQ,CACNG,4BAA6B,CAC3BN,QAAS,YACTO,MAAO,eAETC,KAAM,UAKdC,QAAW,aACXC,QAAW,qBACXC,mBAAoB,CAClBX,QAAS,uBACTK,YAAY,EACZE,MAAO,YAETK,SAAY,eACZC,OAAU,gBACVC,SAAY,4EACZC,YAAe,iBAEjBlB,EAAIE,OAAO,GAAGI,OAAOC,cAAcD,OAAOK,KAAOX,EACjDL,EAAMwB,UAAUnB,IAAM,CACpBoB,cAAe,CAEbjB,QAAS,eACTO,MAAO,WAETW,gBAAiB,CACflB,QAAS,cACTG,OAAQ,CACNgB,UAAa,CACXnB,QAAS,uBACTK,YAAY,EACZE,MAAO,WAETQ,YAAe,cACfK,QAAW,CACTpB,QAAS,mBACTO,MAAO,MACPJ,OAAQN,KAIdwB,oBAAqB,CACnBrB,QAAS,kBACTG,OAAQ,CACNY,YAAe,YACfK,QAAW,CACTpB,QAAS,mBACTO,MAAO,MACPJ,OAAQN,MAKhBL,EAAM8B,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,IAAIxB,EAAUE,OAAO,mEAAmER,OAAOE,QAAQ,WAAW,WAChH,OAAOH,KACL,MACJD,EAAMwB,UAAU,qBAAqBS,kBAAkBD,EAAK,MAAOxB,MAErER,EAAM8B,MAAMC,IAAI,kBAAkB,SAAUC,GAC1ChC,EAAMwB,UAAU,qBAAqBU,qBAAqBF,EAAK,UA7FnE,CA+FGhC"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[134],{\n\n/***/ 302:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // https://freemarker.apache.org/docs/dgui_template_exp.html\n  // FTL expression with 4 levels of nesting supported\n  var FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n\n  for (var i = 0; i < 2; i++) {\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n      return FTL_EXPR;\n    });\n  }\n\n  FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n  var ftl = {\n    'comment': /<#--[\\s\\S]*?-->/,\n    'string': [{\n      // raw string\n      pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n      greedy: true\n    }, {\n      pattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:<expr>)*?\\})*\\1/.source.replace(/<expr>/g, function () {\n        return FTL_EXPR;\n      })),\n      greedy: true,\n      inside: {\n        'interpolation': {\n          pattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () {\n            return FTL_EXPR;\n          })),\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        }\n      }\n    }],\n    'keyword': /\\b(?:as)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'builtin-function': {\n      pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'function': /\\w+(?=\\s*\\()/,\n    'number': /\\d+(?:\\.\\d+)?/,\n    'operator': /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n    'punctuation': /[,;.:()[\\]{}]/\n  };\n  ftl.string[1].inside.interpolation.inside.rest = ftl;\n  Prism.languages.ftl = {\n    'ftl-comment': {\n      // the pattern is shortened to be more efficient\n      pattern: /^<#--[\\s\\S]*/,\n      alias: 'comment'\n    },\n    'ftl-directive': {\n      pattern: /^<[\\s\\S]+>$/,\n      inside: {\n        'directive': {\n          pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'punctuation': /^<\\/?|\\/?>$/,\n        'content': {\n          pattern: /[\\s\\S]*\\S[\\s\\S]*/,\n          alias: 'ftl',\n          inside: ftl\n        }\n      }\n    },\n    'ftl-interpolation': {\n      pattern: /^\\$\\{[\\s\\S]*\\}$/,\n      inside: {\n        'punctuation': /^\\$\\{|\\}$/,\n        'content': {\n          pattern: /[\\s\\S]*\\S[\\s\\S]*/,\n          alias: 'ftl',\n          inside: ftl\n        }\n      }\n    }\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () {\n      return FTL_EXPR;\n    }), 'gi');\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n  });\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-ftl.js"],"names":["Prism","FTL_EXPR","source","i","replace","ftl","pattern","greedy","RegExp","inside","lookbehind","alias","rest","string","interpolation","languages","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\n\t// https://freemarker.apache.org/docs/dgui_template_exp.html\n\n\t// FTL expression with 4 levels of nesting supported\n\tvar FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n\tfor (var i = 0; i < 2; i++) {\n\t\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () { return FTL_EXPR; });\n\t}\n\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n\n\tvar ftl = {\n\t\t'comment': /<#--[\\s\\S]*?-->/,\n\t\t'string': [\n\t\t\t{\n\t\t\t\t// raw string\n\t\t\t\tpattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:<expr>)*?\\})*\\1/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trest: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'keyword': /\\b(?:as)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'builtin-function': {\n\t\t\tpattern: /((?:^|[^?])\\?\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'function': /\\w+(?=\\s*\\()/,\n\t\t'number': /\\d+(?:\\.\\d+)?/,\n\t\t'operator': /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n\t\t'punctuation': /[,;.:()[\\]{}]/\n\t};\n\n\tftl.string[1].inside.interpolation.inside.rest = ftl;\n\n\tPrism.languages.ftl = {\n\t\t'ftl-comment': {\n\t\t\t// the pattern is shortened to be more efficient\n\t\t\tpattern: /^<#--[\\s\\S]*/,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'ftl-directive': {\n\t\t\tpattern: /^<[\\s\\S]+>$/,\n\t\t\tinside: {\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(^<\\/?)[#@][a-z]\\w*/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'punctuation': /^<\\/?|\\/?>$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /[\\s\\S]*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'ftl-interpolation': {\n\t\t\tpattern: /^\\$\\{[\\s\\S]*\\}$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\$\\{|\\}$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /[\\s\\S]*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; }), 'gi');\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n\t});\n\n}(Prism));\n"]}}