{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\jbook\\\\src\\\\components\\\\text-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport './text-editor.css';\nimport { useState, useEffect, useRef } from 'react';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst TextEditor = () => {\n  _s();\n\n  const ref = useRef(null);\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState('# Header');\n  useEffect(() => {\n    const listener = event => {\n      if (ref.current && event.target && ref.current.contains(event.target)) {\n        console.log('element clicked on is inside editor');\n      } else {\n        console.log('element clicked  is not inside editor');\n      }\n\n      setEditing(false);\n    };\n\n    document.addEventListener('click', listener, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('click', listener, {\n        capture: true\n      });\n    };\n  });\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: value,\n        onChange: v => setValue(v || '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor card\",\n    onClick: () => setEditing(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextEditor, \"a6oFOEIf4SMYKqUrBqu+AxnRHMo=\");\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/text-editor.tsx"],"names":["useState","useEffect","useRef","MDEditor","TextEditor","ref","editing","setEditing","value","setValue","listener","event","current","target","contains","console","log","document","addEventListener","capture","removeEventListener","v"],"mappings":";;;;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,GAAG,GAAGH,MAAM,CAAwB,IAAxB,CAAlB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,UAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAIC,KAAD,IAAuB;AACpC,UAAIN,GAAG,CAACO,OAAJ,IAAeD,KAAK,CAACE,MAArB,IAA+BR,GAAG,CAACO,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAnC,EAA+E;AAC3EE,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH;;AAGDT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATD;;AAUAU,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCR,QAAnC,EAA6C;AAAES,MAAAA,OAAO,EAAC;AAAV,KAA7C;AAEA,WAAO,MAAM;AACTF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCV,QAAtC,EAAgD;AAAES,QAAAA,OAAO,EAAC;AAAV,OAAhD;AACH,KAFD;AAGH,GAhBQ,CAAT;;AAkBA,MAAIb,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAED,GAAlC;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEG,KAAjB;AAAwB,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,IAAI,EAAN;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAE,MAAMd,UAAU,CAAC,IAAD,CAA3D;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,MAAM,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAvCD;;GAAMJ,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import './text-editor.css'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport MDEditor from '@uiw/react-md-editor'\r\n\r\nconst TextEditor: React.FC = () => {\r\n    const ref = useRef<HTMLDivElement | null>(null)\r\n    const [editing, setEditing] = useState(false)\r\n    const [value, setValue] = useState('# Header')\r\n\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent) => {\r\n            if (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n                console.log('element clicked on is inside editor')\r\n            } else {\r\n                console.log('element clicked  is not inside editor')\r\n            }\r\n            \r\n\r\n            setEditing(false)\r\n        }\r\n        document.addEventListener('click', listener, { capture:true })\r\n\r\n        return () => {\r\n            document.removeEventListener('click', listener, { capture:true })\r\n        }\r\n    })\r\n\r\n    if (editing) {\r\n        return (\r\n            <div className=\"text-editor\" ref={ref}>\r\n                <MDEditor value={value} onChange={(v) => setValue(v || '')} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-editor card\" onClick={() => setEditing(true)}>\r\n            <div className=\"card-content\">\r\n                <MDEditor.Markdown source={value} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextEditor"]},"metadata":{},"sourceType":"module"}