{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[366],{534:function(e,t){!function(e){var t=/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source,a=/\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,n={pattern:RegExp(t+\"[bx]\"),alias:\"number\"},i={pattern:/&[a-z_][a-z_0-9]*/i},s={pattern:/((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,lookbehind:!0,alias:\"keyword\"},r={pattern:/(^|\\s+)(?:proc\\s+\\w+|quit|run|data(?!\\=))\\b/i,alias:\"keyword\",lookbehind:!0},o=[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^\\s*|;\\s*)\\*[^;]*;/m,lookbehind:!0}],l={pattern:RegExp(t),greedy:!0},c=/[$%@.(){}\\[\\];,\\\\]/,u={pattern:/%?\\w+(?=\\()/,alias:\"keyword\"},d={function:u,\"arg-value\":{pattern:/(\\s*=\\s*)[A-Z\\.]+/i,lookbehind:!0},operator:/=/,\"macro-variable\":i,arg:{pattern:/[A-Z]+/i,alias:\"keyword\"},number:a,\"numeric-constant\":n,punctuation:c,string:l},p={pattern:/\\b(?:format|put)\\b=?[\\w'$.]+/im,inside:{keyword:/^(?:format|put)(?=\\=)/i,equals:/=/,format:{pattern:/(?:\\w|\\$\\d)+\\.\\d?/i,alias:\"number\"}}},m={pattern:/\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,inside:{keyword:/^(?:format|put)/i,format:{pattern:/[\\w$]+\\.\\d?/,alias:\"number\"}}},b={pattern:/((?:^|[\\s])=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,lookbehind:!0,alias:\"keyword\"},g={pattern:/(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,lookbehind:!0,alias:\"keyword\"},k=/accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/.source,y={pattern:RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g,(function(){return k})),\"i\"),lookbehind:!0,inside:{keyword:RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g,(function(){return k})),\"i\"),action:{pattern:/(?:action)/i,alias:\"keyword\"},comment:o,function:u,\"arg-value\":d[\"arg-value\"],operator:d.operator,argument:d.arg,number:a,\"numeric-constant\":n,punctuation:c,string:l}},S={pattern:/((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?=\\=)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,lookbehind:!0};e.languages.sas={datalines:{pattern:/^(\\s*)(?:(?:data)?lines|cards);[\\s\\S]+?^\\s*;/im,lookbehind:!0,alias:\"string\",inside:{keyword:{pattern:/^(?:(?:data)?lines|cards)/i},punctuation:/;/}},\"proc-sql\":{pattern:/(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,lookbehind:!0,inside:{sql:{pattern:RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g,(function(){return t})),\"im\"),alias:\"language-sql\",inside:e.languages.sql},\"global-statements\":b,\"sql-statements\":{pattern:/(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,lookbehind:!0,alias:\"keyword\"},number:a,\"numeric-constant\":n,punctuation:c,string:l}},\"proc-groovy\":{pattern:/(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment:o,groovy:{pattern:RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g,(function(){return t})),\"im\"),lookbehind:!0,alias:\"language-groovy\",inside:e.languages.groovy},keyword:S,\"submit-statement\":g,\"global-statements\":b,number:a,\"numeric-constant\":n,punctuation:c,string:l}},\"proc-lua\":{pattern:/(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment:o,lua:{pattern:RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g,(function(){return t})),\"im\"),lookbehind:!0,alias:\"language-lua\",inside:e.languages.lua},keyword:S,\"submit-statement\":g,\"global-statements\":b,number:a,\"numeric-constant\":n,punctuation:c,string:l}},\"proc-cas\":{pattern:/(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment:o,\"statement-var\":{pattern:/((?:^|\\s)=?)saveresult\\s+[^;]+/im,lookbehind:!0,inside:{statement:{pattern:/^saveresult\\s+\\S+/i,inside:{keyword:/^(?:saveresult)/i}},rest:d}},\"cas-actions\":y,statement:{pattern:/((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,lookbehind:!0,inside:d},step:r,keyword:S,function:u,format:p,altformat:m,\"global-statements\":b,number:a,\"numeric-constant\":n,punctuation:c,string:l}},\"proc-args\":{pattern:RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g,(function(){return t})),\"im\"),lookbehind:!0,inside:d},\"macro-keyword\":s,\"macro-variable\":i,\"macro-string-functions\":{pattern:/((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,lookbehind:!0,inside:{function:{pattern:/%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,alias:\"keyword\"},\"macro-keyword\":s,\"macro-variable\":i,\"escaped-char\":{pattern:/%['\"()<>=\\xac^~;,#]/i},punctuation:c}},\"macro-declaration\":{pattern:/^%macro[^;]+(?=;)/im,inside:{keyword:/%macro/i}},\"macro-end\":{pattern:/^%mend[^;]+(?=;)/im,inside:{keyword:/%mend/i}},macro:{pattern:/%_\\w+(?=\\()/,alias:\"keyword\"},input:{pattern:/\\binput\\s+[-\\w\\s/*.$&]+;/i,inside:{input:{alias:\"keyword\",pattern:/^input/i},comment:o,number:a,\"numeric-constant\":n}},\"options-args\":{pattern:/(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,lookbehind:!0,inside:d},\"cas-actions\":y,comment:o,function:u,format:p,altformat:m,\"numeric-constant\":n,datetime:{pattern:RegExp(t+\"(?:dt?|t)\"),alias:\"number\"},string:l,step:r,keyword:S,\"operator-keyword\":{pattern:/\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,alias:\"operator\"},number:a,operator:/\\*\\*?|\\|\\|?|!!?|\\xa6\\xa6?|<[>=]?|>[<=]?|[-+\\/=&]|[~\\xac^]=?/i,punctuation:c}}(Prism)}}]);","name":"static/js/366.a50540eb.chunk.js","map":{"version":3,"sources":["static/js/366.a50540eb.chunk.js"],"names":["this","push","534","module","exports","Prism","stringPattern","source","number","numericConstant","pattern","RegExp","alias","macroVariable","macroKeyword","lookbehind","step","comment","string","greedy","punctuation","func","args","function","arg-value","operator","macro-variable","arg","numeric-constant","format","inside","keyword","equals","altformat","globalStatements","submitStatement","actionSets","casActions","replace","action","argument","keywords","languages","sas","datalines","proc-sql","sql","global-statements","sql-statements","proc-groovy","groovy","submit-statement","proc-lua","lua","proc-cas","statement-var","statement","rest","cas-actions","proc-args","macro-keyword","macro-string-functions","escaped-char","macro-declaration","macro-end","macro","input","options-args","datetime","operator-keyword"],"mappings":"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"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[366],{\n\n/***/ 534:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n  var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n  var numericConstant = {\n    pattern: RegExp(stringPattern + '[bx]'),\n    alias: 'number'\n  };\n  var macroVariable = {\n    pattern: /&[a-z_][a-z_0-9]*/i\n  };\n  var macroKeyword = {\n    pattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var step = {\n    pattern: /(^|\\s+)(?:proc\\s+\\w+|quit|run|data(?!\\=))\\b/i,\n    alias: 'keyword',\n    lookbehind: true\n  };\n  var comment = [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^\\s*|;\\s*)\\*[^;]*;/m,\n    lookbehind: true\n  }];\n  var string = {\n    pattern: RegExp(stringPattern),\n    greedy: true\n  };\n  var punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n  var func = {\n    pattern: /%?\\w+(?=\\()/,\n    alias: 'keyword'\n  };\n  var args = {\n    'function': func,\n    'arg-value': {\n      pattern: /(\\s*=\\s*)[A-Z\\.]+/i,\n      lookbehind: true\n    },\n    'operator': /=/,\n    'macro-variable': macroVariable,\n    'arg': {\n      pattern: /[A-Z]+/i,\n      alias: 'keyword'\n    },\n    'number': number,\n    'numeric-constant': numericConstant,\n    'punctuation': punctuation,\n    'string': string\n  };\n  var format = {\n    pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/im,\n    inside: {\n      'keyword': /^(?:format|put)(?=\\=)/i,\n      'equals': /=/,\n      'format': {\n        pattern: /(?:\\w|\\$\\d)+\\.\\d?/i,\n        alias: 'number'\n      }\n    }\n  };\n  var altformat = {\n    pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n    inside: {\n      'keyword': /^(?:format|put)/i,\n      'format': {\n        pattern: /[\\w$]+\\.\\d?/,\n        alias: 'number'\n      }\n    }\n  };\n  var globalStatements = {\n    pattern: /((?:^|[\\s])=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var submitStatement = {\n    pattern: /(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var actionSets = /accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/.source;\n  var casActions = {\n    pattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function () {\n      return actionSets;\n    }), 'i'),\n    lookbehind: true,\n    inside: {\n      'keyword': RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n        return actionSets;\n      }), 'i'),\n      'action': {\n        pattern: /(?:action)/i,\n        alias: 'keyword'\n      },\n      'comment': comment,\n      'function': func,\n      'arg-value': args['arg-value'],\n      'operator': args.operator,\n      'argument': args.arg,\n      'number': number,\n      'numeric-constant': numericConstant,\n      'punctuation': punctuation,\n      'string': string\n    }\n  };\n  var keywords = {\n    pattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?=\\=)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,\n    lookbehind: true\n  };\n  Prism.languages.sas = {\n    'datalines': {\n      pattern: /^(\\s*)(?:(?:data)?lines|cards);[\\s\\S]+?^\\s*;/im,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        'keyword': {\n          pattern: /^(?:(?:data)?lines|cards)/i\n        },\n        'punctuation': /;/\n      }\n    },\n    'proc-sql': {\n      pattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'sql': {\n          pattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          alias: 'language-sql',\n          inside: Prism.languages.sql\n        },\n        'global-statements': globalStatements,\n        'sql-statements': {\n          pattern: /(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-groovy': {\n      pattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'groovy': {\n          pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          lookbehind: true,\n          alias: 'language-groovy',\n          inside: Prism.languages.groovy\n        },\n        'keyword': keywords,\n        'submit-statement': submitStatement,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-lua': {\n      pattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'lua': {\n          pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          lookbehind: true,\n          alias: 'language-lua',\n          inside: Prism.languages.lua\n        },\n        'keyword': keywords,\n        'submit-statement': submitStatement,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-cas': {\n      pattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'statement-var': {\n          pattern: /((?:^|\\s)=?)saveresult\\s+[^;]+/im,\n          lookbehind: true,\n          inside: {\n            'statement': {\n              pattern: /^saveresult\\s+\\S+/i,\n              inside: {\n                keyword: /^(?:saveresult)/i\n              }\n            },\n            rest: args\n          }\n        },\n        'cas-actions': casActions,\n        'statement': {\n          pattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n          lookbehind: true,\n          inside: args\n        },\n        'step': step,\n        'keyword': keywords,\n        'function': func,\n        'format': format,\n        'altformat': altformat,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-args': {\n      pattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function () {\n        return stringPattern;\n      }), 'im'),\n      lookbehind: true,\n      inside: args\n    },\n\n    /*Special keywords within macros*/\n    'macro-keyword': macroKeyword,\n    'macro-variable': macroVariable,\n    'macro-string-functions': {\n      pattern: /((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n      lookbehind: true,\n      inside: {\n        'function': {\n          pattern: /%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,\n          alias: 'keyword'\n        },\n        'macro-keyword': macroKeyword,\n        'macro-variable': macroVariable,\n        'escaped-char': {\n          pattern: /%['\"()<>=¬^~;,#]/i\n        },\n        'punctuation': punctuation\n      }\n    },\n    'macro-declaration': {\n      pattern: /^%macro[^;]+(?=;)/im,\n      inside: {\n        'keyword': /%macro/i\n      }\n    },\n    'macro-end': {\n      pattern: /^%mend[^;]+(?=;)/im,\n      inside: {\n        'keyword': /%mend/i\n      }\n    },\n\n    /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n    'macro': {\n      pattern: /%_\\w+(?=\\()/,\n      alias: 'keyword'\n    },\n    'input': {\n      pattern: /\\binput\\s+[-\\w\\s/*.$&]+;/i,\n      inside: {\n        'input': {\n          alias: 'keyword',\n          pattern: /^input/i\n        },\n        'comment': comment,\n        'number': number,\n        'numeric-constant': numericConstant\n      }\n    },\n    'options-args': {\n      pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n      lookbehind: true,\n      inside: args\n    },\n    'cas-actions': casActions,\n    'comment': comment,\n    'function': func,\n    'format': format,\n    'altformat': altformat,\n    'numeric-constant': numericConstant,\n    'datetime': {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: RegExp(stringPattern + '(?:dt?|t)'),\n      alias: 'number'\n    },\n    'string': string,\n    'step': step,\n    'keyword': keywords,\n    // In SAS Studio syntax highlighting, these operators are styled like keywords\n    'operator-keyword': {\n      pattern: /\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n      alias: 'operator'\n    },\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    'number': number,\n    'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/i,\n    'punctuation': punctuation\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-sas.js"],"names":["Prism","stringPattern","source","number","numericConstant","pattern","RegExp","alias","macroVariable","macroKeyword","lookbehind","step","comment","string","greedy","punctuation","func","args","format","inside","altformat","globalStatements","submitStatement","actionSets","casActions","replace","operator","arg","keywords","languages","sas","sql","groovy","lua","keyword","rest"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n\n\tvar number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n\tvar numericConstant = {\n\t\tpattern: RegExp(stringPattern + '[bx]'),\n\t\talias: 'number'\n\t};\n\n\tvar macroVariable = {\n\t\tpattern: /&[a-z_][a-z_0-9]*/i\n\t};\n\n\tvar macroKeyword = {\n\t\tpattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar step = {\n\t\tpattern: /(^|\\s+)(?:proc\\s+\\w+|quit|run|data(?!\\=))\\b/i,\n\t\talias: 'keyword',\n\t\tlookbehind: true\n\t};\n\n\tvar comment = [\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t{\n\t\t\tpattern: /(^\\s*|;\\s*)\\*[^;]*;/m,\n\t\t\tlookbehind: true\n\t\t}\n\t];\n\n\tvar string = {\n\t\tpattern: RegExp(stringPattern),\n\t\tgreedy: true\n\t};\n\n\tvar punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n\n\tvar func = {\n\t\tpattern: /%?\\w+(?=\\()/,\n\t\talias: 'keyword'\n\t};\n\n\tvar args = {\n\t\t'function': func,\n\t\t'arg-value': {\n\t\t\tpattern: /(\\s*=\\s*)[A-Z\\.]+/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': /=/,\n\t\t'macro-variable': macroVariable,\n\t\t'arg': {\n\t\t\tpattern: /[A-Z]+/i,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'number': number,\n\t\t'numeric-constant': numericConstant,\n\t\t'punctuation': punctuation,\n\t\t'string': string\n\t};\n\n\tvar format = {\n\t\tpattern: /\\b(?:format|put)\\b=?[\\w'$.]+/im,\n\t\tinside: {\n\t\t\t'keyword': /^(?:format|put)(?=\\=)/i,\n\t\t\t'equals': /=/,\n\t\t\t'format': {\n\t\t\t\tpattern: /(?:\\w|\\$\\d)+\\.\\d?/i,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tvar altformat = {\n\t\tpattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n\t\tinside: {\n\t\t\t'keyword': /^(?:format|put)/i,\n\t\t\t'format': {\n\t\t\t\tpattern: /[\\w$]+\\.\\d?/,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tvar globalStatements = {\n\t\tpattern: /((?:^|[\\s])=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar submitStatement = {\n\t\tpattern: /(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar actionSets = /accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/.source;\n\n\tvar casActions = {\n\t\tpattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function () { return actionSets; }), 'i'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'keyword': RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () { return actionSets; }), 'i'),\n\t\t\t'action': {\n\t\t\t\tpattern: /(?:action)/i,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'comment': comment,\n\t\t\t'function': func,\n\t\t\t'arg-value': args['arg-value'],\n\t\t\t'operator': args.operator,\n\t\t\t'argument': args.arg,\n\t\t\t'number': number,\n\t\t\t'numeric-constant': numericConstant,\n\t\t\t'punctuation': punctuation,\n\t\t\t'string': string\n\t\t}\n\t};\n\n\tvar keywords = {\n\t\tpattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?=\\=)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,\n\t\tlookbehind: true,\n\t};\n\n\tPrism.languages.sas = {\n\t\t'datalines': {\n\t\t\tpattern: /^(\\s*)(?:(?:data)?lines|cards);[\\s\\S]+?^\\s*;/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /^(?:(?:data)?lines|cards)/i\n\t\t\t\t},\n\t\t\t\t'punctuation': /;/\n\t\t\t}\n\t\t},\n\n\t\t'proc-sql': {\n\t\t\tpattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'sql': {\n\t\t\t\t\tpattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\talias: 'language-sql',\n\t\t\t\t\tinside: Prism.languages.sql\n\t\t\t\t},\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'sql-statements': {\n\t\t\t\t\tpattern: /(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-groovy': {\n\t\t\tpattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'groovy': {\n\t\t\t\t\tpattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-groovy',\n\t\t\t\t\tinside: Prism.languages.groovy\n\t\t\t\t},\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'submit-statement': submitStatement,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-lua': {\n\t\t\tpattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'lua': {\n\t\t\t\t\tpattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-lua',\n\t\t\t\t\tinside: Prism.languages.lua\n\t\t\t\t},\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'submit-statement': submitStatement,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-cas': {\n\t\t\tpattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'statement-var': {\n\t\t\t\t\tpattern: /((?:^|\\s)=?)saveresult\\s+[^;]+/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'statement': {\n\t\t\t\t\t\t\tpattern: /^saveresult\\s+\\S+/i,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\tkeyword: /^(?:saveresult)/i\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: args\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'cas-actions': casActions,\n\t\t\t\t'statement': {\n\t\t\t\t\tpattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: args\n\t\t\t\t},\n\t\t\t\t'step': step,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'function': func,\n\t\t\t\t'format': format,\n\t\t\t\t'altformat': altformat,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-args': {\n\t\t\tpattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\tlookbehind: true,\n\t\t\tinside: args\n\t\t},\n\t\t/*Special keywords within macros*/\n\t\t'macro-keyword': macroKeyword,\n\t\t'macro-variable': macroVariable,\n\t\t'macro-string-functions': {\n\t\t\tpattern: /((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': {\n\t\t\t\t\tpattern: /%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'macro-keyword': macroKeyword,\n\t\t\t\t'macro-variable': macroVariable,\n\t\t\t\t'escaped-char': {\n\t\t\t\t\tpattern: /%['\"()<>=¬^~;,#]/i,\n\t\t\t\t},\n\t\t\t\t'punctuation': punctuation\n\t\t\t}\n\t\t},\n\t\t'macro-declaration': {\n\t\t\tpattern: /^%macro[^;]+(?=;)/im,\n\t\t\tinside: {\n\t\t\t\t'keyword': /%macro/i,\n\t\t\t}\n\t\t},\n\t\t'macro-end': {\n\t\t\tpattern: /^%mend[^;]+(?=;)/im,\n\t\t\tinside: {\n\t\t\t\t'keyword': /%mend/i,\n\t\t\t}\n\t\t},\n\t\t/*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n\t\t'macro': {\n\t\t\tpattern: /%_\\w+(?=\\()/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'input': {\n\t\t\tpattern: /\\binput\\s+[-\\w\\s/*.$&]+;/i,\n\t\t\tinside: {\n\t\t\t\t'input': {\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t\tpattern: /^input/i,\n\t\t\t\t},\n\t\t\t\t'comment': comment,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant\n\t\t\t}\n\t\t},\n\t\t'options-args': {\n\t\t\tpattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: args\n\t\t},\n\t\t'cas-actions': casActions,\n\t\t'comment': comment,\n\t\t'function': func,\n\t\t'format': format,\n\t\t'altformat': altformat,\n\t\t'numeric-constant': numericConstant,\n\t\t'datetime': {\n\t\t\t// '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n\t\t\tpattern: RegExp(stringPattern + '(?:dt?|t)'),\n\t\t\talias: 'number'\n\t\t},\n\t\t'string': string,\n\t\t'step': step,\n\t\t'keyword': keywords,\n\t\t// In SAS Studio syntax highlighting, these operators are styled like keywords\n\t\t'operator-keyword': {\n\t\t\tpattern: /\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n\t\t\talias: 'operator'\n\t\t},\n\t\t// Decimal (1.2e23), hexadecimal (0c1x)\n\t\t'number': number,\n\t\t'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/i,\n\t\t'punctuation': punctuation\n\t};\n\n}(Prism));\n"]}}