{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[122],{290:function(e,a){Prism.languages[\"excel-formula\"]={comment:{pattern:/(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,lookbehind:!0,greedy:!0},string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},reference:{pattern:/(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,greedy:!0,alias:\"string\",inside:{operator:/!$/,punctuation:/'/,sheet:{pattern:/[^[\\]]+$/,alias:\"function\"},file:{pattern:/\\[[^[\\]]+\\]$/,inside:{punctuation:/[[\\]]/}},path:/[\\s\\S]+/}},\"function-name\":{pattern:/\\b[A-Z]\\w*(?=\\()/i,alias:\"keyword\"},range:{pattern:/\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,alias:\"property\",inside:{operator:/:/,cell:/\\$?[A-Z]+\\$?\\d+/i,column:/\\$?[A-Z]+/i,row:/\\$?\\d+/}},cell:{pattern:/\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,alias:\"property\"},number:/(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,boolean:/\\b(?:TRUE|FALSE)\\b/i,operator:/[-+*/^%=&,]|<[=>]?|>=?/,punctuation:/[[\\]();{}|]/},Prism.languages.xlsx=Prism.languages.xls=Prism.languages[\"excel-formula\"]}}]);","name":"static/js/122.87a33eb8.chunk.js","map":{"version":3,"sources":["static/js/122.87a33eb8.chunk.js"],"names":["this","push","290","module","exports","Prism","languages","comment","pattern","lookbehind","greedy","string","reference","alias","inside","operator","punctuation","sheet","file","path","function-name","range","cell","column","row","number","boolean"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAU,iBAAmB,CACjCC,QAAW,CACTC,QAAS,qCACTC,YAAY,EACZC,QAAQ,GAEVC,OAAU,CACRH,QAAS,sBACTE,QAAQ,GAEVE,UAAa,CAQXJ,QAAS,uEACTE,QAAQ,EACRG,MAAO,SACPC,OAAQ,CACNC,SAAY,KACZC,YAAe,IACfC,MAAS,CACPT,QAAS,WACTK,MAAO,YAETK,KAAQ,CACNV,QAAS,eACTM,OAAQ,CACNE,YAAe,UAGnBG,KAAQ,YAGZC,gBAAiB,CACfZ,QAAS,oBACTK,MAAO,WAETQ,MAAS,CACPb,QAAS,uEACTK,MAAO,WACPC,OAAQ,CACNC,SAAY,IACZO,KAAQ,mBACRC,OAAU,aACVC,IAAO,WAGXF,KAAQ,CAGNd,QAAS,uDACTK,MAAO,YAETY,OAAU,+CACVC,QAAW,sBACXX,SAAY,yBACZC,YAAe,eAEjBX,MAAMC,UAAgB,KAAID,MAAMC,UAAe,IAAID,MAAMC,UAAU"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[122],{\n\n/***/ 290:\n/***/ (function(module, exports) {\n\nPrism.languages['excel-formula'] = {\n  'comment': {\n    pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n    greedy: true\n  },\n  'reference': {\n    // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n    // Sales!B2\n    // 'Winter sales'!B2\n    // [Sales.xlsx]Jan!B2:B5\n    // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n    // '[Sales.xlsx]Jan sales'!B2:B5\n    // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n    pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'operator': /!$/,\n      'punctuation': /'/,\n      'sheet': {\n        pattern: /[^[\\]]+$/,\n        alias: 'function'\n      },\n      'file': {\n        pattern: /\\[[^[\\]]+\\]$/,\n        inside: {\n          'punctuation': /[[\\]]/\n        }\n      },\n      'path': /[\\s\\S]+/\n    }\n  },\n  'function-name': {\n    pattern: /\\b[A-Z]\\w*(?=\\()/i,\n    alias: 'keyword'\n  },\n  'range': {\n    pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n    alias: 'property',\n    inside: {\n      'operator': /:/,\n      'cell': /\\$?[A-Z]+\\$?\\d+/i,\n      'column': /\\$?[A-Z]+/i,\n      'row': /\\$?\\d+/\n    }\n  },\n  'cell': {\n    // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n    // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n    pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n    alias: 'property'\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n  'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n  'punctuation': /[[\\]();{}|]/\n};\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-excel-formula.js"],"names":["Prism","languages","pattern","lookbehind","greedy","alias","inside"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgB,eAAhB,IAAmC;AAClC,aAAW;AACVC,WAAO,EAAE,oCADC;AAEVC,cAAU,EAAE,IAFF;AAGVC,UAAM,EAAE;AAHE,GADuB;AAMlC,YAAU;AACTF,WAAO,EAAE,qBADA;AAETE,UAAM,EAAE;AAFC,GANwB;AAUlC,eAAa;AACZ;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAF,WAAO,EAAE,sEAVG;AAWZE,UAAM,EAAE,IAXI;AAYZC,SAAK,EAAE,QAZK;AAaZC,UAAM,EAAE;AACP,kBAAY,IADL;AAEP,qBAAe,GAFR;AAGP,eAAS;AACRJ,eAAO,EAAE,UADD;AAERG,aAAK,EAAE;AAFC,OAHF;AAOP,cAAQ;AACPH,eAAO,EAAE,cADF;AAEPI,cAAM,EAAE;AACP,yBAAe;AADR;AAFD,OAPD;AAaP,cAAQ;AAbD;AAbI,GAVqB;AAuClC,mBAAiB;AAChBJ,WAAO,EAAE,mBADO;AAEhBG,SAAK,EAAE;AAFS,GAvCiB;AA2ClC,WAAS;AACRH,WAAO,EAAE,sEADD;AAERG,SAAK,EAAE,UAFC;AAGRC,UAAM,EAAE;AACP,kBAAY,GADL;AAEP,cAAQ,kBAFD;AAGP,gBAAU,YAHH;AAIP,aAAO;AAJA;AAHA,GA3CyB;AAqDlC,UAAQ;AACP;AACA;AACAJ,WAAO,EAAE,sDAHF;AAIPG,SAAK,EAAE;AAJA,GArD0B;AA2DlC,YAAU,8CA3DwB;AA4DlC,aAAW,qBA5DuB;AA6DlC,cAAY,wBA7DsB;AA8DlC,iBAAe;AA9DmB,CAAnC;AAiEAL,KAAK,CAACC,SAAN,CAAgB,MAAhB,IAA0BD,KAAK,CAACC,SAAN,CAAgB,KAAhB,IAAyBD,KAAK,CAACC,SAAN,CAAgB,eAAhB,CAAnD,C","file":"x","sourcesContent":["Prism.languages['excel-formula'] = {\n\t'comment': {\n\t\tpattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n\t\tgreedy: true\n\t},\n\t'reference': {\n\t\t// https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n\t\t// Sales!B2\n\t\t// 'Winter sales'!B2\n\t\t// [Sales.xlsx]Jan!B2:B5\n\t\t// D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n\t\t// '[Sales.xlsx]Jan sales'!B2:B5\n\t\t// 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n\t\tpattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n\t\tgreedy: true,\n\t\talias: 'string',\n\t\tinside: {\n\t\t\t'operator': /!$/,\n\t\t\t'punctuation': /'/,\n\t\t\t'sheet': {\n\t\t\t\tpattern: /[^[\\]]+$/,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'file': {\n\t\t\t\tpattern: /\\[[^[\\]]+\\]$/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[[\\]]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'path': /[\\s\\S]+/\n\t\t}\n\t},\n\t'function-name': {\n\t\tpattern: /\\b[A-Z]\\w*(?=\\()/i,\n\t\talias: 'keyword'\n\t},\n\t'range': {\n\t\tpattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'operator': /:/,\n\t\t\t'cell': /\\$?[A-Z]+\\$?\\d+/i,\n\t\t\t'column': /\\$?[A-Z]+/i,\n\t\t\t'row': /\\$?\\d+/\n\t\t}\n\t},\n\t'cell': {\n\t\t// Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n\t\t// To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n\t\tpattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n\t\talias: 'property'\n\t},\n\t'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n\t'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n\t'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n\t'punctuation': /[[\\]();{}|]/\n};\n\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];\n"]}}