{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[239],{407:function(e,t){Prism.languages.livescript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}],\"interpolated-string\":{pattern:/(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,lookbehind:!0},interpolation:{pattern:/(^|[^\\\\])#\\{[^}]+\\}/m,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^#\\{|\\}$/,alias:\"variable\"}}},string:/[\\s\\S]+/}},string:[{pattern:/('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/<\\[[\\s\\S]*?\\]>/,greedy:!0},/\\\\[^\\s,;\\])}]+/],regex:[{pattern:/\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,greedy:!0,inside:{comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}}},{pattern:/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,greedy:!0}],keyword:{pattern:/(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,lookbehind:!0},\"keyword-operator\":{pattern:/(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,lookbehind:!0,alias:\"operator\"},boolean:{pattern:/(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,lookbehind:!0},argument:{pattern:/(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,lookbehind:!0,alias:\"variable\"},number:/\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,identifier:/[a-z_](?:-?[a-z]|[\\d_])*/i,operator:[{pattern:/( )\\.(?= )/,lookbehind:!0},/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],punctuation:/[(){}\\[\\]|.,:;`]/},Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest=Prism.languages.livescript}}]);","name":"static/js/239.893c6d89.chunk.js","map":{"version":3,"sources":["static/js/239.893c6d89.chunk.js"],"names":["this","push","407","module","exports","Prism","languages","livescript","comment","pattern","lookbehind","interpolated-string","greedy","inside","variable","interpolation","interpolation-punctuation","alias","string","regex","keyword","keyword-operator","boolean","argument","number","identifier","operator","punctuation","rest"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,WAAa,CAC3BC,QAAS,CAAC,CACRC,QAAS,4BACTC,YAAY,GACX,CACDD,QAAS,eACTC,YAAY,IAEdC,sBAAuB,CACrBF,QAAS,kDACTC,YAAY,EACZE,QAAQ,EACRC,OAAQ,CACNC,SAAU,CACRL,QAAS,sCACTC,YAAY,GAEdK,cAAe,CACbN,QAAS,uBACTC,YAAY,EACZG,OAAQ,CACNG,4BAA6B,CAC3BP,QAAS,WACTQ,MAAO,cAIbC,OAAQ,YAGZA,OAAQ,CAAC,CACPT,QAAS,qCACTG,QAAQ,GACP,CACDH,QAAS,iBACTG,QAAQ,GACP,kBACHO,MAAO,CAAC,CACNV,QAAS,8DACTG,QAAQ,EACRC,OAAQ,CACNL,QAAS,CACPC,QAAS,eACTC,YAAY,KAGf,CACDD,QAAS,uDACTG,QAAQ,IAEVQ,QAAS,CACPX,QAAS,wQACTC,YAAY,GAEdW,mBAAoB,CAClBZ,QAAS,+JACTC,YAAY,EACZO,MAAO,YAETK,QAAS,CACPb,QAAS,iDACTC,YAAY,GAEda,SAAU,CACRd,QAAS,8BACTC,YAAY,EACZO,MAAO,YAETO,OAAQ,2DACRC,WAAY,4BACZC,SAAU,CAAC,CACTjB,QAAS,aACTC,YAAY,GACX,qLACHiB,YAAa,oBACZtB,MAAMC,UAAUC,WAAW,uBAAuBM,OAAOE,cAAcF,OAAOe,KAAOvB,MAAMC,UAAUC"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[239],{\n\n/***/ 407:\n/***/ (function(module, exports) {\n\nPrism.languages.livescript = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      variable: {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: !0\n      },\n      interpolation: {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^#\\{|\\}$/,\n            alias: \"variable\"\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  string: [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: !0\n  }, /\\\\[^\\s,;\\])}]+/],\n  regex: [{\n    pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n    greedy: !0,\n    inside: {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: !0\n      }\n    }\n  }, {\n    pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n    greedy: !0\n  }],\n  keyword: {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  \"keyword-operator\": {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  boolean: {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  argument: {\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  operator: [{\n    pattern: /( )\\.(?= )/,\n    lookbehind: !0\n  }, /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  punctuation: /[(){}\\[\\]|.,:;`]/\n}, Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest = Prism.languages.livescript;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-livescript.min.js"],"names":["Prism","languages","livescript","comment","pattern","lookbehind","greedy","inside","variable","interpolation","alias","string","regex","keyword","boolean","argument","number","identifier","operator","punctuation","rest"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,UAAhB,GAA2B;AAACC,SAAO,EAAC,CAAC;AAACC,WAAO,EAAC,2BAAT;AAAqCC,cAAU,EAAC,CAAC;AAAjD,GAAD,EAAqD;AAACD,WAAO,EAAC,cAAT;AAAwBC,cAAU,EAAC,CAAC;AAApC,GAArD,CAAT;AAAsG,yBAAsB;AAACD,WAAO,EAAC,iDAAT;AAA2DC,cAAU,EAAC,CAAC,CAAvE;AAAyEC,UAAM,EAAC,CAAC,CAAjF;AAAmFC,UAAM,EAAC;AAACC,cAAQ,EAAC;AAACJ,eAAO,EAAC,qCAAT;AAA+CC,kBAAU,EAAC,CAAC;AAA3D,OAAV;AAAwEI,mBAAa,EAAC;AAACL,eAAO,EAAC,sBAAT;AAAgCC,kBAAU,EAAC,CAAC,CAA5C;AAA8CE,cAAM,EAAC;AAAC,uCAA4B;AAACH,mBAAO,EAAC,UAAT;AAAoBM,iBAAK,EAAC;AAA1B;AAA7B;AAArD,OAAtF;AAAgNC,YAAM,EAAC;AAAvN;AAA1F,GAA5H;AAAybA,QAAM,EAAC,CAAC;AAACP,WAAO,EAAC,oCAAT;AAA8CE,UAAM,EAAC,CAAC;AAAtD,GAAD,EAA0D;AAACF,WAAO,EAAC,gBAAT;AAA0BE,UAAM,EAAC,CAAC;AAAlC,GAA1D,EAA+F,gBAA/F,CAAhc;AAAijBM,OAAK,EAAC,CAAC;AAACR,WAAO,EAAC,6DAAT;AAAuEE,UAAM,EAAC,CAAC,CAA/E;AAAiFC,UAAM,EAAC;AAACJ,aAAO,EAAC;AAACC,eAAO,EAAC,cAAT;AAAwBC,kBAAU,EAAC,CAAC;AAApC;AAAT;AAAxF,GAAD,EAA2I;AAACD,WAAO,EAAC,sDAAT;AAAgEE,UAAM,EAAC,CAAC;AAAxE,GAA3I,CAAvjB;AAA8wBO,SAAO,EAAC;AAACT,WAAO,EAAC,uQAAT;AAAiRC,cAAU,EAAC,CAAC;AAA7R,GAAtxB;AAAsjC,sBAAmB;AAACD,WAAO,EAAC,8JAAT;AAAwKC,cAAU,EAAC,CAAC,CAApL;AAAsLK,SAAK,EAAC;AAA5L,GAAzkC;AAAixCI,SAAO,EAAC;AAACV,WAAO,EAAC,gDAAT;AAA0DC,cAAU,EAAC,CAAC;AAAtE,GAAzxC;AAAk2CU,UAAQ,EAAC;AAACX,WAAO,EAAC,6BAAT;AAAuCC,cAAU,EAAC,CAAC,CAAnD;AAAqDK,SAAK,EAAC;AAA3D,GAA32C;AAAk7CM,QAAM,EAAC,0DAAz7C;AAAo/CC,YAAU,EAAC,2BAA//C;AAA2hDC,UAAQ,EAAC,CAAC;AAACd,WAAO,EAAC,YAAT;AAAsBC,cAAU,EAAC,CAAC;AAAlC,GAAD,EAAsC,mLAAtC,CAApiD;AAA+vDc,aAAW,EAAC;AAA3wD,CAA3B,EAA0zDnB,KAAK,CAACC,SAAN,CAAgBC,UAAhB,CAA2B,qBAA3B,EAAkDK,MAAlD,CAAyDE,aAAzD,CAAuEF,MAAvE,CAA8Ea,IAA9E,GAAmFpB,KAAK,CAACC,SAAN,CAAgBC,UAA75D,C","file":"x","sourcesContent":["Prism.languages.livescript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}],\"interpolated-string\":{pattern:/(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,lookbehind:!0},interpolation:{pattern:/(^|[^\\\\])#\\{[^}]+\\}/m,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^#\\{|\\}$/,alias:\"variable\"}}},string:/[\\s\\S]+/}},string:[{pattern:/('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/<\\[[\\s\\S]*?\\]>/,greedy:!0},/\\\\[^\\s,;\\])}]+/],regex:[{pattern:/\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,greedy:!0,inside:{comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}}},{pattern:/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,greedy:!0}],keyword:{pattern:/(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,lookbehind:!0},\"keyword-operator\":{pattern:/(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,lookbehind:!0,alias:\"operator\"},boolean:{pattern:/(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,lookbehind:!0},argument:{pattern:/(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,lookbehind:!0,alias:\"variable\"},number:/\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,identifier:/[a-z_](?:-?[a-z]|[\\d_])*/i,operator:[{pattern:/( )\\.(?= )/,lookbehind:!0},/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],punctuation:/[(){}\\[\\]|.,:;`]/},Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest=Prism.languages.livescript;"]}}