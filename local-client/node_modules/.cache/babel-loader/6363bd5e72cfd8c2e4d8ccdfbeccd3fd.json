{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/jbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/jbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ActionType}from'../action-types';import bundle from'../../bundler';export var updateCell=function updateCell(id,content){return{type:ActionType.UPDATE_CELL,payload:{id:id,content:content}};};export var deleteCell=function deleteCell(id){return{type:ActionType.DELETE_CELL,payload:id};};export var moveCell=function moveCell(id,direction){return{type:ActionType.MOVE_CELL,payload:{id:id,direction:direction}};};export var insertCellAfter=function insertCellAfter(id,CellType){return{type:ActionType.INSERT_CELL_AFTER,payload:{id:id,type:CellType}};};export var createBundle=function createBundle(cellId,input){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:ActionType.BUNDLE_CREATED,payload:{cellId:cellId}});_context.next=3;return bundle(input);case 3:result=_context.sent;dispatch({type:ActionType.BUNDLE_COMPLETE,payload:{cellId:cellId,bundle:{code:result.code,err:result.err}}});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/state/action-creators/index.ts"],"names":["ActionType","bundle","updateCell","id","content","type","UPDATE_CELL","payload","deleteCell","DELETE_CELL","moveCell","direction","MOVE_CELL","insertCellAfter","CellType","INSERT_CELL_AFTER","createBundle","cellId","input","dispatch","BUNDLE_CREATED","result","BUNDLE_COMPLETE","code","err"],"mappings":"iSACA,OAASA,UAAT,KAA2B,iBAA3B,CAUA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAaC,OAAb,CAAmD,CACzE,MAAO,CACHC,IAAI,CAAEL,UAAU,CAACM,WADd,CAEHC,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELC,OAAO,CAAPA,OAFK,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,EAAD,CAAkC,CACxD,MAAO,CACHE,IAAI,CAAEL,UAAU,CAACS,WADd,CAEHF,OAAO,CAAEJ,EAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACP,EAAD,CAAaQ,SAAb,CAAsD,CAC1E,MAAO,CACHN,IAAI,CAAEL,UAAU,CAACY,SADd,CAEHL,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELQ,SAAS,CAATA,SAFK,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACV,EAAD,CAAoBW,QAApB,CAAmE,CAC9F,MAAO,CACHT,IAAI,CAAEL,UAAU,CAACe,iBADd,CAEHR,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELE,IAAI,CAAES,QAFD,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAiBC,KAAjB,CAAmC,CAC3D,+FAAO,iBAAOC,QAAP,6HACHA,QAAQ,CAAC,CACLd,IAAI,CAAEL,UAAU,CAACoB,cADZ,CAELb,OAAO,CAAE,CACLU,MAAM,CAAEA,MADH,CAFJ,CAAD,CAAR,CADG,sBAQkBhB,CAAAA,MAAM,CAACiB,KAAD,CARxB,QAQGG,MARH,eAUHF,QAAQ,CAAC,CACLd,IAAI,CAAEL,UAAU,CAACsB,eADZ,CAELf,OAAO,CAAE,CACLU,MAAM,CAAEA,MADH,CAELhB,MAAM,CAAE,CACJsB,IAAI,CAAEF,MAAM,CAACE,IADT,CAEJC,GAAG,CAAEH,MAAM,CAACG,GAFR,CAFH,CAFJ,CAAD,CAAR,CAVG,sDAAP,+DAqBH,CAtBM","sourcesContent":["import {  Dispatch } from 'redux'\r\nimport { ActionType } from '../action-types'\r\nimport { \r\n    UpdateCellAction, \r\n    DeleteCellAction, \r\n    MoveCellAction, \r\n    InsertCellAfterAction,\r\n    Direction,\r\n    Action\r\n} from '../actions'\r\nimport { CellTypes } from '../cell'\r\nimport bundle from '../../bundler'\r\n\r\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\r\n    return {\r\n        type: ActionType.UPDATE_CELL,\r\n        payload: {\r\n            id,\r\n            content\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCell = (id: string): DeleteCellAction => {\r\n    return {\r\n        type: ActionType.DELETE_CELL,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\r\n    return {\r\n        type: ActionType.MOVE_CELL,\r\n        payload: {\r\n            id,\r\n            direction\r\n        }\r\n    }\r\n}\r\n\r\nexport const insertCellAfter = (id: string | null, CellType: CellTypes): InsertCellAfterAction => {\r\n    return {\r\n        type: ActionType.INSERT_CELL_AFTER,\r\n        payload: {\r\n            id,\r\n            type: CellType\r\n        }\r\n    }\r\n}\r\n\r\nexport const createBundle = (cellId: string, input: string) => {\r\n    return async (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.BUNDLE_CREATED,\r\n            payload: {\r\n                cellId: cellId\r\n            }\r\n        })\r\n\r\n        const result = await bundle(input)\r\n\r\n        dispatch({\r\n            type: ActionType.BUNDLE_COMPLETE,\r\n            payload: {\r\n                cellId: cellId,\r\n                bundle: {\r\n                    code: result.code,\r\n                    err: result.err\r\n                }\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}