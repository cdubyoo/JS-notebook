{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[232],{400:function(e,n){!function(e){for(var n=/\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source,s=0;s<5;s++)n=n.replace(/<expr>/g,(function(){return n}));n=n.replace(/<expr>/g,/[^\\s\\S]/.source);var i=e.languages.lilypond={comment:/%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\"embedded-scheme\":{pattern:RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g,(function(){return n})),\"m\"),lookbehind:!0,greedy:!0,inside:{scheme:{pattern:/^(#)[\\s\\S]+$/,lookbehind:!0,alias:\"language-scheme\",inside:{\"embedded-lilypond\":{pattern:/#\\{[\\s\\S]*?#\\}/,greedy:!0,inside:{punctuation:/^#\\{|#\\}$/,lilypond:{pattern:/[\\s\\S]+/,alias:\"language-lilypond\",inside:null}}},rest:e.languages.scheme}},punctuation:/#/}},string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":{pattern:/(\\\\new\\s+)[\\w-]+/,lookbehind:!0},keyword:{pattern:/\\\\[a-z][-\\w]*/i,inside:{punctuation:/^\\\\/}},operator:/[=|]|<<|>>/,punctuation:{pattern:/(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,lookbehind:!0},number:/\\b\\d+(?:\\/\\d+)?\\b/};i[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside=i,e.languages.ly=i}(Prism)}}]);","name":"static/js/232.b9678715.chunk.js","map":{"version":3,"sources":["static/js/232.b9678715.chunk.js"],"names":["this","push","400","module","exports","Prism","schemeExpression","source","i","replace","lilypond","languages","comment","embedded-scheme","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","embedded-lilypond","punctuation","rest","string","class-name","keyword","operator","number","ly"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAMT,IALA,IAAIC,EAAmB,mGAAmGC,OAKjHC,EAAI,EAAGA,EAFQ,EAEeA,IACrCF,EAAmBA,EAAiBG,QAAQ,WAAW,WACrD,OAAOH,KAIXA,EAAmBA,EAAiBG,QAAQ,UAAW,UAAUF,QACjE,IAAIG,EAAWL,EAAMM,UAAUD,SAAW,CACxCE,QAAW,8BACXC,kBAAmB,CACjBC,QAASC,OAAO,8DAA8DR,OAAOE,QAAQ,WAAW,WACtG,OAAOH,KACL,KACJU,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNC,OAAU,CACRL,QAAS,eACTE,YAAY,EACZI,MAAO,kBACPF,OAAQ,CACNG,oBAAqB,CACnBP,QAAS,iBACTG,QAAQ,EACRC,OAAQ,CACNI,YAAe,YACfZ,SAAY,CACVI,QAAS,UACTM,MAAO,oBACPF,OAAQ,QAKdK,KAAMlB,EAAMM,UAAUQ,SAG1BG,YAAe,MAGnBE,OAAU,CACRV,QAAS,oBACTG,QAAQ,GAEVQ,aAAc,CACZX,QAAS,mBACTE,YAAY,GAEdU,QAAW,CACTZ,QAAS,iBACTI,OAAQ,CACNI,YAAe,QAGnBK,SAAY,aACZL,YAAe,CACbR,QAAS,uGACTE,YAAY,GAEdY,OAAU,qBAEZlB,EAAS,mBAAmBQ,OAAe,OAAEA,OAAO,qBAAqBA,OAAiB,SAAEA,OAASR,EACrGL,EAAMM,UAAUkB,GAAKnB,EApEvB,CAqEGL"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[232],{\n\n/***/ 400:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source; // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n  // For some reason, this can't be 4\n\n  var recursivenessLog2 = 5;\n\n  for (var i = 0; i < recursivenessLog2; i++) {\n    schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n      return schemeExpression;\n    });\n  }\n\n  schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n  var lilypond = Prism.languages.lilypond = {\n    'comment': /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    'embedded-scheme': {\n      pattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () {\n        return schemeExpression;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'scheme': {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: true,\n          alias: 'language-scheme',\n          inside: {\n            'embedded-lilypond': {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: true,\n              inside: {\n                'punctuation': /^#\\{|#\\}$/,\n                'lilypond': {\n                  pattern: /[\\s\\S]+/,\n                  alias: 'language-lilypond',\n                  inside: null // see below\n\n                }\n              }\n            },\n            rest: Prism.languages.scheme\n          }\n        },\n        'punctuation': /#/\n      }\n    },\n    'string': {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        'punctuation': /^\\\\/\n      }\n    },\n    'operator': /[=|]|<<|>>/,\n    'punctuation': {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: true\n    },\n    'number': /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  lilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\n  Prism.languages.ly = lilypond;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-lilypond.js"],"names":["Prism","schemeExpression","source","recursivenessLog2","i","replace","lilypond","languages","pattern","RegExp","lookbehind","greedy","inside","alias","rest","scheme","ly"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,gBAAgB,GAAG,mGAAmGC,MAA1H,CAFiB,CAGjB;AACA;;AACA,MAAIC,iBAAiB,GAAG,CAAxB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAApB,EAAuCC,CAAC,EAAxC,EAA4C;AAC3CH,oBAAgB,GAAGA,gBAAgB,CAACI,OAAjB,CAAyB,SAAzB,EAAoC,YAAY;AAAE,aAAOJ,gBAAP;AAA0B,KAA5E,CAAnB;AACA;;AACDA,kBAAgB,GAAGA,gBAAgB,CAACI,OAAjB,CAAyB,SAAzB,EAAoC,UAAUH,MAA9C,CAAnB;AAGA,MAAII,QAAQ,GAAGN,KAAK,CAACO,SAAN,CAAgBD,QAAhB,GAA2B;AACzC,eAAW,6BAD8B;AAEzC,uBAAmB;AAClBE,aAAO,EAAEC,MAAM,CAAC,8DAA8DP,MAA9D,CAAqEG,OAArE,CAA6E,SAA7E,EAAwF,YAAY;AAAE,eAAOJ,gBAAP;AAA0B,OAAhI,CAAD,EAAoI,GAApI,CADG;AAElBS,gBAAU,EAAE,IAFM;AAGlBC,YAAM,EAAE,IAHU;AAIlBC,YAAM,EAAE;AACP,kBAAU;AACTJ,iBAAO,EAAE,cADA;AAETE,oBAAU,EAAE,IAFH;AAGTG,eAAK,EAAE,iBAHE;AAITD,gBAAM,EAAE;AACP,iCAAqB;AACpBJ,qBAAO,EAAE,gBADW;AAEpBG,oBAAM,EAAE,IAFY;AAGpBC,oBAAM,EAAE;AACP,+BAAe,WADR;AAEP,4BAAY;AACXJ,yBAAO,EAAE,SADE;AAEXK,uBAAK,EAAE,mBAFI;AAGXD,wBAAM,EAAE,IAHG,CAGE;;AAHF;AAFL;AAHY,aADd;AAaPE,gBAAI,EAAEd,KAAK,CAACO,SAAN,CAAgBQ;AAbf;AAJC,SADH;AAqBP,uBAAe;AArBR;AAJU,KAFsB;AA8BzC,cAAU;AACTP,aAAO,EAAE,mBADA;AAETG,YAAM,EAAE;AAFC,KA9B+B;AAkCzC,kBAAc;AACbH,aAAO,EAAE,kBADI;AAEbE,gBAAU,EAAE;AAFC,KAlC2B;AAsCzC,eAAW;AACVF,aAAO,EAAE,gBADC;AAEVI,YAAM,EAAE;AACP,uBAAe;AADR;AAFE,KAtC8B;AA4CzC,gBAAY,YA5C6B;AA6CzC,mBAAe;AACdJ,aAAO,EAAE,sGADK;AAEdE,gBAAU,EAAE;AAFE,KA7C0B;AAiDzC,cAAU;AAjD+B,GAA1C;AAoDAJ,UAAQ,CAAC,iBAAD,CAAR,CAA4BM,MAA5B,CAAmC,QAAnC,EAA6CA,MAA7C,CAAoD,mBAApD,EAAyEA,MAAzE,CAAgF,UAAhF,EAA4FA,MAA5F,GAAqGN,QAArG;AAEAN,OAAK,CAACO,SAAN,CAAgBS,EAAhB,GAAqBV,QAArB;AAEA,CApEA,EAoECN,KApED,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\n\t// allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n\t// For some reason, this can't be 4\n\tvar recursivenessLog2 = 5;\n\tfor (var i = 0; i < recursivenessLog2; i++) {\n\t\tschemeExpression = schemeExpression.replace(/<expr>/g, function () { return schemeExpression; });\n\t}\n\tschemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n\n\n\tvar lilypond = Prism.languages.lilypond = {\n\t\t'comment': /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n\t\t'embedded-scheme': {\n\t\t\tpattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () { return schemeExpression; }), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'scheme': {\n\t\t\t\t\tpattern: /^(#)[\\s\\S]+$/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-scheme',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'embedded-lilypond': {\n\t\t\t\t\t\t\tpattern: /#\\{[\\s\\S]*?#\\}/,\n\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'punctuation': /^#\\{|#\\}$/,\n\t\t\t\t\t\t\t\t'lilypond': {\n\t\t\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\t\t\talias: 'language-lilypond',\n\t\t\t\t\t\t\t\t\tinside: null // see below\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.scheme\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /#/\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\\\new\\s+)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /\\\\[a-z][-\\w]*/i,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\\\/\n\t\t\t}\n\t\t},\n\t\t'operator': /[=|]|<<|>>/,\n\t\t'punctuation': {\n\t\t\tpattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': /\\b\\d+(?:\\/\\d+)?\\b/\n\t};\n\n\tlilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\n\n\tPrism.languages.ly = lilypond;\n\n}(Prism));\n"]}}