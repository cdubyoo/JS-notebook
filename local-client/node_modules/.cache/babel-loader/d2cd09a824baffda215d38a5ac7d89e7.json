{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\jbook\\\\src\\\\components\\\\resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport './resizable.css';\nimport { useEffect, useState } from 'react';\nimport { ResizableBox } from 'react-resizable';\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n  useEffect(() => {\n    let timer;\n\n    const listener = () => {\n      // set resize refresh rate\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth); // resize code frame together with window\n\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      }\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resizable, \"m+WxLgYILcvcZeed5BdA/O/PzMM=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/resizable.tsx"],"names":["useEffect","useState","ResizableBox","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","className","minConstraints","Infinity","maxConstraints","height","resizeHandles","onResizeStop","event","data","size"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAAgD,iBAAhD;;AAOA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AACrE,MAAIC,cAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA5C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,KAAJ;;AACA,UAAMC,QAAQ,GAAG,MAAM;AAEnB;AACA,UAAID,KAAJ,EAAW;AACPE,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACH;;AACDG,MAAAA,UAAU,CAAC,MAAM;AACbT,QAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,QAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb,CAFa,CAGb;;AACA,YAAID,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA2BE,KAA/B,EAAsC;AAClCC,UAAAA,QAAQ,CAACJ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAR;AACH;AACJ,OAPS,EAOP,GAPO,CAAV;AAQH,KAdD;;AAeAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AAEA,WAAO,MAAM;AACTN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACH,KAFD;AAGH,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAIX,SAAS,KAAK,YAAlB,EAAgC;AAC5BE,IAAAA,cAAc,GAAG;AACbc,MAAAA,SAAS,EAAE,mBADE;AAEbC,MAAAA,cAAc,EAAE,CAACX,UAAU,GAAG,GAAd,EAAmBY,QAAnB,CAFH;AAGbC,MAAAA,cAAc,EAAE,CAACb,UAAU,GAAG,IAAd,EAAoBY,QAApB,CAHH;AAIbE,MAAAA,MAAM,EAAEF,QAJK;AAKbV,MAAAA,KAAK,EAAEA,KALM;AAMba,MAAAA,aAAa,EAAE,CAAC,GAAD,CANF;AAObC,MAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3Bf,QAAAA,QAAQ,CAACe,IAAI,CAACC,IAAL,CAAUjB,KAAX,CAAR;AACH;AATY,KAAjB;AAWH,GAZD,MAYO;AACHN,IAAAA,cAAc,GAAG;AACbe,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAW,EAAX,CADH;AAEbC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWf,WAAW,GAAG,GAAzB,CAFH;AAGbiB,MAAAA,MAAM,EAAE,GAHK;AAIbZ,MAAAA,KAAK,EAAEU,QAJM;AAKbG,MAAAA,aAAa,EAAE,CAAC,GAAD;AALF,KAAjB;AAOH;;AACD,sBACI,QAAC,YAAD,OAAkBnB,cAAlB;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxDD;;GAAMF,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import './resizable.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable'\r\n\r\ninterface ResizableProps {\r\n    direction: 'horizontal' | 'vertical'\r\n\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n    let resizableProps : ResizableBoxProps;\r\n    const [innerHeight, setInnerHeight] = useState(window.innerHeight)\r\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth)\r\n    const [width, setWidth] = useState(window.innerWidth * 0.75)\r\n\r\n    useEffect(() => {\r\n        let timer: any\r\n        const listener = () => {\r\n\r\n            // set resize refresh rate\r\n            if (timer) {\r\n                clearTimeout(timer)\r\n            }\r\n            setTimeout(() => {\r\n                setInnerHeight(window.innerHeight)\r\n                setInnerWidth(window.innerWidth)\r\n                // resize code frame together with window\r\n                if (window.innerWidth * 0.75 < width) {\r\n                    setWidth(window.innerWidth * 0.75)\r\n                }\r\n            }, 100)\r\n        }\r\n        window.addEventListener('resize', listener)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', listener)\r\n        }\r\n    }, [])\r\n\r\n    if (direction === 'horizontal') {\r\n        resizableProps = {\r\n            className: 'resize-horizontal',\r\n            minConstraints: [innerWidth * 0.2, Infinity],\r\n            maxConstraints: [innerWidth * 0.75, Infinity],\r\n            height: Infinity,\r\n            width: width,\r\n            resizeHandles: ['e'],\r\n            onResizeStop: (event, data) => {\r\n                setWidth(data.size.width)\r\n            }\r\n        }\r\n    } else {\r\n        resizableProps = {\r\n            minConstraints: [Infinity, 24],\r\n            maxConstraints: [Infinity, innerHeight * 0.9],\r\n            height: 300,\r\n            width: Infinity,\r\n            resizeHandles: ['s']\r\n        }\r\n    }\r\n    return (\r\n        <ResizableBox {...resizableProps} >\r\n            {children}\r\n        </ResizableBox>\r\n    )\r\n}\r\n\r\nexport default Resizable"]},"metadata":{},"sourceType":"module"}