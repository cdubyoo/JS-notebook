{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[8],{176:function(t,e){!function(t){t.languages.agda={comment:/\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},punctuation:/[(){}\\u2983\\u2984.;@]/,\"class-name\":{pattern:/((?:data|record) +)\\S+/,lookbehind:!0},function:{pattern:/(^[ \\t]*)[^:\\r\\n]+?(?=:)/m,lookbehind:!0},operator:{pattern:/(^\\s*|\\s)(?:[=|:\\u2200\\u2192\\u03bb\\\\?_]|->)(?=\\s)/,lookbehind:!0},keyword:/\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/}}(Prism)}}]);","name":"static/js/8.495fe6bc.chunk.js","map":{"version":3,"sources":["static/js/8.495fe6bc.chunk.js"],"names":["this","push","176","module","exports","Prism","languages","agda","comment","string","pattern","greedy","punctuation","class-name","lookbehind","function","operator","keyword"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,GAAG,CAElEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,KAAO,CACrBC,QAAW,4BACXC,OAAU,CACRC,QAAS,sCACTC,QAAQ,GAEVC,YAAe,wBACfC,aAAc,CACZH,QAAS,yBACTI,YAAY,GAEdC,SAAY,CACVL,QAAS,4BACTI,YAAY,GAEdE,SAAY,CACVN,QAAS,oDACTI,YAAY,GAEdG,QAAW,wWApBf,CAsBGZ"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[8],{\n\n/***/ 176:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.agda = {\n    'comment': /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n    'string': {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'punctuation': /[(){}⦃⦄.;@]/,\n    'class-name': {\n      pattern: /((?:data|record) +)\\S+/,\n      lookbehind: true\n    },\n    'function': {\n      pattern: /(^[ \\t]*)[^:\\r\\n]+?(?=:)/m,\n      lookbehind: true\n    },\n    'operator': {\n      pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-agda.js"],"names":["Prism","languages","agda","pattern","greedy","lookbehind"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjBA,OAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuB;AACtB,eAAW,2BADW;AAEtB,cAAU;AACTC,aAAO,EAAE,qCADA;AAETC,YAAM,EAAE;AAFC,KAFY;AAMtB,mBAAe,aANO;AAOtB,kBAAc;AACbD,aAAO,EAAE,wBADI;AAEbE,gBAAU,EAAE;AAFC,KAPQ;AAWtB,gBAAY;AACXF,aAAO,EAAE,2BADE;AAEXE,gBAAU,EAAE;AAFD,KAXU;AAetB,gBAAY;AACXF,aAAO,EAAE,oCADE;AAEXE,gBAAU,EAAE;AAFD,KAfU;AAmBtB,eAAW;AAnBW,GAAvB;AAqBA,CAvBA,EAuBCL,KAvBD,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tPrism.languages.agda = {\n\t\t'comment': /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n\t\t'string': {\n\t\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'punctuation': /[(){}⦃⦄.;@]/,\n\t\t'class-name': {\n\t\t\tpattern: /((?:data|record) +)\\S+/,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /(^[ \\t]*)[^:\\r\\n]+?(?=:)/m,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'operator': {\n\t\t\tpattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'keyword': /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/,\n\t};\n}(Prism));\n"]}}