{"ast":null,"code":"!function (d) {\n  function n(n) {\n    return n = n.replace(/<inner>/g, function () {\n      return \"(?:\\\\\\\\.|[^\\\\\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))\";\n    }), RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)(?:\" + n + \")\");\n  }\n\n  var e = \"(?:\\\\\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\\\\\|\\r\\n`])+\",\n      t = \"\\\\|?__(?:\\\\|__)+\\\\|?(?:(?:\\n|\\r\\n?)|$)\".replace(/__/g, function () {\n    return e;\n  }),\n      a = \"\\\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\\\|?(?:\\n|\\r\\n?)\";\n  d.languages.markdown = d.languages.extend(\"markup\", {}), d.languages.insertBefore(\"markdown\", \"prolog\", {\n    blockquote: {\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: \"punctuation\"\n    },\n    table: {\n      pattern: RegExp(\"^\" + t + a + \"(?:\" + t + \")*\", \"m\"),\n      inside: {\n        \"table-data-rows\": {\n          pattern: RegExp(\"^(\" + t + a + \")(?:\" + t + \")*$\"),\n          lookbehind: !0,\n          inside: {\n            \"table-data\": {\n              pattern: RegExp(e),\n              inside: d.languages.markdown\n            },\n            punctuation: /\\|/\n          }\n        },\n        \"table-line\": {\n          pattern: RegExp(\"^(\" + t + \")\" + a + \"$\"),\n          lookbehind: !0,\n          inside: {\n            punctuation: /\\||:?-{3,}:?/\n          }\n        },\n        \"table-header-row\": {\n          pattern: RegExp(\"^\" + t + \"$\"),\n          inside: {\n            \"table-header\": {\n              pattern: RegExp(e),\n              alias: \"important\",\n              inside: d.languages.markdown\n            },\n            punctuation: /\\|/\n          }\n        }\n      }\n    },\n    code: [{\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: !0,\n      alias: \"keyword\"\n    }, {\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: \"keyword\"\n    }, {\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: !0,\n      inside: {\n        \"code-block\": {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: !0\n        },\n        \"code-language\": {\n          pattern: /^(```).+/,\n          lookbehind: !0\n        },\n        punctuation: /```/\n      }\n    }],\n    title: [{\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: \"important\",\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: !0,\n      alias: \"important\",\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    hr: {\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    },\n    list: {\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    },\n    \"url-reference\": {\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        variable: {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: !0\n        },\n        string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        punctuation: /^[\\[\\]!:]|[<>]/\n      },\n      alias: \"url\"\n    },\n    bold: {\n      pattern: n(\"\\\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\\\b|\\\\*\\\\*(?:(?!\\\\*)<inner>|\\\\*(?:(?!\\\\*)<inner>)+\\\\*)+\\\\*\\\\*\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        content: {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: !0,\n          inside: {}\n        },\n        punctuation: /\\*\\*|__/\n      }\n    },\n    italic: {\n      pattern: n(\"\\\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\\\b|\\\\*(?:(?!\\\\*)<inner>|\\\\*\\\\*(?:(?!\\\\*)<inner>)+\\\\*\\\\*)+\\\\*\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        content: {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: !0,\n          inside: {}\n        },\n        punctuation: /[*_]/\n      }\n    },\n    strike: {\n      pattern: n(\"(~~?)(?:(?!~)<inner>)+?\\\\2\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        content: {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: !0,\n          inside: {}\n        },\n        punctuation: /~~?/\n      }\n    },\n    url: {\n      pattern: n('!?\\\\[(?:(?!\\\\])<inner>)+\\\\](?:\\\\([^\\\\s)]+(?:[\\t ]+\"(?:\\\\\\\\.|[^\"\\\\\\\\])*\")?\\\\)| ?\\\\[(?:(?!\\\\])<inner>)+\\\\])'),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        variable: {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: !0\n        },\n        content: {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: !0,\n          inside: {}\n        },\n        string: {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  }), [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function (e) {\n    [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function (n) {\n      e !== n && (d.languages.markdown[e].inside.content.inside[n] = d.languages.markdown[n]);\n    });\n  }), d.hooks.add(\"after-tokenize\", function (n) {\n    \"markdown\" !== n.language && \"md\" !== n.language || !function n(e) {\n      if (e && \"string\" != typeof e) for (var t = 0, a = e.length; t < a; t++) {\n        var i = e[t];\n\n        if (\"code\" === i.type) {\n          var r = i.content[1],\n              o = i.content[3];\n\n          if (r && o && \"code-language\" === r.type && \"code-block\" === o.type && \"string\" == typeof r.content) {\n            var l = r.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\"),\n                s = \"language-\" + (l = (/[a-z][\\w-]*/i.exec(l) || [\"\"])[0].toLowerCase());\n            o.alias ? \"string\" == typeof o.alias ? o.alias = [o.alias, s] : o.alias.push(s) : o.alias = [s];\n          }\n        } else n(i.content);\n      }\n    }(n.tokens);\n  }), d.hooks.add(\"wrap\", function (n) {\n    if (\"code-block\" === n.type) {\n      for (var e = \"\", t = 0, a = n.classes.length; t < a; t++) {\n        var i = n.classes[t],\n            r = /language-(.+)/.exec(i);\n\n        if (r) {\n          e = r[1];\n          break;\n        }\n      }\n\n      var o = d.languages[e];\n\n      if (o) {\n        var l = n.content.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\");\n        n.content = d.highlight(l, o, e);\n      } else if (e && \"none\" !== e && d.plugins.autoloader) {\n        var s = \"md-\" + new Date().valueOf() + \"-\" + Math.floor(1e16 * Math.random());\n        n.attributes.id = s, d.plugins.autoloader.loadLanguages(e, function () {\n          var n = document.getElementById(s);\n          n && (n.innerHTML = d.highlight(n.textContent, d.languages[e], e));\n        });\n      }\n    }\n  }), d.languages.md = d.languages.markdown;\n}(Prism);","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-markdown.min.js"],"names":["d","n","replace","RegExp","e","t","a","languages","markdown","extend","insertBefore","blockquote","pattern","alias","table","inside","lookbehind","punctuation","code","greedy","title","hr","list","variable","string","bold","content","italic","strike","url","forEach","hooks","add","language","length","i","type","r","o","l","s","exec","toLowerCase","push","tokens","classes","highlight","plugins","autoloader","Date","valueOf","Math","floor","random","attributes","id","loadLanguages","document","getElementById","innerHTML","textContent","md","Prism"],"mappings":"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","sourcesContent":["!function(d){function n(n){return n=n.replace(/<inner>/g,function(){return\"(?:\\\\\\\\.|[^\\\\\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))\"}),RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)(?:\"+n+\")\")}var e=\"(?:\\\\\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\\\\\|\\r\\n`])+\",t=\"\\\\|?__(?:\\\\|__)+\\\\|?(?:(?:\\n|\\r\\n?)|$)\".replace(/__/g,function(){return e}),a=\"\\\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\\\|?(?:\\n|\\r\\n?)\";d.languages.markdown=d.languages.extend(\"markup\",{}),d.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},table:{pattern:RegExp(\"^\"+t+a+\"(?:\"+t+\")*\",\"m\"),inside:{\"table-data-rows\":{pattern:RegExp(\"^(\"+t+a+\")(?:\"+t+\")*$\"),lookbehind:!0,inside:{\"table-data\":{pattern:RegExp(e),inside:d.languages.markdown},punctuation:/\\|/}},\"table-line\":{pattern:RegExp(\"^(\"+t+\")\"+a+\"$\"),lookbehind:!0,inside:{punctuation:/\\||:?-{3,}:?/}},\"table-header-row\":{pattern:RegExp(\"^\"+t+\"$\"),inside:{\"table-header\":{pattern:RegExp(e),alias:\"important\",inside:d.languages.markdown},punctuation:/\\|/}}}},code:[{pattern:/((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,lookbehind:!0,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\r\\n]+`/,alias:\"keyword\"},{pattern:/^```[\\s\\S]*?^```$/m,greedy:!0,inside:{\"code-block\":{pattern:/^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,lookbehind:!0},\"code-language\":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:n(\"\\\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\\\b|\\\\*\\\\*(?:(?!\\\\*)<inner>|\\\\*(?:(?!\\\\*)<inner>)+\\\\*)+\\\\*\\\\*\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\\s\\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\\*\\*|__/}},italic:{pattern:n(\"\\\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\\\b|\\\\*(?:(?!\\\\*)<inner>|\\\\*\\\\*(?:(?!\\\\*)<inner>)+\\\\*\\\\*)+\\\\*\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\\s\\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(\"(~~?)(?:(?!~)<inner>)+?\\\\2\"),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},url:{pattern:n('!?\\\\[(?:(?!\\\\])<inner>)+\\\\](?:\\\\([^\\\\s)]+(?:[\\t ]+\"(?:\\\\\\\\.|[^\"\\\\\\\\])*\")?\\\\)| ?\\\\[(?:(?!\\\\])<inner>)+\\\\])'),lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},content:{pattern:/(^!?\\[)[^\\]]+(?=\\])/,lookbehind:!0,inside:{}},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),[\"url\",\"bold\",\"italic\",\"strike\"].forEach(function(e){[\"url\",\"bold\",\"italic\",\"strike\"].forEach(function(n){e!==n&&(d.languages.markdown[e].inside.content.inside[n]=d.languages.markdown[n])})}),d.hooks.add(\"after-tokenize\",function(n){\"markdown\"!==n.language&&\"md\"!==n.language||!function n(e){if(e&&\"string\"!=typeof e)for(var t=0,a=e.length;t<a;t++){var i=e[t];if(\"code\"===i.type){var r=i.content[1],o=i.content[3];if(r&&o&&\"code-language\"===r.type&&\"code-block\"===o.type&&\"string\"==typeof r.content){var l=r.content.replace(/\\b#/g,\"sharp\").replace(/\\b\\+\\+/g,\"pp\"),s=\"language-\"+(l=(/[a-z][\\w-]*/i.exec(l)||[\"\"])[0].toLowerCase());o.alias?\"string\"==typeof o.alias?o.alias=[o.alias,s]:o.alias.push(s):o.alias=[s]}}else n(i.content)}}(n.tokens)}),d.hooks.add(\"wrap\",function(n){if(\"code-block\"===n.type){for(var e=\"\",t=0,a=n.classes.length;t<a;t++){var i=n.classes[t],r=/language-(.+)/.exec(i);if(r){e=r[1];break}}var o=d.languages[e];if(o){var l=n.content.replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\");n.content=d.highlight(l,o,e)}else if(e&&\"none\"!==e&&d.plugins.autoloader){var s=\"md-\"+(new Date).valueOf()+\"-\"+Math.floor(1e16*Math.random());n.attributes.id=s,d.plugins.autoloader.loadLanguages(e,function(){var n=document.getElementById(s);n&&(n.innerHTML=d.highlight(n.textContent,d.languages[e],e))})}}}),d.languages.md=d.languages.markdown}(Prism);"]},"metadata":{},"sourceType":"script"}