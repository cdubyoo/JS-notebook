{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[416],{584:function(e,n){!function(e){var n=/\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source,i=/\\)|\\((?![^|()\\n]+\\))/.source;function t(e,t){return RegExp(e.replace(/<MOD>/g,(function(){return\"(?:\"+n+\")\"})).replace(/<PAR>/g,(function(){return\"(?:\"+i+\")\"})),t||\"\")}var o={css:{pattern:/\\{[^}]+\\}/,inside:{rest:e.languages.css}},\"class-id\":{pattern:/(\\()[^)]+(?=\\))/,lookbehind:!0,alias:\"attr-value\"},lang:{pattern:/(\\[)[^\\]]+(?=\\])/,lookbehind:!0,alias:\"attr-value\"},punctuation:/[\\\\\\/]\\d+|\\S/},a=e.languages.textile=e.languages.extend(\"markup\",{phrase:{pattern:/(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,lookbehind:!0,inside:{\"block-tag\":{pattern:t(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),inside:{modifier:{pattern:t(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),lookbehind:!0,inside:o},tag:/^[a-z]\\w*/,punctuation:/\\.$/}},list:{pattern:t(/^[*#]+<MOD>*\\s+.+/.source,\"m\"),inside:{modifier:{pattern:t(/(^[*#]+)<MOD>+/.source),lookbehind:!0,inside:o},punctuation:/^[*#]+/}},table:{pattern:t(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.)?[^|]*)+\\|/.source,\"m\"),inside:{modifier:{pattern:t(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),lookbehind:!0,inside:o},punctuation:/\\||^\\./}},inline:{pattern:t(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),lookbehind:!0,inside:{bold:{pattern:t(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),lookbehind:!0},italic:{pattern:t(/(^(__?)<MOD>*).+?(?=\\2)/.source),lookbehind:!0},cite:{pattern:t(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),lookbehind:!0,alias:\"string\"},code:{pattern:t(/(^@<MOD>*).+?(?=@)/.source),lookbehind:!0,alias:\"keyword\"},inserted:{pattern:t(/(^\\+<MOD>*).+?(?=\\+)/.source),lookbehind:!0},deleted:{pattern:t(/(^-<MOD>*).+?(?=-)/.source),lookbehind:!0},span:{pattern:t(/(^%<MOD>*).+?(?=%)/.source),lookbehind:!0},modifier:{pattern:t(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),lookbehind:!0,inside:o},punctuation:/[*_%?@+\\-^~]+/}},\"link-ref\":{pattern:/^\\[[^\\]]+\\]\\S+$/m,inside:{string:{pattern:/(\\[)[^\\]]+(?=\\])/,lookbehind:!0},url:{pattern:/(\\])\\S+$/,lookbehind:!0},punctuation:/[\\[\\]]/}},link:{pattern:t(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),inside:{text:{pattern:t(/(^\"<MOD>*)[^\"]+(?=\")/.source),lookbehind:!0},modifier:{pattern:t(/(^\")<MOD>+/.source),lookbehind:!0,inside:o},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[\":]/}},image:{pattern:t(/!(?:<MOD>|<PAR>|[<>=])*[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),inside:{source:{pattern:t(/(^!(?:<MOD>|<PAR>|[<>=])*)[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),lookbehind:!0,alias:\"url\"},modifier:{pattern:t(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),lookbehind:!0,inside:o},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[!:]/}},footnote:{pattern:/\\b\\[\\d+\\]/,alias:\"comment\",inside:{punctuation:/\\[|\\]/}},acronym:{pattern:/\\b[A-Z\\d]+\\([^)]+\\)/,inside:{comment:{pattern:/(\\()[^)]+(?=\\))/,lookbehind:!0},punctuation:/[()]/}},mark:{pattern:/\\b\\((?:TM|R|C)\\)/,alias:\"comment\",inside:{punctuation:/[()]/}}}}}),r=a.phrase.inside,s={inline:r.inline,link:r.link,image:r.image,footnote:r.footnote,acronym:r.acronym,mark:r.mark};a.tag.pattern=/<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;var d=r.inline.inside;d.bold.inside=s,d.italic.inside=s,d.inserted.inside=s,d.deleted.inside=s,d.span.inside=s;var l=r.table.inside;l.inline=s.inline,l.link=s.link,l.image=s.image,l.footnote=s.footnote,l.acronym=s.acronym,l.mark=s.mark}(Prism)}}]);","name":"static/js/416.ab3ccb87.chunk.js","map":{"version":3,"sources":["static/js/416.ab3ccb87.chunk.js"],"names":["this","push","584","module","exports","Prism","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","css","pattern","inside","rest","languages","class-id","lookbehind","alias","lang","punctuation","textile","extend","phrase","block-tag","modifier","tag","list","table","inline","bold","italic","cite","code","inserted","deleted","span","link-ref","string","url","link","text","image","footnote","acronym","comment","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAGT,IAAIC,EAAgB,yCAAyCC,OAGzDC,EAAmB,uBAAuBD,OAM9C,SAASE,EAAaF,EAAQG,GAC5B,OAAOC,OAAOJ,EAAOK,QAAQ,UAAU,WACrC,MAAO,MAAQN,EAAgB,OAC9BM,QAAQ,UAAU,WACnB,MAAO,MAAQJ,EAAmB,OAChCE,GAAS,IAGf,IAAIG,EAAiB,CACnBC,IAAO,CACLC,QAAS,YACTC,OAAQ,CACNC,KAAMZ,EAAMa,UAAUJ,MAG1BK,WAAY,CACVJ,QAAS,kBACTK,YAAY,EACZC,MAAO,cAETC,KAAQ,CACNP,QAAS,mBACTK,YAAY,EACZC,MAAO,cAGTE,YAAe,gBAEbC,EAAUnB,EAAMa,UAAUM,QAAUnB,EAAMa,UAAUO,OAAO,SAAU,CACvEC,OAAU,CACRX,QAAS,2CACTK,YAAY,EACZJ,OAAQ,CAENW,YAAa,CACXZ,QAASN,EAAa,oCAAoCF,QAC1DS,OAAQ,CACNY,SAAY,CACVb,QAASN,EAAa,0CAA0CF,QAChEa,YAAY,EACZJ,OAAQH,GAEVgB,IAAO,YACPN,YAAe,QAKnBO,KAAQ,CACNf,QAASN,EAAa,oBAAoBF,OAAQ,KAClDS,OAAQ,CACNY,SAAY,CACVb,QAASN,EAAa,iBAAiBF,QACvCa,YAAY,EACZJ,OAAQH,GAEVU,YAAe,WAInBQ,MAAS,CAGPhB,QAASN,EAAa,6FAA6FF,OAAQ,KAC3HS,OAAQ,CACNY,SAAY,CAGVb,QAASN,EAAa,8DAA8DF,QACpFa,YAAY,EACZJ,OAAQH,GAEVU,YAAe,WAGnBS,OAAU,CACRjB,QAASN,EAAa,qEAAqEF,QAC3Fa,YAAY,EACZJ,OAAQ,CAGNiB,KAAQ,CACNlB,QAASN,EAAa,4BAA4BF,QAClDa,YAAY,GAGdc,OAAU,CACRnB,QAASN,EAAa,0BAA0BF,QAChDa,YAAY,GAGde,KAAQ,CACNpB,QAASN,EAAa,2BAA2BF,QACjDa,YAAY,EACZC,MAAO,UAGTe,KAAQ,CACNrB,QAASN,EAAa,qBAAqBF,QAC3Ca,YAAY,EACZC,MAAO,WAGTgB,SAAY,CACVtB,QAASN,EAAa,uBAAuBF,QAC7Ca,YAAY,GAGdkB,QAAW,CACTvB,QAASN,EAAa,qBAAqBF,QAC3Ca,YAAY,GAGdmB,KAAQ,CACNxB,QAASN,EAAa,qBAAqBF,QAC3Ca,YAAY,GAEdQ,SAAY,CACVb,QAASN,EAAa,oCAAoCF,QAC1Da,YAAY,EACZJ,OAAQH,GAEVU,YAAe,kBAInBiB,WAAY,CACVzB,QAAS,mBACTC,OAAQ,CACNyB,OAAU,CACR1B,QAAS,mBACTK,YAAY,GAEdsB,IAAO,CACL3B,QAAS,WACTK,YAAY,GAEdG,YAAe,WAKnBoB,KAAQ,CACN5B,QAASN,EAAa,uCAAuCF,QAC7DS,OAAQ,CACN4B,KAAQ,CACN7B,QAASN,EAAa,uBAAuBF,QAC7Ca,YAAY,GAEdQ,SAAY,CACVb,QAASN,EAAa,aAAaF,QACnCa,YAAY,EACZJ,OAAQH,GAEV6B,IAAO,CACL3B,QAAS,QACTK,YAAY,GAEdG,YAAe,SAKnBsB,MAAS,CACP9B,QAASN,EAAa,8EAA8EF,QACpGS,OAAQ,CACNT,OAAU,CACRQ,QAASN,EAAa,yDAAyDF,QAC/Ea,YAAY,EACZC,MAAO,OAETO,SAAY,CACVb,QAASN,EAAa,6BAA6BF,QACnDa,YAAY,EACZJ,OAAQH,GAEV6B,IAAO,CACL3B,QAAS,QACTK,YAAY,GAEdG,YAAe,SAInBuB,SAAY,CACV/B,QAAS,YACTM,MAAO,UACPL,OAAQ,CACNO,YAAe,UAInBwB,QAAW,CACThC,QAAS,sBACTC,OAAQ,CACNgC,QAAW,CACTjC,QAAS,kBACTK,YAAY,GAEdG,YAAe,SAInB0B,KAAQ,CACNlC,QAAS,mBACTM,MAAO,UACPL,OAAQ,CACNO,YAAe,aAMrB2B,EAAe1B,EAAgB,OAAER,OACjCmC,EAAiB,CACnBnB,OAAUkB,EAAqB,OAC/BP,KAAQO,EAAmB,KAC3BL,MAASK,EAAoB,MAC7BJ,SAAYI,EAAuB,SACnCH,QAAWG,EAAsB,QACjCD,KAAQC,EAAmB,MAG7B1B,EAAQK,IAAId,QAAU,qGAEtB,IAAIqC,EAAqBF,EAAqB,OAAElC,OAChDoC,EAAyB,KAAEpC,OAASmC,EACpCC,EAA2B,OAAEpC,OAASmC,EACtCC,EAA6B,SAAEpC,OAASmC,EACxCC,EAA4B,QAAEpC,OAASmC,EACvCC,EAAyB,KAAEpC,OAASmC,EAEpC,IAAIE,EAAoBH,EAAoB,MAAElC,OAC9CqC,EAA0B,OAAIF,EAAuB,OACrDE,EAAwB,KAAIF,EAAqB,KACjDE,EAAyB,MAAIF,EAAsB,MACnDE,EAA4B,SAAIF,EAAyB,SACzDE,EAA2B,QAAIF,EAAwB,QACvDE,EAAwB,KAAIF,EAAqB,KA1PnD,CA2PG9C"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[416],{\n\n/***/ 584:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // We don't allow for pipes inside parentheses\n  // to not break table pattern |(. foo |). bar |\n  var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source; // Opening and closing parentheses which are not a modifier\n  // This pattern is necessary to prevent exponential backtracking\n\n  var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function withModifier(source, flags) {\n    return RegExp(source.replace(/<MOD>/g, function () {\n      return '(?:' + modifierRegex + ')';\n    }).replace(/<PAR>/g, function () {\n      return '(?:' + parenthesesRegex + ')';\n    }), flags || '');\n  }\n\n  var modifierTokens = {\n    'css': {\n      pattern: /\\{[^}]+\\}/,\n      inside: {\n        rest: Prism.languages.css\n      }\n    },\n    'class-id': {\n      pattern: /(\\()[^)]+(?=\\))/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    'lang': {\n      pattern: /(\\[)[^\\]]+(?=\\])/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n    'punctuation': /[\\\\\\/]\\d+|\\S/\n  };\n  var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n    'phrase': {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: true,\n      inside: {\n        // h1. Header 1\n        'block-tag': {\n          pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'tag': /^[a-z]\\w*/,\n            'punctuation': /\\.$/\n          }\n        },\n        // # List item\n        // * List item\n        'list': {\n          pattern: withModifier(/^[*#]+<MOD>*\\s+.+/.source, 'm'),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /^[*#]+/\n          }\n        },\n        // | cell | cell | cell |\n        'table': {\n          // Modifiers can be applied to the row: {color:red}.|1|2|3|\n          // or the cell: |{color:red}.1|2|3|\n          pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.)?[^|]*)+\\|/.source, 'm'),\n          inside: {\n            'modifier': {\n              // Modifiers for rows after the first one are\n              // preceded by a pipe and a line feed\n              pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /\\||^\\./\n          }\n        },\n        'inline': {\n          pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n          lookbehind: true,\n          inside: {\n            // Note: superscripts and subscripts are not handled specifically\n            // *bold*, **bold**\n            'bold': {\n              pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // _italic_, __italic__\n            'italic': {\n              pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // ??cite??\n            'cite': {\n              pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n              lookbehind: true,\n              alias: 'string'\n            },\n            // @code@\n            'code': {\n              pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            // +inserted+\n            'inserted': {\n              pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n              lookbehind: true\n            },\n            // -deleted-\n            'deleted': {\n              pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n              lookbehind: true\n            },\n            // %span%\n            'span': {\n              pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /[*_%?@+\\-^~]+/\n          }\n        },\n        // [alias]http://example.com\n        'link-ref': {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            'string': {\n              pattern: /(\\[)[^\\]]+(?=\\])/,\n              lookbehind: true\n            },\n            'url': {\n              pattern: /(\\])\\S+$/,\n              lookbehind: true\n            },\n            'punctuation': /[\\[\\]]/\n          }\n        },\n        // \"text\":http://example.com\n        // \"text\":link-ref\n        'link': {\n          pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n          inside: {\n            'text': {\n              pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\")<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[\":]/\n          }\n        },\n        // !image.jpg!\n        // !image.jpg(Title)!:http://example.com\n        'image': {\n          pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n          inside: {\n            'source': {\n              pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n              lookbehind: true,\n              alias: 'url'\n            },\n            'modifier': {\n              pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[!:]/\n          }\n        },\n        // Footnote[1]\n        'footnote': {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /\\[|\\]/\n          }\n        },\n        // CSS(Cascading Style Sheet)\n        'acronym': {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            'comment': {\n              pattern: /(\\()[^)]+(?=\\))/,\n              lookbehind: true\n            },\n            'punctuation': /[()]/\n          }\n        },\n        // Prism(C)\n        'mark': {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /[()]/\n          }\n        }\n      }\n    }\n  });\n  var phraseInside = textile['phrase'].inside;\n  var nestedPatterns = {\n    'inline': phraseInside['inline'],\n    'link': phraseInside['link'],\n    'image': phraseInside['image'],\n    'footnote': phraseInside['footnote'],\n    'acronym': phraseInside['acronym'],\n    'mark': phraseInside['mark']\n  }; // Only allow alpha-numeric HTML tags, not XML tags\n\n  textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n  var phraseInlineInside = phraseInside['inline'].inside;\n  phraseInlineInside['bold'].inside = nestedPatterns;\n  phraseInlineInside['italic'].inside = nestedPatterns;\n  phraseInlineInside['inserted'].inside = nestedPatterns;\n  phraseInlineInside['deleted'].inside = nestedPatterns;\n  phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n  var phraseTableInside = phraseInside['table'].inside;\n  phraseTableInside['inline'] = nestedPatterns['inline'];\n  phraseTableInside['link'] = nestedPatterns['link'];\n  phraseTableInside['image'] = nestedPatterns['image'];\n  phraseTableInside['footnote'] = nestedPatterns['footnote'];\n  phraseTableInside['acronym'] = nestedPatterns['acronym'];\n  phraseTableInside['mark'] = nestedPatterns['mark'];\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-textile.js"],"names":["Prism","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","pattern","inside","rest","languages","css","lookbehind","alias","textile","extend","phraseInside","nestedPatterns","tag","phraseInlineInside","phraseTableInside"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\t// We don't allow for pipes inside parentheses\n\t// to not break table pattern |(. foo |). bar |\n\tvar modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source;\n\t// Opening and closing parentheses which are not a modifier\n\t// This pattern is necessary to prevent exponential backtracking\n\tvar parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction withModifier(source, flags) {\n\t\treturn RegExp(\n\t\t\tsource\n\t\t\t\t.replace(/<MOD>/g, function () { return '(?:' + modifierRegex + ')'; })\n\t\t\t\t.replace(/<PAR>/g, function () { return '(?:' + parenthesesRegex + ')'; }),\n\t\t\tflags || '');\n\t}\n\n\tvar modifierTokens = {\n\t\t'css': {\n\t\t\tpattern: /\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.css\n\t\t\t}\n\t\t},\n\t\t'class-id': {\n\t\t\tpattern: /(\\()[^)]+(?=\\))/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t'lang': {\n\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)\n\t\t'punctuation': /[\\\\\\/]\\d+|\\S/\n\t};\n\n\n\tvar textile = Prism.languages.textile = Prism.languages.extend('markup', {\n\t\t'phrase': {\n\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\n\t\t\t\t// h1. Header 1\n\t\t\t\t'block-tag': {\n\t\t\t\t\tpattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'tag': /^[a-z]\\w*/,\n\t\t\t\t\t\t'punctuation': /\\.$/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// # List item\n\t\t\t\t// * List item\n\t\t\t\t'list': {\n\t\t\t\t\tpattern: withModifier(/^[*#]+<MOD>*\\s+.+/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[*#]+)<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /^[*#]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// | cell | cell | cell |\n\t\t\t\t'table': {\n\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|\n\t\t\t\t\t// or the cell: |{color:red}.1|2|3|\n\t\t\t\t\tpattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.)?[^|]*)+\\|/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\t// Modifiers for rows after the first one are\n\t\t\t\t\t\t\t// preceded by a pipe and a line feed\n\t\t\t\t\t\t\tpattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\||^\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t'inline': {\n\t\t\t\t\tpattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically\n\n\t\t\t\t\t\t// *bold*, **bold**\n\t\t\t\t\t\t'bold': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// _italic_, __italic__\n\t\t\t\t\t\t'italic': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// ??cite??\n\t\t\t\t\t\t'cite': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'string'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// @code@\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// +inserted+\n\t\t\t\t\t\t'inserted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// -deleted-\n\t\t\t\t\t\t'deleted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// %span%\n\t\t\t\t\t\t'span': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// [alias]http://example.com\n\t\t\t\t'link-ref': {\n\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(\\])\\S+$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// \"text\":http://example.com\n\t\t\t\t// \"text\":link-ref\n\t\t\t\t'link': {\n\t\t\t\t\tpattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'text': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\")<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\":]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// !image.jpg!\n\t\t\t\t// !image.jpg(Title)!:http://example.com\n\t\t\t\t'image': {\n\t\t\t\t\tpattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'source': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'url'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[!:]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Footnote[1]\n\t\t\t\t'footnote': {\n\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// CSS(Cascading Style Sheet)\n\t\t\t\t'acronym': {\n\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': {\n\t\t\t\t\t\t\tpattern: /(\\()[^)]+(?=\\))/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Prism(C)\n\t\t\t\t'mark': {\n\t\t\t\t\tpattern: /\\b\\((?:TM|R|C)\\)/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar phraseInside = textile['phrase'].inside;\n\tvar nestedPatterns = {\n\t\t'inline': phraseInside['inline'],\n\t\t'link': phraseInside['link'],\n\t\t'image': phraseInside['image'],\n\t\t'footnote': phraseInside['footnote'],\n\t\t'acronym': phraseInside['acronym'],\n\t\t'mark': phraseInside['mark']\n\t};\n\n\t// Only allow alpha-numeric HTML tags, not XML tags\n\ttextile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n\t// Allow some nesting\n\tvar phraseInlineInside = phraseInside['inline'].inside;\n\tphraseInlineInside['bold'].inside = nestedPatterns;\n\tphraseInlineInside['italic'].inside = nestedPatterns;\n\tphraseInlineInside['inserted'].inside = nestedPatterns;\n\tphraseInlineInside['deleted'].inside = nestedPatterns;\n\tphraseInlineInside['span'].inside = nestedPatterns;\n\n\t// Allow some styles inside table cells\n\tvar phraseTableInside = phraseInside['table'].inside;\n\tphraseTableInside['inline'] = nestedPatterns['inline'];\n\tphraseTableInside['link'] = nestedPatterns['link'];\n\tphraseTableInside['image'] = nestedPatterns['image'];\n\tphraseTableInside['footnote'] = nestedPatterns['footnote'];\n\tphraseTableInside['acronym'] = nestedPatterns['acronym'];\n\tphraseTableInside['mark'] = nestedPatterns['mark'];\n\n}(Prism));\n"]}}