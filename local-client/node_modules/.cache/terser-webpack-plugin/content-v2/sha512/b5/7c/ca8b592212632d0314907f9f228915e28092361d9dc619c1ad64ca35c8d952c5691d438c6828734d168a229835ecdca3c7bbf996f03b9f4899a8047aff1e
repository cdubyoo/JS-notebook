{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[118],{286:function(n,o){Prism.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,number:[/\\$\\\\?./,/\\d+#[a-z0-9]+/i,/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],function:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/}}}]);","name":"static/js/118.bc6c0260.chunk.js","map":{"version":3,"sources":["static/js/118.bc6c0260.chunk.js"],"names":["this","push","286","module","exports","Prism","languages","erlang","comment","string","pattern","greedy","quoted-function","alias","quoted-atom","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAAS,CACvBC,QAAW,MACXC,OAAU,CACRC,QAAS,wBACTC,QAAQ,GAEVC,kBAAmB,CACjBF,QAAS,8BACTG,MAAO,YAETC,cAAe,CACbJ,QAAS,wBACTG,MAAO,QAETE,QAAW,qBACXC,QAAW,0DACXC,OAAU,CAAC,SAAU,iBAAkB,0CACvCC,SAAY,sBACZC,SAAY,CAEVT,QAAS,gCACTU,YAAY,GAEdC,SAAY,CAAC,+GAAgH,CAE3HX,QAAS,iBACTU,YAAY,GACX,CAEDV,QAAS,iBACTU,YAAY,IAEdE,KAAQ,gBACRC,YAAe"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[118],{\n\n/***/ 286:\n/***/ (function(module, exports) {\n\nPrism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-erlang.js"],"names":["Prism","languages","erlang","pattern","greedy","alias","lookbehind"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB;AACxB,aAAW,KADa;AAExB,YAAU;AACTC,WAAO,EAAE,uBADA;AAETC,UAAM,EAAE;AAFC,GAFc;AAMxB,qBAAmB;AAClBD,WAAO,EAAE,6BADS;AAElBE,SAAK,EAAE;AAFW,GANK;AAUxB,iBAAe;AACdF,WAAO,EAAE,uBADK;AAEdE,SAAK,EAAE;AAFO,GAVS;AAcxB,aAAW,oBAda;AAexB,aAAW,yDAfa;AAgBxB,YAAU,CACT,QADS,EAET,gBAFS,EAGT,wCAHS,CAhBc;AAqBxB,cAAY,qBArBY;AAsBxB,cAAY;AACX;AACAF,WAAO,EAAE,+BAFE;AAGXG,cAAU,EAAE;AAHD,GAtBY;AA2BxB,cAAY,CACX,8GADW,EAEX;AACC;AACAH,WAAO,EAAE,gBAFV;AAGCG,cAAU,EAAE;AAHb,GAFW,EAOX;AACC;AACAH,WAAO,EAAE,gBAFV;AAGCG,cAAU,EAAE;AAHb,GAPW,CA3BY;AAwCxB,UAAQ,eAxCgB;AAyCxB,iBAAe;AAzCS,CAAzB,C","file":"x","sourcesContent":["Prism.languages.erlang = {\n\t'comment': /%.+/,\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'quoted-function': {\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n\t\talias: 'function'\n\t},\n\t'quoted-atom': {\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n\t\talias: 'atom'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n\t'number': [\n\t\t/\\$\\\\?./,\n\t\t/\\d+#[a-z0-9]+/i,\n\t\t/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n\t],\n\t'function': /\\b[a-z][\\w@]*(?=\\()/,\n\t'variable': {\n\t\t// Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n\t\tpattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n\t\tlookbehind: true\n\t},\n\t'operator': [\n\t\t/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n\t\t{\n\t\t\t// We don't want to match <<\n\t\t\tpattern: /(^|[^<])<(?!<)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// We don't want to match >>\n\t\t\tpattern: /(^|[^>])>(?!>)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'atom': /\\b[a-z][\\w@]*/,\n\t'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n\n};"]}}