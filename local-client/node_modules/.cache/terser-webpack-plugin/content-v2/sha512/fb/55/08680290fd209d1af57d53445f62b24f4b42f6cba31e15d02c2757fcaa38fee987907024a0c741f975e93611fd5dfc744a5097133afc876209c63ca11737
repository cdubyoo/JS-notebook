{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[403],{571:function(e,n){!function(e){var n={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},r={pattern:/(^|[^\\w.-])-?\\d*\\.?\\d+/,lookbehind:!0},i={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/url\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,{pattern:/\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:r,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number:r,punctuation:/[{}()\\[\\];:,]/};i.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^{|}$/,alias:\"punctuation\"},rest:i}},i.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:i}},e.languages.stylus={\"atrule-declaration\":{pattern:/(^\\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:i}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:i}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:i}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:i.interpolation}},rest:i}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,lookbehind:!0,inside:{interpolation:i.interpolation,comment:i.comment,punctuation:/[{},]/}},func:i.func,string:i.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:i.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism)}}]);","name":"static/js/403.ecda78c6.chunk.js","map":{"version":3,"sources":["static/js/403.ecda78c6.chunk.js"],"names":["this","push","571","module","exports","e","n","pattern","lookbehind","r","i","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","inside","unit","number","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","stylus","atrule-declaration","atrule","variable-declaration","variable","statement","property-declaration","property","selector","Prism"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAEvB,SAAUC,GACT,IAAIC,EAAI,CACNC,QAAS,sBACTC,YAAY,GAEVC,EAAI,CACNF,QAAS,yBACTC,YAAY,GAEVE,EAAI,CACNC,QAAS,CACPJ,QAAS,uCACTC,YAAY,GAEdI,IAAK,CACHL,QAAS,uBACTM,QAAQ,GAEVC,OAAQ,CACNP,QAAS,gDACTM,QAAQ,GAEVE,cAAe,KACfC,KAAM,KACNC,UAAW,+BACXC,QAAS,CACPX,QAAS,4DACTC,YAAY,GAEdW,QAAS,iBACTC,MAAO,CAAC,q5CAAs5C,CAC55Cb,QAAS,4JACTc,OAAQ,CACNC,KAAMhB,EACNiB,OAAQd,EACRe,SAAU,eACVC,YAAa,WAGjBC,OAAQ,kBACRJ,KAAMhB,EACNqB,QAAS,qBACTC,SAAU,CAAC,wGACXL,OAAQd,EACRgB,YAAa,iBAEff,EAAEK,cAAgB,CAChBR,QAAS,iBACTsB,MAAO,WACPR,OAAQ,CACNS,UAAW,CACTvB,QAAS,QACTsB,MAAO,eAETE,KAAMrB,IAEPA,EAAEM,KAAO,CACVT,QAAS,oBACTc,OAAQ,CACNG,SAAU,SACVO,KAAMrB,IAEPL,EAAE2B,UAAUC,OAAS,CACtBC,qBAAsB,CACpB3B,QAAS,aACTC,YAAY,EACZa,OAAQ,CACNc,OAAQ,WACRJ,KAAMrB,IAGV0B,uBAAwB,CACtB7B,QAAS,sDACTC,YAAY,EACZa,OAAQ,CACNgB,SAAU,OACVN,KAAMrB,IAGV4B,UAAW,CACT/B,QAAS,kDACTC,YAAY,EACZa,OAAQ,CACNH,QAAS,OACTa,KAAMrB,IAGV6B,uBAAwB,CACtBhC,QAAS,4HACTC,YAAY,EACZa,OAAQ,CACNmB,SAAU,CACRjC,QAAS,WACTc,OAAQ,CACNN,cAAeL,EAAEK,gBAGrBgB,KAAMrB,IAGV+B,SAAU,CACRlC,QAAS,uNACTC,YAAY,EACZa,OAAQ,CACNN,cAAeL,EAAEK,cACjBJ,QAASD,EAAEC,QACXc,YAAa,UAGjBT,KAAMN,EAAEM,KACRF,OAAQJ,EAAEI,OACVH,QAAS,CACPJ,QAAS,uCACTC,YAAY,EACZK,QAAQ,GAEVE,cAAeL,EAAEK,cACjBU,YAAa,iBArHhB,CAuHCiB"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[403],{\n\n/***/ 571:\n/***/ (function(module, exports) {\n\n!function (e) {\n  var n = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: !0\n  },\n      r = {\n    pattern: /(^|[^\\w.-])-?\\d*\\.?\\d+/,\n    lookbehind: !0\n  },\n      i = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    },\n    url: {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: !0\n    },\n    string: {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: !0\n    },\n    interpolation: null,\n    func: null,\n    important: /\\B!(?:important|optional)\\b/i,\n    keyword: {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: !0\n    },\n    hexcode: /#[\\da-f]{3,6}/i,\n    color: [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        unit: n,\n        number: r,\n        function: /[\\w-]+(?=\\()/,\n        punctuation: /[(),]/\n      }\n    }],\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: n,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: [/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    number: r,\n    punctuation: /[{}()\\[\\];:,]/\n  };\n  i.interpolation = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: \"variable\",\n    inside: {\n      delimiter: {\n        pattern: /^{|}$/,\n        alias: \"punctuation\"\n      },\n      rest: i\n    }\n  }, i.func = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      function: /^[^(]+/,\n      rest: i\n    }\n  }, e.languages.stylus = {\n    \"atrule-declaration\": {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: !0,\n      inside: {\n        atrule: /^@[\\w-]+/,\n        rest: i\n      }\n    },\n    \"variable-declaration\": {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: !0,\n      inside: {\n        variable: /^\\S+/,\n        rest: i\n      }\n    },\n    statement: {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\S+/,\n        rest: i\n      }\n    },\n    \"property-declaration\": {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        property: {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            interpolation: i.interpolation\n          }\n        },\n        rest: i\n      }\n    },\n    selector: {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        interpolation: i.interpolation,\n        comment: i.comment,\n        punctuation: /[{},]/\n      }\n    },\n    func: i.func,\n    string: i.string,\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    interpolation: i.interpolation,\n    punctuation: /[{}()\\[\\];:.]/\n  };\n}(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-stylus.min.js"],"names":["e","n","pattern","lookbehind","r","i","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","inside","unit","number","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","stylus","atrule","variable","statement","property","selector","Prism"],"mappings":"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","file":"x","sourcesContent":["!function(e){var n={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},r={pattern:/(^|[^\\w.-])-?\\d*\\.?\\d+/,lookbehind:!0},i={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/url\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,{pattern:/\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:r,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number:r,punctuation:/[{}()\\[\\];:,]/};i.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^{|}$/,alias:\"punctuation\"},rest:i}},i.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:i}},e.languages.stylus={\"atrule-declaration\":{pattern:/(^\\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:i}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:i}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:i}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:i.interpolation}},rest:i}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,lookbehind:!0,inside:{interpolation:i.interpolation,comment:i.comment,punctuation:/[{},]/}},func:i.func,string:i.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:i.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism);"]}}