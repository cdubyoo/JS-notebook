{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[332],{500:function(e,r){Prism.languages.purebasic=Prism.languages.extend(\"clike\",{comment:/;.*/,keyword:/\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,function:/\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,number:/(?:\\$[\\da-f]+|\\b-?\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,operator:/(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/}),Prism.languages.insertBefore(\"purebasic\",\"keyword\",{tag:/#\\w+/,asm:{pattern:/(^\\s*)!.*/m,lookbehind:!0,alias:\"tag\",inside:{comment:/;.*/,string:{pattern:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"label-reference-anonymous\":{pattern:/(\\s*!\\s*j[a-z]+\\s+)@[fb]/i,lookbehind:!0,alias:\"fasm-label\"},\"label-reference-addressed\":{pattern:/(\\s*!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,lookbehind:!0,alias:\"fasm-label\"},function:{pattern:/^(\\s*!\\s*)[\\da-z]+(?=\\s|$)/im,lookbehind:!0},\"function-inline\":{pattern:/(\\s*:\\s*)[\\da-z]+(?=\\s)/i,lookbehind:!0,alias:\"function\"},label:{pattern:/^(\\s*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,lookbehind:!0,alias:\"fasm-label\"},keyword:[/(?:extern|global)[^;\\r\\n]*/i,/(?:CPU|FLOAT|DEFAULT).*/],register:/\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,number:/(?:\\b|-|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,operator:/[\\[\\]*+\\-/%<>=&|$!,.:]/}}}),delete Prism.languages.purebasic[\"class-name\"],delete Prism.languages.purebasic.boolean,Prism.languages.pbfasm=Prism.languages.purebasic}}]);","name":"static/js/332.8b6327b9.chunk.js","map":{"version":3,"sources":["static/js/332.8b6327b9.chunk.js"],"names":["this","push","500","module","exports","Prism","languages","purebasic","extend","comment","keyword","function","number","operator","insertBefore","tag","asm","pattern","lookbehind","alias","inside","string","greedy","label-reference-anonymous","label-reference-addressed","function-inline","label","register","pbfasm"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GASxBC,MAAMC,UAAUC,UAAYF,MAAMC,UAAUE,OAAO,QAAS,CAC1DC,QAAW,MACXC,QAAW,+7BACXC,SAAY,2BACZC,OAAU,gDACVC,SAAY,2EAEdR,MAAMC,UAAUQ,aAAa,YAAa,UAAW,CACnDC,IAAO,OACPC,IAAO,CACLC,QAAS,aACTC,YAAY,EACZC,MAAO,MACPC,OAAQ,CACNX,QAAW,MACXY,OAAU,CACRJ,QAAS,oCACTK,QAAQ,GAGVC,4BAA6B,CAC3BN,QAAS,4BACTC,YAAY,EACZC,MAAO,cAGTK,4BAA6B,CAC3BP,QAAS,4CACTC,YAAY,EACZC,MAAO,cAETR,SAAY,CACVM,QAAS,+BACTC,YAAY,GAEdO,kBAAmB,CACjBR,QAAS,2BACTC,YAAY,EACZC,MAAO,YAETO,MAAS,CACPT,QAAS,2CACTC,YAAY,EACZC,MAAO,cAETT,QAAW,CAAC,8BAA+B,2BAC3CiB,SAAY,gHACZf,OAAU,gLACVC,SAAY,oCAIXR,MAAMC,UAAUC,UAAU,qBAC1BF,MAAMC,UAAUC,UAAmB,QAC1CF,MAAMC,UAAUsB,OAASvB,MAAMC,UAAqB"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[332],{\n\n/***/ 500:\n/***/ (function(module, exports) {\n\n/*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n// PureBasic support, steal stuff from ansi-c\nPrism.languages.purebasic = Prism.languages.extend('clike', {\n  'comment': /;.*/,\n  'keyword': /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n  'function': /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n  'number': /(?:\\$[\\da-f]+|\\b-?\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n  'operator': /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n});\nPrism.languages.insertBefore('purebasic', 'keyword', {\n  'tag': /#\\w+/,\n  'asm': {\n    pattern: /(^\\s*)!.*/m,\n    lookbehind: true,\n    alias: 'tag',\n    inside: {\n      'comment': /;.*/,\n      'string': {\n        pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      // Anonymous label references, i.e.: jmp @b\n      'label-reference-anonymous': {\n        pattern: /(\\s*!\\s*j[a-z]+\\s+)@[fb]/i,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      // Named label reference, i.e.: jne label1\n      'label-reference-addressed': {\n        pattern: /(\\s*!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      'function': {\n        pattern: /^(\\s*!\\s*)[\\da-z]+(?=\\s|$)/im,\n        lookbehind: true\n      },\n      'function-inline': {\n        pattern: /(\\s*:\\s*)[\\da-z]+(?=\\s)/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'label': {\n        pattern: /^(\\s*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      'keyword': [/(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*/],\n      'register': /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n      'number': /(?:\\b|-|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n      'operator': /[\\[\\]*+\\-/%<>=&|$!,.:]/\n    }\n  }\n});\ndelete Prism.languages.purebasic['class-name'];\ndelete Prism.languages.purebasic['boolean'];\nPrism.languages.pbfasm = Prism.languages['purebasic'];\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-purebasic.js"],"names":["Prism","languages","purebasic","extend","insertBefore","pattern","lookbehind","alias","inside","greedy","pbfasm"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACAA,KAAK,CAACC,SAAN,CAAgBC,SAAhB,GAA4BF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AAC3D,aAAW,KADgD;AAE3D,aAAW,87BAFgD;AAG3D,cAAY,0BAH+C;AAI3D,YAAU,+CAJiD;AAK3D,cAAY;AAL+C,CAAhC,CAA5B;AAQAH,KAAK,CAACC,SAAN,CAAgBG,YAAhB,CAA6B,WAA7B,EAA0C,SAA1C,EAAqD;AACpD,SAAO,MAD6C;AAEpD,SAAO;AACNC,WAAO,EAAE,YADH;AAENC,cAAU,EAAE,IAFN;AAGNC,SAAK,EAAE,KAHD;AAINC,UAAM,EAAE;AACP,iBAAW,KADJ;AAEP,gBAAU;AACTH,eAAO,EAAE,mCADA;AAETI,cAAM,EAAE;AAFC,OAFH;AAMP;AACA,mCAA6B;AAC5BJ,eAAO,EAAE,2BADmB;AAE5BC,kBAAU,EAAE,IAFgB;AAG5BC,aAAK,EAAE;AAHqB,OAPtB;AAYP;AACA,mCAA6B;AAC5BF,eAAO,EAAE,2CADmB;AAE5BC,kBAAU,EAAE,IAFgB;AAG5BC,aAAK,EAAE;AAHqB,OAbtB;AAkBP,kBAAY;AACXF,eAAO,EAAE,8BADE;AAEXC,kBAAU,EAAE;AAFD,OAlBL;AAsBP,yBAAmB;AAClBD,eAAO,EAAE,0BADS;AAElBC,kBAAU,EAAE,IAFM;AAGlBC,aAAK,EAAE;AAHW,OAtBZ;AA2BP,eAAS;AACRF,eAAO,EAAE,0CADD;AAERC,kBAAU,EAAE,IAFJ;AAGRC,aAAK,EAAE;AAHC,OA3BF;AAgCP,iBAAW,CACV,6BADU,EAEV,yBAFU,CAhCJ;AAoCP,kBAAY,+GApCL;AAqCP,gBAAU,+KArCH;AAsCP,kBAAY;AAtCL;AAJF;AAF6C,CAArD;AAiDA,OAAOP,KAAK,CAACC,SAAN,CAAgBC,SAAhB,CAA0B,YAA1B,CAAP;AACA,OAAOF,KAAK,CAACC,SAAN,CAAgBC,SAAhB,CAA0B,SAA1B,CAAP;AAEAF,KAAK,CAACC,SAAN,CAAgBS,MAAhB,GAAyBV,KAAK,CAACC,SAAN,CAAgB,WAAhB,CAAzB,C","file":"x","sourcesContent":["/*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n\n\n// PureBasic support, steal stuff from ansi-c\nPrism.languages.purebasic = Prism.languages.extend('clike', {\n\t'comment': /;.*/,\n\t'keyword': /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n\t'function': /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n\t'number': /(?:\\$[\\da-f]+|\\b-?\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n});\n\nPrism.languages.insertBefore('purebasic', 'keyword', {\n\t'tag': /#\\w+/,\n\t'asm': {\n\t\tpattern: /(^\\s*)!.*/m,\n\t\tlookbehind: true,\n\t\talias: 'tag',\n\t\tinside: {\n\t\t\t'comment': /;.*/,\n\t\t\t'string': {\n\t\t\t\tpattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t// Anonymous label references, i.e.: jmp @b\n\t\t\t'label-reference-anonymous': {\n\t\t\t\tpattern: /(\\s*!\\s*j[a-z]+\\s+)@[fb]/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t// Named label reference, i.e.: jne label1\n\t\t\t'label-reference-addressed': {\n\t\t\t\tpattern: /(\\s*!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: /^(\\s*!\\s*)[\\da-z]+(?=\\s|$)/im,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'function-inline': {\n\t\t\t\tpattern: /(\\s*:\\s*)[\\da-z]+(?=\\s)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'label': {\n\t\t\t\tpattern: /^(\\s*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t'keyword': [\n\t\t\t\t/(?:extern|global)[^;\\r\\n]*/i,\n\t\t\t\t/(?:CPU|FLOAT|DEFAULT).*/\n\t\t\t],\n\t\t\t'register': /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n\t\t\t'number': /(?:\\b|-|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n\t\t\t'operator': /[\\[\\]*+\\-/%<>=&|$!,.:]/\n\t\t}\n\t}\n});\n\ndelete Prism.languages.purebasic['class-name'];\ndelete Prism.languages.purebasic['boolean'];\n\nPrism.languages.pbfasm = Prism.languages['purebasic'];\n"]}}