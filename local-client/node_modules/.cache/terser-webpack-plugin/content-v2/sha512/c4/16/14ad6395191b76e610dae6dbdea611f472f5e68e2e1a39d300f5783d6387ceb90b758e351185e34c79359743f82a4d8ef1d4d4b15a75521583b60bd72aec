{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[96],{264:function(e,n){!function(e){e.languages.diff={coord:[/^(?:\\*{3}|-{3}|\\+{3}).*$/m,/^@@.*@@$/m,/^\\d+.*$/m]};var n={\"deleted-sign\":\"-\",\"deleted-arrow\":\"<\",\"inserted-sign\":\"+\",\"inserted-arrow\":\">\",unchanged:\" \",diff:\"!\"};Object.keys(n).forEach((function(i){var s=n[i],a=[];/^\\w+$/.test(i)||a.push(/\\w+/.exec(i)[0]),\"diff\"===i&&a.push(\"bold\"),e.languages.diff[i]={pattern:RegExp(\"^(?:[\"+s+\"].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+\",\"m\"),alias:a,inside:{line:{pattern:/(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,lookbehind:!0},prefix:{pattern:/[\\s\\S]/,alias:/\\w+/.exec(i)[0]}}}})),Object.defineProperty(e.languages.diff,\"PREFIXES\",{value:n})}(Prism)}}]);","name":"static/js/96.1db66a12.chunk.js","map":{"version":3,"sources":["static/js/96.1db66a12.chunk.js"],"names":["this","push","264","module","exports","Prism","languages","diff","coord","PREFIXES","deleted-sign","deleted-arrow","inserted-sign","inserted-arrow","unchanged","Object","keys","forEach","name","prefix","alias","test","exec","pattern","RegExp","inside","line","lookbehind","defineProperty","value"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEnEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,KAAO,CACrBC,MAAS,CACT,4BACA,YACA,aASF,IAAIC,EAAW,CACbC,eAAgB,IAChBC,gBAAiB,IACjBC,gBAAiB,IACjBC,iBAAkB,IAClBC,UAAa,IACbP,KAAQ,KAGVQ,OAAOC,KAAKP,GAAUQ,SAAQ,SAAUC,GACtC,IAAIC,EAASV,EAASS,GAClBE,EAAQ,GAEP,QAAQC,KAAKH,IAEhBE,EAAMnB,KAAK,MAAMqB,KAAKJ,GAAM,IAGjB,SAATA,GACFE,EAAMnB,KAAK,QAGbI,EAAMC,UAAUC,KAAKW,GAAQ,CAC3BK,QAASC,OAAO,QAAUL,EAAS,iCAAkC,KACrEC,MAAOA,EACPK,OAAQ,CACNC,KAAQ,CACNH,QAAS,+BACTI,YAAY,GAEdR,OAAU,CACRI,QAAS,SACTH,MAAO,MAAME,KAAKJ,GAAM,SAMhCH,OAAOa,eAAevB,EAAMC,UAAUC,KAAM,WAAY,CACtDsB,MAAOpB,IArDX,CAuDGJ"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[96],{\n\n/***/ 264:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-diff.js"],"names":["Prism","languages","diff","PREFIXES","Object","keys","forEach","name","prefix","alias","test","push","exec","pattern","RegExp","inside","lookbehind","defineProperty","value"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjBA,OAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuB;AACtB,aAAS,CACR;AACA,+BAFQ,EAGR;AACA,eAJQ,EAKR;AACA,cANQ,CADa,CAUtB;;AAVsB,GAAvB;AAaA;AACD;AACA;AACA;AACA;;AACC,MAAIC,QAAQ,GAAG;AACd,oBAAgB,GADF;AAEd,qBAAiB,GAFH;AAGd,qBAAiB,GAHH;AAId,sBAAkB,GAJJ;AAKd,iBAAa,GALC;AAMd,YAAQ;AANM,GAAf,CApBiB,CA6BjB;;AACAC,QAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAAUC,IAAV,EAAgB;AAC7C,QAAIC,MAAM,GAAGL,QAAQ,CAACI,IAAD,CAArB;AAEA,QAAIE,KAAK,GAAG,EAAZ;;AACA,QAAI,CAAC,QAAQC,IAAR,CAAaH,IAAb,CAAL,EAAyB;AAAE;AAC1BE,WAAK,CAACE,IAAN,CAAW,MAAMC,IAAN,CAAWL,IAAX,EAAiB,CAAjB,CAAX;AACA;;AACD,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACpBE,WAAK,CAACE,IAAN,CAAW,MAAX;AACA;;AAEDX,SAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBK,IAArB,IAA6B;AAC5BM,aAAO,EAAEC,MAAM,CAAC,UAAUN,MAAV,GAAmB,gCAApB,EAAsD,GAAtD,CADa;AAE5BC,WAAK,EAAEA,KAFqB;AAG5BM,YAAM,EAAE;AACP,gBAAQ;AACPF,iBAAO,EAAE,8BADF;AAEPG,oBAAU,EAAE;AAFL,SADD;AAKP,kBAAU;AACTH,iBAAO,EAAE,QADA;AAETJ,eAAK,EAAE,MAAMG,IAAN,CAAWL,IAAX,EAAiB,CAAjB;AAFE;AALH;AAHoB,KAA7B;AAeA,GA1BD,EA9BiB,CA0DjB;;AACAH,QAAM,CAACa,cAAP,CAAsBjB,KAAK,CAACC,SAAN,CAAgBC,IAAtC,EAA4C,UAA5C,EAAwD;AACvDgB,SAAK,EAAEf;AADgD,GAAxD;AAIA,CA/DA,EA+DCH,KA/DD,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tPrism.languages.diff = {\n\t\t'coord': [\n\t\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n\t\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n\t\t\t// Match \"@@ ... @@\" coord lines in unified diff.\n\t\t\t/^@@.*@@$/m,\n\t\t\t// Match coord lines in normal diff (starts with a number).\n\t\t\t/^\\d+.*$/m\n\t\t]\n\n\t\t// deleted, inserted, unchanged, diff\n\t};\n\n\t/**\n\t * A map from the name of a block to its line prefix.\n\t *\n\t * @type {Object<string, string>}\n\t */\n\tvar PREFIXES = {\n\t\t'deleted-sign': '-',\n\t\t'deleted-arrow': '<',\n\t\t'inserted-sign': '+',\n\t\t'inserted-arrow': '>',\n\t\t'unchanged': ' ',\n\t\t'diff': '!',\n\t};\n\n\t// add a token for each prefix\n\tObject.keys(PREFIXES).forEach(function (name) {\n\t\tvar prefix = PREFIXES[name];\n\n\t\tvar alias = [];\n\t\tif (!/^\\w+$/.test(name)) { // \"deleted-sign\" -> \"deleted\"\n\t\t\talias.push(/\\w+/.exec(name)[0]);\n\t\t}\n\t\tif (name === \"diff\") {\n\t\t\talias.push(\"bold\");\n\t\t}\n\n\t\tPrism.languages.diff[name] = {\n\t\t\tpattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n\t\t\talias: alias,\n\t\t\tinside: {\n\t\t\t\t'line': {\n\t\t\t\t\tpattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'prefix': {\n\t\t\t\t\tpattern: /[\\s\\S]/,\n\t\t\t\t\talias: /\\w+/.exec(name)[0]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t});\n\n\t// make prefixes available to Diff plugin\n\tObject.defineProperty(Prism.languages.diff, 'PREFIXES', {\n\t\tvalue: PREFIXES\n\t});\n\n}(Prism));\n"]}}