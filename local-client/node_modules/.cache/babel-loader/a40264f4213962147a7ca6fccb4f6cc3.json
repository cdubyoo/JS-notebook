{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import'./add-cell.css';import{useActions}from'../hooks/use-actions';var AddCell=function AddCell(_ref){var forceVisible=_ref.forceVisible,previousCellId=_ref.previousCellId;var _useActions=useActions(),insertCellAfter=_useActions.insertCellAfter;return/*#__PURE__*/_jsxs(\"div\",{className:\"add-cell \".concat(forceVisible&&'force-visible'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'code');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Code\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'text');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Text\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"})]});};export default AddCell;","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/add-cell.tsx"],"names":["useActions","AddCell","forceVisible","previousCellId","insertCellAfter"],"mappings":"wFAAA,MAAO,gBAAP,CACA,OAASA,UAAT,KAA2B,sBAA3B,CAOA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAsC,IAAnCC,CAAAA,YAAmC,MAAnCA,YAAmC,CAArBC,cAAqB,MAArBA,cAAqB,iBAC9CH,UAAU,EADoC,CAClEI,eADkE,aAClEA,eADkE,CAG1E,mBACI,aAAK,SAAS,oBAAcF,YAAY,EAAI,eAA9B,CAAd,wBACI,aAAK,SAAS,CAAC,aAAf,wBACI,gBAAQ,SAAS,CAAC,uCAAlB,CAA0D,OAAO,CAAE,yBAAME,CAAAA,eAAe,CAACD,cAAD,CAAiB,MAAjB,CAArB,EAAnE,wBACI,aAAM,SAAS,CAAC,eAAhB,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EADJ,cAII,8BAJJ,GADJ,cAOI,gBAAQ,SAAS,CAAC,uCAAlB,CAA0D,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAACD,cAAD,CAAiB,MAAjB,CAArB,EAAnE,wBACI,aAAM,SAAS,CAAC,eAAhB,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EADJ,cAII,8BAJJ,GAPJ,GADJ,cAeI,YAAK,SAAS,CAAC,SAAf,EAfJ,GADJ,CAmBH,CAtBD,CAuBA,cAAeF,CAAAA,OAAf","sourcesContent":["import './add-cell.css'\r\nimport { useActions } from '../hooks/use-actions'\r\n\r\ninterface AddCellProps {\r\n    previousCellId: string | null\r\n    forceVisible?: boolean\r\n}\r\n\r\nconst AddCell: React.FC<AddCellProps> = ({ forceVisible, previousCellId }) => {\r\n    const { insertCellAfter } = useActions()\r\n\r\n    return (\r\n        <div className={`add-cell ${forceVisible && 'force-visible'}`}>\r\n            <div className=\"add-buttons\">\r\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'code')}>\r\n                    <span className=\"icon is-small\">\r\n                        <i className=\"fas fa-plus\" />\r\n                    </span>\r\n                    <span>Code</span>\r\n                </button>\r\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'text')}>\r\n                    <span className=\"icon is-small\">\r\n                        <i className=\"fas fa-plus\" />\r\n                    </span>\r\n                    <span>Text</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddCell\r\n\r\n"]},"metadata":{},"sourceType":"module"}