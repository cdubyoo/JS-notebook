{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[231],{399:function(e,s){Prism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};])*?(?=\\s*\\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}})}}]);","name":"static/js/231.01cc0c18.chunk.js","map":{"version":3,"sources":["static/js/231.01cc0c18.chunk.js"],"names":["this","push","399","module","exports","Prism","languages","less","extend","comment","pattern","lookbehind","atrule","inside","punctuation","selector","variable","property","operator","insertBefore","mixin-usage","alias"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,KAAOF,MAAMC,UAAUE,OAAO,MAAO,CACnDC,QAAS,CAAC,mBAAoB,CAC5BC,QAAS,kBACTC,YAAY,IAEdC,OAAQ,CACNF,QAAS,gEACTG,OAAQ,CACNC,YAAa,UAGjBC,SAAU,CACRL,QAAS,8FACTG,OAAQ,CACNG,SAAU,aAGdC,SAAU,2CACVC,SAAU,aACRb,MAAMC,UAAUa,aAAa,OAAQ,WAAY,CACnDH,SAAU,CAAC,CACTN,QAAS,cACTG,OAAQ,CACNC,YAAa,MAEd,aACHM,cAAe,CACbV,QAAS,uCACTC,YAAY,EACZU,MAAO"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[231],{\n\n/***/ 399:\n/***/ (function(module, exports) {\n\nPrism.languages.less = Prism.languages.extend(\"css\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  atrule: {\n    pattern: /@[\\w-]+?(?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};])*?(?=\\s*\\{)/,\n    inside: {\n      punctuation: /[:()]/\n    }\n  },\n  selector: {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@])*?(?=\\s*\\{)/,\n    inside: {\n      variable: /@+[\\w-]+/\n    }\n  },\n  property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  operator: /[+\\-*\\/]/\n}), Prism.languages.insertBefore(\"less\", \"property\", {\n  variable: [{\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      punctuation: /:/\n    }\n  }, /@@?[\\w-]+/],\n  \"mixin-usage\": {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: !0,\n    alias: \"function\"\n  }\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-less.min.js"],"names":["Prism","languages","less","extend","comment","pattern","lookbehind","atrule","inside","punctuation","selector","variable","property","operator","insertBefore","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAqBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA6B;AAACC,SAAO,EAAC,CAAC,kBAAD,EAAoB;AAACC,WAAO,EAAC,iBAAT;AAA2BC,cAAU,EAAC,CAAC;AAAvC,GAApB,CAAT;AAAwEC,QAAM,EAAC;AAACF,WAAO,EAAC,+DAAT;AAAyEG,UAAM,EAAC;AAACC,iBAAW,EAAC;AAAb;AAAhF,GAA/E;AAAsLC,UAAQ,EAAC;AAACL,WAAO,EAAC,6FAAT;AAAuGG,UAAM,EAAC;AAACG,cAAQ,EAAC;AAAV;AAA9G,GAA/L;AAAoUC,UAAQ,EAAC,0CAA7U;AAAwXC,UAAQ,EAAC;AAAjY,CAA7B,CAArB,EAAgcb,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,MAA7B,EAAoC,UAApC,EAA+C;AAACH,UAAQ,EAAC,CAAC;AAACN,WAAO,EAAC,aAAT;AAAuBG,UAAM,EAAC;AAACC,iBAAW,EAAC;AAAb;AAA9B,GAAD,EAAkD,WAAlD,CAAV;AAAyE,iBAAc;AAACJ,WAAO,EAAC,sCAAT;AAAgDC,cAAU,EAAC,CAAC,CAA5D;AAA8DS,SAAK,EAAC;AAApE;AAAvF,CAA/C,CAAhc,C","file":"x","sourcesContent":["Prism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};])*?(?=\\s*\\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}});"]}}