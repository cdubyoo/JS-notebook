[{"C:\\Users\\User\\Desktop\\jbook\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\jbook\\src\\components\\text-editor.tsx":"2"},{"size":310,"mtime":1620265207018,"results":"3","hashOfConfig":"4"},{"size":1177,"mtime":1620265207018,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sonmdb",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\User\\Desktop\\jbook\\src\\index.tsx",[],"C:\\Users\\User\\Desktop\\jbook\\src\\components\\text-editor.tsx",["11"],"import './text-editor.css'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport MDEditor from '@uiw/react-md-editor'\r\n\r\nconst TextEditor: React.FC = () => {\r\n    const ref = useRef<HTMLDivElement | null>(null)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent) => {\r\n            if (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n                console.log('element clicked on is inside editor')\r\n            } else {\r\n                console.log('element clicked  is not inside editor')\r\n            }\r\n            \r\n\r\n            setEditing(false)\r\n        }\r\n        document.addEventListener('click', listener, { capture:true })\r\n\r\n        return () => {\r\n            document.removeEventListener('click', listener, { capture:true })\r\n        }\r\n    })\r\n\r\n    if (editing) {\r\n        return (\r\n            <div ref={ref}>\r\n                <MDEditor />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => setEditing(true)}>\r\n            <MDEditor.Markdown source={'# Header'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextEditor",{"ruleId":"12","severity":1,"message":"13","line":3,"column":10,"nodeType":"14","messageId":"15","endLine":3,"endColumn":34},"@typescript-eslint/no-unused-vars","'isConstructorDeclaration' is defined but never used.","Identifier","unusedVar"]