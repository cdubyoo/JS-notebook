{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\jbook\\\\src\\\\components\\\\preview.tsx\",\n    _s = $RefreshSig$();\n\nimport './preview.css';\nimport { useRef, useEffect } from 'react';\nconst html = `\n        <html>\n            <head>\n                <style>html {background-color: white;} </style>\n            </head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    const handleError = (err) => {\n                        const root = document.querySelector('#root')\n                        root.innerHTML = '<div style=\"color: red\"><h4>Runtime Error</h4>' + err + '</div>'\n                        console.error(err)\n                    }\n\n                    window.addEventListener('error', (event) => {\n                        event.preventDefault()\n                        handleError(event.error)\n                    })\n                    \n                    window.addEventListener('message', (event) => {\n                        try{\n                            eval(event.data)\n                        } catch (err) {\n                            handleError(err)\n                        }\n                    }, false)\n                </script>\n            </body>\n        </html>\n    `; // receive bundled code and execute onto iframe\n\nconst Preview = ({\n  code,\n  err\n}) => {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/preview.tsx"],"names":["useRef","useEffect","html","Preview","code","err","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":";;;;;AAAA,OAAO,eAAP;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAQA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7BA,C,CA+BA;;AACA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AACxD,QAAMC,MAAM,GAAGN,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBN,IAAxB;AACAO,IAAAA,UAAU,CAAC,MAAK;AACZH,MAAAA,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+C,GAA/C;AACH,KAFS,EAEP,EAFO,CAAV;AAGH,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAQ,MAAA,KAAK,EAAE,SAAf;AAAyB,MAAA,GAAG,EAAEE,MAA9B;AAAsC,MAAA,OAAO,EAAC,eAA9C;AAA8D,MAAA,MAAM,EAAEJ;AAAtE;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,GAAG,iBAAI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;GAAMF,O;;KAAAA,O;AAkBN,eAAeA,OAAf","sourcesContent":["import './preview.css'\r\nimport { useRef, useEffect } from 'react'\r\n\r\n\r\ninterface PreviewProps {\r\n    code: string\r\n    err: string\r\n}\r\n\r\nconst html = `\r\n        <html>\r\n            <head>\r\n                <style>html {background-color: white;} </style>\r\n            </head>\r\n            <body>\r\n                <div id=\"root\"></div>\r\n                <script>\r\n                    const handleError = (err) => {\r\n                        const root = document.querySelector('#root')\r\n                        root.innerHTML = '<div style=\"color: red\"><h4>Runtime Error</h4>' + err + '</div>'\r\n                        console.error(err)\r\n                    }\r\n\r\n                    window.addEventListener('error', (event) => {\r\n                        event.preventDefault()\r\n                        handleError(event.error)\r\n                    })\r\n                    \r\n                    window.addEventListener('message', (event) => {\r\n                        try{\r\n                            eval(event.data)\r\n                        } catch (err) {\r\n                            handleError(err)\r\n                        }\r\n                    }, false)\r\n                </script>\r\n            </body>\r\n        </html>\r\n    `\r\n\r\n// receive bundled code and execute onto iframe\r\nconst Preview: React.FC<PreviewProps> = ({ code, err  }) => {\r\n    const iframe = useRef<any>()\r\n\r\n    useEffect(() => {\r\n        iframe.current.srcdoc = html\r\n        setTimeout(() =>{\r\n            iframe.current.contentWindow.postMessage(code, '*')\r\n        }, 50)\r\n    }, [code])\r\n\r\n    return (\r\n        <div className=\"preview-wrapper\">\r\n            <iframe title =\"preview\" ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\r\n            {err && <div className=\"preview-error\">{err}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview"]},"metadata":{},"sourceType":"module"}