{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[350],{518:function(a,e){!function(a){var e={pattern:/\\\\[\\\\(){}[\\]^$+*?|.]/,alias:\"escape\"},n=/\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,t=\"(?:[^\\\\\\\\-]|\"+n.source+\")\",s=RegExp(t+\"-\"+t),i={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:\"variable\"};a.languages.regex={charset:{pattern:/((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,lookbehind:!0,inside:{\"charset-negation\":{pattern:/(^\\[)\\^/,lookbehind:!0,alias:\"operator\"},\"charset-punctuation\":{pattern:/^\\[|\\]$/,alias:\"punctuation\"},range:{pattern:s,inside:{escape:n,\"range-punctuation\":{pattern:/-/,alias:\"operator\"}}},\"special-escape\":e,charclass:{pattern:/\\\\[wsd]|\\\\p{[^{}]+}/i,alias:\"class-name\"},escape:n}},\"special-escape\":e,charclass:{pattern:/\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,alias:\"class-name\"},backreference:[{pattern:/\\\\(?![123][0-7]{2})[1-9]/,alias:\"keyword\"},{pattern:/\\\\k<[^<>']+>/,alias:\"keyword\",inside:{\"group-name\":i}}],anchor:{pattern:/[$^]|\\\\[ABbGZz]/,alias:\"function\"},escape:n,group:[{pattern:/\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:\"punctuation\",inside:{\"group-name\":i}},{pattern:/\\)/,alias:\"punctuation\"}],quantifier:{pattern:/(?:[+*?]|\\{(?:\\d+,?\\d*)\\})[?+]?/,alias:\"number\"},alternation:{pattern:/\\|/,alias:\"keyword\"}}}(Prism)}}]);","name":"static/js/350.1afa47b1.chunk.js","map":{"version":3,"sources":["static/js/350.1afa47b1.chunk.js"],"names":["this","push","518","module","exports","Prism","specialEscape","pattern","alias","escape","rangeChar","source","range","RegExp","groupName","lookbehind","languages","regex","charset","inside","charset-negation","charset-punctuation","range-punctuation","special-escape","charclass","backreference","group-name","anchor","group","quantifier","alternation"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACT,IAAIC,EAAgB,CAClBC,QAAS,uBACTC,MAAO,UAELC,EAAS,6FASTC,EAAY,eAAiBD,EAAOE,OAAS,IAC7CC,EAAQC,OAAOH,EAAY,IAAMA,GAEjCI,EAAY,CACdP,QAAS,wBACTQ,YAAY,EACZP,MAAO,YAETH,EAAMW,UAAUC,MAAQ,CACtBC,QAAW,CACTX,QAAS,kDACTQ,YAAY,EACZI,OAAQ,CACNC,mBAAoB,CAClBb,QAAS,UACTQ,YAAY,EACZP,MAAO,YAETa,sBAAuB,CACrBd,QAAS,UACTC,MAAO,eAETI,MAAS,CACPL,QAASK,EACTO,OAAQ,CACNV,OAAUA,EACVa,oBAAqB,CACnBf,QAAS,IACTC,MAAO,cAIbe,iBAAkBjB,EAClBkB,UArCoB,CACxBjB,QAAS,uBACTC,MAAO,cAoCHC,OAAUA,IAGdc,iBAAkBjB,EAClBkB,UA9Cc,CACdjB,QAAS,0BACTC,MAAO,cA6CPiB,cAAiB,CAAC,CAEhBlB,QAAS,2BACTC,MAAO,WACN,CACDD,QAAS,eACTC,MAAO,UACPW,OAAQ,CACNO,aAAcZ,KAGlBa,OAAU,CACRpB,QAAS,kBACTC,MAAO,YAETC,OAAUA,EACVmB,MAAS,CAAC,CAIRrB,QAAS,8EACTC,MAAO,cACPW,OAAQ,CACNO,aAAcZ,IAEf,CACDP,QAAS,KACTC,MAAO,gBAETqB,WAAc,CACZtB,QAAS,kCACTC,MAAO,UAETsB,YAAe,CACbvB,QAAS,KACTC,MAAO,YAxFb,CA2FGH"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[350],{\n\n/***/ 518:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n  var charClass = {\n    pattern: /\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,\n    alias: 'class-name'\n  };\n  var charClassWithoutDot = {\n    pattern: /\\\\[wsd]|\\\\p{[^{}]+}/i,\n    alias: 'class-name'\n  };\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar); // the name of a capturing group\n\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  Prism.languages.regex = {\n    'charset': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'charset-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        'charset-punctuation': {\n          pattern: /^\\[|\\]$/,\n          alias: 'punctuation'\n        },\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': {\n              pattern: /-/,\n              alias: 'operator'\n            }\n          }\n        },\n        'special-escape': specialEscape,\n        'charclass': charClassWithoutDot,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'charclass': charClass,\n    'backreference': [{\n      // a backreference which is not an octal escape\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: 'keyword'\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: 'keyword',\n      inside: {\n        'group-name': groupName\n      }\n    }],\n    'anchor': {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: 'function'\n    },\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: 'punctuation',\n      inside: {\n        'group-name': groupName\n      }\n    }, {\n      pattern: /\\)/,\n      alias: 'punctuation'\n    }],\n    'quantifier': {\n      pattern: /(?:[+*?]|\\{(?:\\d+,?\\d*)\\})[?+]?/,\n      alias: 'number'\n    },\n    'alternation': {\n      pattern: /\\|/,\n      alias: 'keyword'\n    }\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-regex.js"],"names":["Prism","specialEscape","pattern","alias","escape","charClass","charClassWithoutDot","rangeChar","source","range","RegExp","groupName","lookbehind","languages","regex","inside"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,aAAa,GAAG;AACnBC,WAAO,EAAE,sBADU;AAEnBC,SAAK,EAAE;AAFY,GAApB;AAIA,MAAIC,MAAM,GAAG,4FAAb;AACA,MAAIC,SAAS,GAAG;AACfH,WAAO,EAAE,yBADM;AAEfC,SAAK,EAAE;AAFQ,GAAhB;AAIA,MAAIG,mBAAmB,GAAG;AACzBJ,WAAO,EAAE,sBADgB;AAEzBC,SAAK,EAAE;AAFkB,GAA1B;AAKA,MAAII,SAAS,GAAG,iBAAiBH,MAAM,CAACI,MAAxB,GAAiC,GAAjD;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACH,SAAS,GAAG,GAAZ,GAAkBA,SAAnB,CAAlB,CAjBiB,CAmBjB;;AACA,MAAII,SAAS,GAAG;AACfT,WAAO,EAAE,uBADM;AAEfU,cAAU,EAAE,IAFG;AAGfT,SAAK,EAAE;AAHQ,GAAhB;AAMAH,OAAK,CAACa,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,eAAW;AACVZ,aAAO,EAAE,iDADC;AAEVU,gBAAU,EAAE,IAFF;AAGVG,YAAM,EAAE;AACP,4BAAoB;AACnBb,iBAAO,EAAE,SADU;AAEnBU,oBAAU,EAAE,IAFO;AAGnBT,eAAK,EAAE;AAHY,SADb;AAMP,+BAAuB;AACtBD,iBAAO,EAAE,SADa;AAEtBC,eAAK,EAAE;AAFe,SANhB;AAUP,iBAAS;AACRD,iBAAO,EAAEO,KADD;AAERM,gBAAM,EAAE;AACP,sBAAUX,MADH;AAEP,iCAAqB;AACpBF,qBAAO,EAAE,GADW;AAEpBC,mBAAK,EAAE;AAFa;AAFd;AAFA,SAVF;AAoBP,0BAAkBF,aApBX;AAqBP,qBAAaK,mBArBN;AAsBP,kBAAUF;AAtBH;AAHE,KADY;AA6BvB,sBAAkBH,aA7BK;AA8BvB,iBAAaI,SA9BU;AA+BvB,qBAAiB,CAChB;AACC;AACAH,aAAO,EAAE,0BAFV;AAGCC,WAAK,EAAE;AAHR,KADgB,EAMhB;AACCD,aAAO,EAAE,cADV;AAECC,WAAK,EAAE,SAFR;AAGCY,YAAM,EAAE;AACP,sBAAcJ;AADP;AAHT,KANgB,CA/BM;AA6CvB,cAAU;AACTT,aAAO,EAAE,iBADA;AAETC,WAAK,EAAE;AAFE,KA7Ca;AAiDvB,cAAUC,MAjDa;AAkDvB,aAAS,CACR;AACC;AACA;AAEA;AACAF,aAAO,EAAE,6EALV;AAMCC,WAAK,EAAE,aANR;AAOCY,YAAM,EAAE;AACP,sBAAcJ;AADP;AAPT,KADQ,EAYR;AACCT,aAAO,EAAE,IADV;AAECC,WAAK,EAAE;AAFR,KAZQ,CAlDc;AAmEvB,kBAAc;AACbD,aAAO,EAAE,iCADI;AAEbC,WAAK,EAAE;AAFM,KAnES;AAuEvB,mBAAe;AACdD,aAAO,EAAE,IADK;AAEdC,WAAK,EAAE;AAFO;AAvEQ,GAAxB;AA6EA,CAvGA,EAuGCH,KAvGD,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar specialEscape = {\n\t\tpattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n\t\talias: 'escape'\n\t};\n\tvar escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n\tvar charClass = {\n\t\tpattern: /\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,\n\t\talias: 'class-name'\n\t};\n\tvar charClassWithoutDot = {\n\t\tpattern: /\\\\[wsd]|\\\\p{[^{}]+}/i,\n\t\talias: 'class-name'\n\t};\n\n\tvar rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n\tvar range = RegExp(rangeChar + '-' + rangeChar);\n\n\t// the name of a capturing group\n\tvar groupName = {\n\t\tpattern: /(<|')[^<>']+(?=[>']$)/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t};\n\n\tPrism.languages.regex = {\n\t\t'charset': {\n\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'charset-negation': {\n\t\t\t\t\tpattern: /(^\\[)\\^/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'charset-punctuation': {\n\t\t\t\t\tpattern: /^\\[|\\]$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\t'range': {\n\t\t\t\t\tpattern: range,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'escape': escape,\n\t\t\t\t\t\t'range-punctuation': {\n\t\t\t\t\t\t\tpattern: /-/,\n\t\t\t\t\t\t\talias: 'operator'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'special-escape': specialEscape,\n\t\t\t\t'charclass': charClassWithoutDot,\n\t\t\t\t'escape': escape\n\t\t\t}\n\t\t},\n\t\t'special-escape': specialEscape,\n\t\t'charclass': charClass,\n\t\t'backreference': [\n\t\t\t{\n\t\t\t\t// a backreference which is not an octal escape\n\t\t\t\tpattern: /\\\\(?![123][0-7]{2})[1-9]/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\\\k<[^<>']+>/,\n\t\t\t\talias: 'keyword',\n\t\t\t\tinside: {\n\t\t\t\t\t'group-name': groupName\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'anchor': {\n\t\t\tpattern: /[$^]|\\\\[ABbGZz]/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'escape': escape,\n\t\t'group': [\n\t\t\t{\n\t\t\t\t// https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n\t\t\t\t// https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n\t\t\t\t// (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n\t\t\t\tpattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n\t\t\t\talias: 'punctuation',\n\t\t\t\tinside: {\n\t\t\t\t\t'group-name': groupName\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\)/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t],\n\t\t'quantifier': {\n\t\t\tpattern: /(?:[+*?]|\\{(?:\\d+,?\\d*)\\})[?+]?/,\n\t\t\talias: 'number'\n\t\t},\n\t\t'alternation': {\n\t\t\tpattern: /\\|/,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\n}(Prism))\n"]}}