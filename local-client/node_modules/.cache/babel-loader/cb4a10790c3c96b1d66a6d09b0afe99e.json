{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import'./preview.css';import{useRef,useEffect}from'react';var html=\"\\n        <html>\\n            <head>\\n                <style>html {background-color: white;} </style>\\n            </head>\\n            <body>\\n                <div id=\\\"root\\\"></div>\\n                <script>\\n                    const handleError = (err) => {\\n                        const root = document.querySelector('#root')\\n                        root.innerHTML = '<div style=\\\"color: red\\\"><h4>Runtime Error</h4>' + err + '</div>'\\n                        console.error(err)\\n                    }\\n\\n                    window.addEventListener('error', (event) => {\\n                        event.preventDefault()\\n                        handleError(event.error)\\n                    })\\n                    \\n                    window.addEventListener('message', (event) => {\\n                        try{\\n                            eval(event.data)\\n                        } catch (err) {\\n                            handleError(err)\\n                        }\\n                    }, false)\\n                </script>\\n            </body>\\n        </html>\\n    \";// receive bundled code and execute onto iframe\nvar Preview=function Preview(_ref){var code=_ref.code,err=_ref.err;var iframe=useRef();useEffect(function(){iframe.current.srcdoc=html;setTimeout(function(){iframe.current.contentWindow.postMessage(code,'*');},50);},[code]);return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-wrapper\",children:[/*#__PURE__*/_jsx(\"iframe\",{title:\"preview\",ref:iframe,sandbox:\"allow-scripts\",srcDoc:html}),err&&/*#__PURE__*/_jsx(\"div\",{className:\"preview-error\",children:err})]});};export default Preview;","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/preview.tsx"],"names":["useRef","useEffect","html","Preview","code","err","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":"wFAAA,MAAO,eAAP,CACA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,OAAlC,CAQA,GAAMC,CAAAA,IAAI,6jCAAV,CA+BA;AACA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAoB,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,GAAW,MAAXA,GAAW,CACxD,GAAMC,CAAAA,MAAM,CAAGN,MAAM,EAArB,CAEAC,SAAS,CAAC,UAAM,CACZK,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAwBN,IAAxB,CACAO,UAAU,CAAC,UAAK,CACZH,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,CAA+C,GAA/C,EACH,CAFS,CAEP,EAFO,CAAV,CAGH,CALQ,CAKN,CAACA,IAAD,CALM,CAAT,CAOA,mBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,eAAQ,KAAK,CAAE,SAAf,CAAyB,GAAG,CAAEE,MAA9B,CAAsC,OAAO,CAAC,eAA9C,CAA8D,MAAM,CAAEJ,IAAtE,EADJ,CAEKG,GAAG,eAAI,YAAK,SAAS,CAAC,eAAf,UAAgCA,GAAhC,EAFZ,GADJ,CAMH,CAhBD,CAkBA,cAAeF,CAAAA,OAAf","sourcesContent":["import './preview.css'\r\nimport { useRef, useEffect } from 'react'\r\n\r\n\r\ninterface PreviewProps {\r\n    code: string\r\n    err: string\r\n}\r\n\r\nconst html = `\r\n        <html>\r\n            <head>\r\n                <style>html {background-color: white;} </style>\r\n            </head>\r\n            <body>\r\n                <div id=\"root\"></div>\r\n                <script>\r\n                    const handleError = (err) => {\r\n                        const root = document.querySelector('#root')\r\n                        root.innerHTML = '<div style=\"color: red\"><h4>Runtime Error</h4>' + err + '</div>'\r\n                        console.error(err)\r\n                    }\r\n\r\n                    window.addEventListener('error', (event) => {\r\n                        event.preventDefault()\r\n                        handleError(event.error)\r\n                    })\r\n                    \r\n                    window.addEventListener('message', (event) => {\r\n                        try{\r\n                            eval(event.data)\r\n                        } catch (err) {\r\n                            handleError(err)\r\n                        }\r\n                    }, false)\r\n                </script>\r\n            </body>\r\n        </html>\r\n    `\r\n\r\n// receive bundled code and execute onto iframe\r\nconst Preview: React.FC<PreviewProps> = ({ code, err  }) => {\r\n    const iframe = useRef<any>()\r\n\r\n    useEffect(() => {\r\n        iframe.current.srcdoc = html\r\n        setTimeout(() =>{\r\n            iframe.current.contentWindow.postMessage(code, '*')\r\n        }, 50)\r\n    }, [code])\r\n\r\n    return (\r\n        <div className=\"preview-wrapper\">\r\n            <iframe title =\"preview\" ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\r\n            {err && <div className=\"preview-error\">{err}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview"]},"metadata":{},"sourceType":"module"}