{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\jbook\\\\src\\\\components\\\\add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport './add-cell.css';\nimport { useActions } from '../hooks/use-actions';\n\nconst AddCell = ({\n  forceVisible,\n  previousCellId\n}) => {\n  _s();\n\n  const {\n    insertCellAfter\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `add-cell ${forceVisible && 'force-visible'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(previousCellId, 'code'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(previousCellId, 'text'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCell, \"ain1WfJPsCStQGbSx2B93tc4GvE=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/add-cell.tsx"],"names":["useActions","AddCell","forceVisible","previousCellId","insertCellAfter"],"mappings":";;;;;AAAA,OAAO,gBAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAsC;AAAA;;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,UAAU,EAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,YAAWE,YAAY,IAAI,eAAgB,EAA5D;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,uCAAlB;AAA0D,QAAA,OAAO,EAAE,MAAME,eAAe,CAACD,cAAD,EAAiB,MAAjB,CAAxF;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,SAAS,EAAC,uCAAlB;AAA0D,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACD,cAAD,EAAiB,MAAjB,CAAxF;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtBD;;GAAMF,O;UAC0BD,U;;;KAD1BC,O;AAuBN,eAAeA,OAAf","sourcesContent":["import './add-cell.css'\r\nimport { useActions } from '../hooks/use-actions'\r\n\r\ninterface AddCellProps {\r\n    previousCellId: string | null\r\n    forceVisible?: boolean\r\n}\r\n\r\nconst AddCell: React.FC<AddCellProps> = ({ forceVisible, previousCellId }) => {\r\n    const { insertCellAfter } = useActions()\r\n\r\n    return (\r\n        <div className={`add-cell ${forceVisible && 'force-visible'}`}>\r\n            <div className=\"add-buttons\">\r\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'code')}>\r\n                    <span className=\"icon is-small\">\r\n                        <i className=\"fas fa-plus\" />\r\n                    </span>\r\n                    <span>Code</span>\r\n                </button>\r\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'text')}>\r\n                    <span className=\"icon is-small\">\r\n                        <i className=\"fas fa-plus\" />\r\n                    </span>\r\n                    <span>Text</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddCell\r\n\r\n"]},"metadata":{},"sourceType":"module"}