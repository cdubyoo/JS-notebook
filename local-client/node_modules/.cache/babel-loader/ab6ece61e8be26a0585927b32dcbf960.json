{"ast":null,"code":"!function (n) {\n  n.languages.kotlin = n.languages.extend(\"clike\", {\n    keyword: {\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: !0\n    },\n    function: [/\\w+(?=\\s*\\()/, {\n      pattern: /(\\.)\\w+(?=\\s*\\{)/,\n      lookbehind: !0\n    }],\n    number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  }), delete n.languages.kotlin[\"class-name\"], n.languages.insertBefore(\"kotlin\", \"string\", {\n    \"raw-string\": {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: \"string\"\n    }\n  }), n.languages.insertBefore(\"kotlin\", \"keyword\", {\n    annotation: {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: \"builtin\"\n    }\n  }), n.languages.insertBefore(\"kotlin\", \"function\", {\n    label: {\n      pattern: /\\w+@|@\\w+/,\n      alias: \"symbol\"\n    }\n  });\n  var e = [{\n    pattern: /\\$\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^\\$\\{|\\}$/,\n        alias: \"variable\"\n      },\n      rest: n.languages.kotlin\n    }\n  }, {\n    pattern: /\\$\\w+/,\n    alias: \"variable\"\n  }];\n  n.languages.kotlin.string.inside = n.languages.kotlin[\"raw-string\"].inside = {\n    interpolation: e\n  }, n.languages.kt = n.languages.kotlin, n.languages.kts = n.languages.kotlin;\n}(Prism);","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-kotlin.min.js"],"names":["n","languages","kotlin","extend","keyword","pattern","lookbehind","function","number","operator","insertBefore","alias","annotation","label","e","inside","delimiter","rest","string","interpolation","kt","kts","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAACA,EAAAA,CAAC,CAACC,SAAF,CAAYC,MAAZ,GAAmBF,CAAC,CAACC,SAAF,CAAYE,MAAZ,CAAmB,OAAnB,EAA2B;AAACC,IAAAA,OAAO,EAAC;AAACC,MAAAA,OAAO,EAAC,0bAAT;AAAocC,MAAAA,UAAU,EAAC,CAAC;AAAhd,KAAT;AAA4dC,IAAAA,QAAQ,EAAC,CAAC,cAAD,EAAgB;AAACF,MAAAA,OAAO,EAAC,kBAAT;AAA4BC,MAAAA,UAAU,EAAC,CAAC;AAAxC,KAAhB,CAAre;AAAiiBE,IAAAA,MAAM,EAAC,iIAAxiB;AAA0qBC,IAAAA,QAAQ,EAAC;AAAnrB,GAA3B,CAAnB,EAA00B,OAAOT,CAAC,CAACC,SAAF,CAAYC,MAAZ,CAAmB,YAAnB,CAAj1B,EAAk3BF,CAAC,CAACC,SAAF,CAAYS,YAAZ,CAAyB,QAAzB,EAAkC,QAAlC,EAA2C;AAAC,kBAAa;AAACL,MAAAA,OAAO,EAAC,qBAAT;AAA+BM,MAAAA,KAAK,EAAC;AAArC;AAAd,GAA3C,CAAl3B,EAA49BX,CAAC,CAACC,SAAF,CAAYS,YAAZ,CAAyB,QAAzB,EAAkC,SAAlC,EAA4C;AAACE,IAAAA,UAAU,EAAC;AAACP,MAAAA,OAAO,EAAC,qCAAT;AAA+CM,MAAAA,KAAK,EAAC;AAArD;AAAZ,GAA5C,CAA59B,EAAslCX,CAAC,CAACC,SAAF,CAAYS,YAAZ,CAAyB,QAAzB,EAAkC,UAAlC,EAA6C;AAACG,IAAAA,KAAK,EAAC;AAACR,MAAAA,OAAO,EAAC,WAAT;AAAqBM,MAAAA,KAAK,EAAC;AAA3B;AAAP,GAA7C,CAAtlC;AAAirC,MAAIG,CAAC,GAAC,CAAC;AAACT,IAAAA,OAAO,EAAC,aAAT;AAAuBU,IAAAA,MAAM,EAAC;AAACC,MAAAA,SAAS,EAAC;AAACX,QAAAA,OAAO,EAAC,WAAT;AAAqBM,QAAAA,KAAK,EAAC;AAA3B,OAAX;AAAkDM,MAAAA,IAAI,EAACjB,CAAC,CAACC,SAAF,CAAYC;AAAnE;AAA9B,GAAD,EAA2G;AAACG,IAAAA,OAAO,EAAC,OAAT;AAAiBM,IAAAA,KAAK,EAAC;AAAvB,GAA3G,CAAN;AAAqJX,EAAAA,CAAC,CAACC,SAAF,CAAYC,MAAZ,CAAmBgB,MAAnB,CAA0BH,MAA1B,GAAiCf,CAAC,CAACC,SAAF,CAAYC,MAAZ,CAAmB,YAAnB,EAAiCa,MAAjC,GAAwC;AAACI,IAAAA,aAAa,EAACL;AAAf,GAAzE,EAA2Fd,CAAC,CAACC,SAAF,CAAYmB,EAAZ,GAAepB,CAAC,CAACC,SAAF,CAAYC,MAAtH,EAA6HF,CAAC,CAACC,SAAF,CAAYoB,GAAZ,GAAgBrB,CAAC,CAACC,SAAF,CAAYC,MAAzJ;AAAgK,CAAl/C,CAAm/CoB,KAAn/C,CAAD","sourcesContent":["!function(n){n.languages.kotlin=n.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:!0},function:[/\\w+(?=\\s*\\()/,{pattern:/(\\.)\\w+(?=\\s*\\{)/,lookbehind:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete n.languages.kotlin[\"class-name\"],n.languages.insertBefore(\"kotlin\",\"string\",{\"raw-string\":{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,alias:\"string\"}}),n.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),n.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\w+@|@\\w+/,alias:\"symbol\"}});var e=[{pattern:/\\$\\{[^}]+\\}/,inside:{delimiter:{pattern:/^\\$\\{|\\}$/,alias:\"variable\"},rest:n.languages.kotlin}},{pattern:/\\$\\w+/,alias:\"variable\"}];n.languages.kotlin.string.inside=n.languages.kotlin[\"raw-string\"].inside={interpolation:e},n.languages.kt=n.languages.kotlin,n.languages.kts=n.languages.kotlin}(Prism);"]},"metadata":{},"sourceType":"script"}