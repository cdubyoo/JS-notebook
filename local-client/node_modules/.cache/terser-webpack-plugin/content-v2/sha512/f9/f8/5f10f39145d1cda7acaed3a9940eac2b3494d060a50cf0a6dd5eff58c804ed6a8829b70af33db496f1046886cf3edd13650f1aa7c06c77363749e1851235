{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[422],{590:function(e,t){!function(e){e.languages.tt2=e.languages.extend(\"clike\",{comment:/#.*|\\[%#[\\s\\S]*?%\\]/,keyword:/\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,punctuation:/[[\\]{},()]/}),e.languages.insertBefore(\"tt2\",\"number\",{operator:/=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,variable:{pattern:/\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i}}),e.languages.insertBefore(\"tt2\",\"keyword\",{delimiter:{pattern:/^(?:\\[%|%%)-?|-?%]$/,alias:\"punctuation\"}}),e.languages.insertBefore(\"tt2\",\"string\",{\"single-quoted-string\":{pattern:/'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,greedy:!0,alias:\"string\"},\"double-quoted-string\":{pattern:/\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,greedy:!0,alias:\"string\",inside:{variable:{pattern:/\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i}}}}),delete e.languages.tt2.string,e.hooks.add(\"before-tokenize\",(function(t){e.languages[\"markup-templating\"].buildPlaceholders(t,\"tt2\",/\\[%[\\s\\S]+?%\\]/g)})),e.hooks.add(\"after-tokenize\",(function(t){e.languages[\"markup-templating\"].tokenizePlaceholders(t,\"tt2\")}))}(Prism)}}]);","name":"static/js/422.431c7e3d.chunk.js","map":{"version":3,"sources":["static/js/422.431c7e3d.chunk.js"],"names":["this","push","590","module","exports","Prism","languages","tt2","extend","comment","keyword","punctuation","insertBefore","operator","variable","pattern","delimiter","alias","single-quoted-string","greedy","double-quoted-string","inside","string","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,IAAMF,EAAMC,UAAUE,OAAO,QAAS,CACpDC,QAAW,sBACXC,QAAW,0NACXC,YAAe,eAEjBN,EAAMC,UAAUM,aAAa,MAAO,SAAU,CAC5CC,SAAY,iDACZC,SAAY,CACVC,QAAS,mDAGbV,EAAMC,UAAUM,aAAa,MAAO,UAAW,CAC7CI,UAAa,CACXD,QAAS,sBACTE,MAAO,iBAGXZ,EAAMC,UAAUM,aAAa,MAAO,SAAU,CAC5CM,uBAAwB,CACtBH,QAAS,gCACTI,QAAQ,EACRF,MAAO,UAETG,uBAAwB,CACtBL,QAAS,gCACTI,QAAQ,EACRF,MAAO,SACPI,OAAQ,CACNP,SAAY,CACVC,QAAS,wDAMVV,EAAMC,UAAUC,IAAIe,OAC3BjB,EAAMkB,MAAMC,IAAI,mBAAmB,SAAUC,GAE3CpB,EAAMC,UAAU,qBAAqBoB,kBAAkBD,EAAK,MAD3C,sBAGnBpB,EAAMkB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CpB,EAAMC,UAAU,qBAAqBqB,qBAAqBF,EAAK,UA1CnE,CA4CGpB"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[422],{\n\n/***/ 590:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.tt2 = Prism.languages.extend('clike', {\n    'comment': /#.*|\\[%#[\\s\\S]*?%\\]/,\n    'keyword': /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    'punctuation': /[[\\]{},()]/\n  });\n  Prism.languages.insertBefore('tt2', 'number', {\n    'operator': /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    'variable': {\n      pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'keyword', {\n    'delimiter': {\n      pattern: /^(?:\\[%|%%)-?|-?%]$/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'string', {\n    'single-quoted-string': {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'variable': {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  }); // The different types of TT2 strings \"replace\" the C-like standard string\n\n  delete Prism.languages.tt2.string;\n  Prism.hooks.add('before-tokenize', function (env) {\n    var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n  });\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-tt2.js"],"names":["Prism","languages","tt2","extend","insertBefore","pattern","alias","greedy","inside","string","hooks","add","env","tt2Pattern","buildPlaceholders","tokenizePlaceholders"],"mappings":";;;;;AAAC,WAASA,KAAT,EAAgB;AAEhBA,OAAK,CAACC,SAAN,CAAgBC,GAAhB,GAAsBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACrD,eAAW,qBAD0C;AAErD,eAAW,yNAF0C;AAGrD,mBAAe;AAHsC,GAAhC,CAAtB;AAMAH,OAAK,CAACC,SAAN,CAAgBG,YAAhB,CAA6B,KAA7B,EAAoC,QAApC,EAA8C;AAC7C,gBAAY,gDADiC;AAE7C,gBAAY;AACXC,aAAO,EAAE;AADE;AAFiC,GAA9C;AAOAL,OAAK,CAACC,SAAN,CAAgBG,YAAhB,CAA6B,KAA7B,EAAoC,SAApC,EAA+C;AAC9C,iBAAa;AACZC,aAAO,EAAE,qBADG;AAEZC,WAAK,EAAE;AAFK;AADiC,GAA/C;AAOAN,OAAK,CAACC,SAAN,CAAgBG,YAAhB,CAA6B,KAA7B,EAAoC,QAApC,EAA8C;AAC7C,4BAAwB;AACvBC,aAAO,EAAE,+BADc;AAEvBE,YAAM,EAAE,IAFe;AAGvBD,WAAK,EAAE;AAHgB,KADqB;AAM7C,4BAAwB;AACvBD,aAAO,EAAE,+BADc;AAEvBE,YAAM,EAAE,IAFe;AAGvBD,WAAK,EAAE,QAHgB;AAIvBE,YAAM,EAAE;AACP,oBAAY;AACXH,iBAAO,EAAE;AADE;AADL;AAJe;AANqB,GAA9C,EAtBgB,CAwChB;;AACA,SAAOL,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBO,MAA3B;AAEAT,OAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAASC,GAAT,EAAc;AAChD,QAAIC,UAAU,GAAG,iBAAjB;AACAb,SAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCa,iBAArC,CAAuDF,GAAvD,EAA4D,KAA5D,EAAmEC,UAAnE;AACA,GAHD;AAKAb,OAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAASC,GAAT,EAAc;AAC/CZ,SAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCc,oBAArC,CAA0DH,GAA1D,EAA+D,KAA/D;AACA,GAFD;AAIA,CApDA,EAoDCZ,KApDD,CAAD,C","file":"x","sourcesContent":["(function(Prism) {\n\n\tPrism.languages.tt2 = Prism.languages.extend('clike', {\n\t\t'comment': /#.*|\\[%#[\\s\\S]*?%\\]/,\n\t\t'keyword': /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n\t\t'punctuation': /[[\\]{},()]/\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'number', {\n\t\t'operator': /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n\t\t'variable': {\n\t\t\tpattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'keyword', {\n\t\t'delimiter': {\n\t\t\tpattern: /^(?:\\[%|%%)-?|-?%]$/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'string', {\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// The different types of TT2 strings \"replace\" the C-like standard string\n\tdelete Prism.languages.tt2.string;\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n\t});\n\n}(Prism));\n"]}}