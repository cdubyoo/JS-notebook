{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\jbook\\\\src\\\\components\\\\cell-list-item.tsx\";\nimport './cell-list-item.css';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextEditor, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBar, {\n        id: cell.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":";;;AAAA,OAAO,sBAAP;AAEA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAMA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5D,MAAIC,KAAJ;;AACA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACtBD,IAAAA,KAAK,gBACD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAIA,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBADJ;AAQH,GATD,MASO;AACHC,IAAAA,KAAK,gBAAG;AAAA,8BACJ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEA,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA,oBAAR;AAIH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;KAAMF,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import './cell-list-item.css'\r\nimport { Cell } from '../state'\r\nimport CodeCell from './code-cell'\r\nimport TextEditor from './text-editor'\r\nimport ActionBar from './action-bar'\r\n\r\ninterface CellListItemProps {\r\n    cell: Cell\r\n}\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\r\n    let child: JSX.Element\r\n    if (cell.type === 'code') {\r\n        child = (\r\n            <>\r\n                <div className=\"action-bar-wrapper\">\r\n                    <ActionBar id={cell.id} />\r\n                </div>\r\n            <CodeCell cell={cell}/>\r\n            </>\r\n        )\r\n    } else {\r\n        child = <>\r\n            <TextEditor cell={cell} />\r\n            <ActionBar id={cell.id} />\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <div className=\"cell-list-item\">\r\n            {child}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CellListItem"]},"metadata":{},"sourceType":"module"}