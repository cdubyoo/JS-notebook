{"code":"(this.webpackJsonpjbook=this.webpackJsonpjbook||[]).push([[376],{544:function(s,n){!function(s){var n=[/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source,/<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source].join(\"|\");s.languages[\"shell-session\"]={info:{pattern:/^[^\\r\\n$#*!]+(?=[$#])/m,alias:\"punctuation\",inside:{path:{pattern:/(:)[\\s\\S]+/,lookbehind:!0},user:/^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,punctuation:/:/}},command:{pattern:RegExp(/[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g,(function(){return n}))),greedy:!0,inside:{bash:{pattern:/(^[$#]\\s*)[\\s\\S]+/,lookbehind:!0,alias:\"language-bash\",inside:s.languages.bash},\"shell-symbol\":{pattern:/^[$#]/,alias:\"important\"}}},output:/.(?:.*(?:[\\r\\n]|.$))*/},s.languages[\"sh-session\"]=s.languages.shellsession=s.languages[\"shell-session\"]}(Prism)}}]);","name":"static/js/376.47df524b.chunk.js","map":{"version":3,"sources":["static/js/376.47df524b.chunk.js"],"names":["this","push","544","module","exports","Prism","strings","source","join","languages","info","pattern","alias","inside","path","lookbehind","user","punctuation","command","RegExp","replace","greedy","bash","shell-symbol","output"],"mappings":"CAACA,KAAwB,kBAAIA,KAAwB,mBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEpEC,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAGT,IAAIC,EAAU,CAEd,wDAAwDC,OAExD,0CAA0CA,QAAQC,KAAK,KACvDH,EAAMI,UAAU,iBAAmB,CACjCC,KAAQ,CAGNC,QAAS,yBACTC,MAAO,cACPC,OAAQ,CACNC,KAAQ,CACNH,QAAS,aACTI,YAAY,GAEdC,KAAQ,0CACRC,YAAe,MAGnBC,QAAW,CACTP,QAASQ,OAAO,oCAAoCZ,OAAOa,QAAQ,YAAY,WAC7E,OAAOd,MAETe,QAAQ,EACRR,OAAQ,CACNS,KAAQ,CACNX,QAAS,oBACTI,YAAY,EACZH,MAAO,gBACPC,OAAQR,EAAMI,UAAUa,MAE1BC,eAAgB,CACdZ,QAAS,QACTC,MAAO,eAIbY,OAAU,yBAEZnB,EAAMI,UAAU,cAAgBJ,EAAMI,UAAwB,aAAIJ,EAAMI,UAAU,iBA3CpF,CA4CGJ"},"input":"(this[\"webpackJsonpjbook\"] = this[\"webpackJsonpjbook\"] || []).push([[376],{\n\n/***/ 544:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // CAREFUL!\n  // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n  var strings = [// normal string\n  // 1 capturing group\n  /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source, // here doc\n  // 2 capturing groups\n  /<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source].join('|');\n  Prism.languages['shell-session'] = {\n    'info': {\n      // foo@bar:~/files$ exit\n      // foo@bar$ exit\n      pattern: /^[^\\r\\n$#*!]+(?=[$#])/m,\n      alias: 'punctuation',\n      inside: {\n        'path': {\n          pattern: /(:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        'user': /^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,\n        'punctuation': /:/\n      }\n    },\n    'command': {\n      pattern: RegExp(/[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () {\n        return strings;\n      })),\n      greedy: true,\n      inside: {\n        'bash': {\n          pattern: /(^[$#]\\s*)[\\s\\S]+/,\n          lookbehind: true,\n          alias: 'language-bash',\n          inside: Prism.languages.bash\n        },\n        'shell-symbol': {\n          pattern: /^[$#]/,\n          alias: 'important'\n        }\n      }\n    },\n    'output': /.(?:.*(?:[\\r\\n]|.$))*/\n  };\n  Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/User/Desktop/jbook/node_modules/prismjs/components/prism-shell-session.js"],"names":["Prism","strings","source","join","languages","pattern","alias","inside","lookbehind","RegExp","replace","greedy","bash"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AAEjB;AACA;AAEA,MAAIC,OAAO,GAAG,CACb;AACA;AACA,0DAAwDC,MAH3C,EAKb;AACA;AACA,4CAA0CA,MAP7B,EAQZC,IARY,CAQP,GARO,CAAd;AAUAH,OAAK,CAACI,SAAN,CAAgB,eAAhB,IAAmC;AAClC,YAAQ;AACP;AACA;AACAC,aAAO,EAAE,wBAHF;AAIPC,WAAK,EAAE,aAJA;AAKPC,YAAM,EAAE;AACP,gBAAQ;AACPF,iBAAO,EAAE,YADF;AAEPG,oBAAU,EAAE;AAFL,SADD;AAKP,gBAAQ,yCALD;AAMP,uBAAe;AANR;AALD,KAD0B;AAelC,eAAW;AACVH,aAAO,EAAEI,MAAM,CAAC,oCAAoCP,MAApC,CAA2CQ,OAA3C,CAAmD,UAAnD,EAA+D,YAAY;AAAE,eAAOT,OAAP;AAAiB,OAA9F,CAAD,CADL;AAEVU,YAAM,EAAE,IAFE;AAGVJ,YAAM,EAAE;AACP,gBAAQ;AACPF,iBAAO,EAAE,mBADF;AAEPG,oBAAU,EAAE,IAFL;AAGPF,eAAK,EAAE,eAHA;AAIPC,gBAAM,EAAEP,KAAK,CAACI,SAAN,CAAgBQ;AAJjB,SADD;AAOP,wBAAgB;AACfP,iBAAO,EAAE,OADM;AAEfC,eAAK,EAAE;AAFQ;AAPT;AAHE,KAfuB;AA+BlC,cAAU;AA/BwB,GAAnC;AAkCAN,OAAK,CAACI,SAAN,CAAgB,YAAhB,IAAgCJ,KAAK,CAACI,SAAN,CAAgB,cAAhB,IAAkCJ,KAAK,CAACI,SAAN,CAAgB,eAAhB,CAAlE;AAEA,CAnDA,EAmDCJ,KAnDD,CAAD,C","file":"x","sourcesContent":["(function (Prism) {\n\n\t// CAREFUL!\n\t// The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n\tvar strings = [\n\t\t// normal string\n\t\t// 1 capturing group\n\t\t/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/.source,\n\n\t\t// here doc\n\t\t// 2 capturing groups\n\t\t/<<-?\\s*([\"']?)(\\w+)\\2\\s[\\s\\S]*?[\\r\\n]\\3/.source\n\t].join('|');\n\n\tPrism.languages['shell-session'] = {\n\t\t'info': {\n\t\t\t// foo@bar:~/files$ exit\n\t\t\t// foo@bar$ exit\n\t\t\tpattern: /^[^\\r\\n$#*!]+(?=[$#])/m,\n\t\t\talias: 'punctuation',\n\t\t\tinside: {\n\t\t\t\t'path': {\n\t\t\t\t\tpattern: /(:)[\\s\\S]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'user': /^[^\\s@:$#*!/\\\\]+@[^\\s@:$#*!/\\\\]+(?=:|$)/,\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'command': {\n\t\t\tpattern: RegExp(/[$#](?:[^\\\\\\r\\n'\"<]|\\\\.|<<str>>)+/.source.replace(/<<str>>/g, function () { return strings; })),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpattern: /(^[$#]\\s*)[\\s\\S]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-bash',\n\t\t\t\t\tinside: Prism.languages.bash\n\t\t\t\t},\n\t\t\t\t'shell-symbol': {\n\t\t\t\t\tpattern: /^[$#]/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'output': /.(?:.*(?:[\\r\\n]|.$))*/\n\t};\n\n\tPrism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n\n}(Prism));\n"]}}