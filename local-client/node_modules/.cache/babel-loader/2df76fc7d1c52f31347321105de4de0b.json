{"ast":null,"code":"// override ESBuild to create bundle inside browser\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n\n    setup(build) {\n      // handle root entry file of index.js\n      build.onResolve({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          path: 'index.js',\n          namespace: 'a'\n        };\n      }); // handle relative paths in a module\n\n      build.onResolve({\n        filter: /^\\.+\\//\n      }, args => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href\n        };\n      }); // on resolve called whenever esbuild tries to find path for a module\n      // handle main file of a module\n\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        // generate url using path\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/jbook/src/bundler/plugins/unpkg-path-plugin.ts"],"names":["unpkgPathPlugin","name","setup","build","onResolve","filter","path","namespace","args","URL","resolveDir","href"],"mappings":"AAEA;AACA,OAAO,MAAMA,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;;AAEHC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAC9B;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAA6C,MAAM;AAC/C,eAAO;AAACC,UAAAA,IAAI,EAAC,UAAN;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAP;AACH,OAFD,EAF8B,CAK9B;;AACAJ,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAuCG,IAAD,IAAc;AAChD,eAAO;AACHD,UAAAA,SAAS,EAAE,GADR;AAEHD,UAAAA,IAAI,EAAE,IAAIG,GAAJ,CAAQD,IAAI,CAACF,IAAb,EAAmB,sBAAqBE,IAAI,CAACE,UAA1B,GAAuC,GAA1D,EAA+DC;AAFlE,SAAP;AAIH,OALD,EAN8B,CAa9B;AACA;;AACAR,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOG,IAAP,IAAqB;AACnD;AACA,eAAO;AACHD,UAAAA,SAAS,EAAE,GADR;AAEHD,UAAAA,IAAI,EAAG,qBAAoBE,IAAI,CAACF,IAAK;AAFlC,SAAP;AAIH,OAND;AAOH;;AAxBE,GAAP;AA0BH,CA3BM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\r\n\r\n// override ESBuild to create bundle inside browser\r\nexport const unpkgPathPlugin = () => {\r\n    return {\r\n        name: 'unpkg-path-plugin',\r\n        setup(build: esbuild.PluginBuild) {\r\n            // handle root entry file of index.js\r\n            build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n                return {path:'index.js', namespace: 'a' }\r\n            })\r\n            // handle relative paths in a module\r\n            build.onResolve({ filter: /^\\.+\\// }, (args:any) => {\r\n                return {\r\n                    namespace: 'a',\r\n                    path: new URL(args.path, 'https://unpkg.com'+ args.resolveDir + '/').href\r\n                }\r\n            })\r\n\r\n            // on resolve called whenever esbuild tries to find path for a module\r\n            // handle main file of a module\r\n            build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n                // generate url using path\r\n                return {\r\n                    namespace: 'a',\r\n                    path: `https://unpkg.com/${args.path}`\r\n                }\r\n            });\r\n        },\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}